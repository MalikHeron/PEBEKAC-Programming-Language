Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOSTROPHE
    ARROW
    AT
    BACKSLASH
    BREAK
    DIVIDEASSIGN
    DOT
    DOUBLEQUOTE
    HASH
    INPUT
    MINUSASSIGN
    MODASSIGN
    NEW
    NULL
    PARAMS
    PIPE
    PLUSASSIGN
    SLASH
    TIMESASSIGN

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> stmt stmt_list
Rule 3     stmt_list -> stmt
Rule 4     stmt_list -> empty
Rule 5     stmt -> class_declaration
Rule 6     stmt -> fun_declaration
Rule 7     stmt -> import_declaration
Rule 8     stmt -> assignment
Rule 9     stmt -> variable_declaration
Rule 10    stmt -> print_stmt
Rule 11    stmt -> control_structure
Rule 12    stmt -> return_stmt
Rule 13    stmt -> function_call
Rule 14    stmt -> empty
Rule 15    class_declaration -> CLASS identifier LBRACE stmt_list RBRACE
Rule 16    fun_declaration -> general_type FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
Rule 17    fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
Rule 18    fun_call -> identifier LPAREN params RPAREN SEMICOLON
Rule 19    return_stmt -> RETURN expression SEMICOLON
Rule 20    break_continue_stmt -> BREAK SEMICOLON
Rule 21    break_continue_stmt -> CONTINUE SEMICOLON
Rule 22    params -> general_type identifier COMMA params
Rule 23    params -> general_type identifier
Rule 24    params -> empty
Rule 25    import_declaration -> IMPORT STRING_LITERAL
Rule 26    variable_declaration -> general_type identifier SEMICOLON
Rule 27    variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON
Rule 28    variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON
Rule 29    assignment -> general_type identifier ASSIGN expression SEMICOLON
Rule 30    assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
Rule 31    assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
Rule 32    assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
Rule 33    assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
Rule 34    assignment -> identifier ASSIGN expression SEMICOLON
Rule 35    control_structure -> if_stmt
Rule 36    control_structure -> for_stmt
Rule 37    control_structure -> while_stmt
Rule 38    control_structure -> switch_stmt
Rule 39    arg_list -> expression COMMA arg_list
Rule 40    arg_list -> expression
Rule 41    if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
Rule 42    if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
Rule 43    if_stmt -> expression QUESTION expression COLON expression SEMICOLON
Rule 44    for_stmt -> FOR LPAREN assignment SEMICOLON expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
Rule 45    while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
Rule 46    switch_stmt -> SWITCH LPAREN expression RPAREN LBRACE case_stmts default_stmt RBRACE
Rule 47    case_stmts -> CASE expression COLON stmt_list case_stmts
Rule 48    case_stmts -> empty
Rule 49    default_stmt -> DEFAULT COLON stmt_list
Rule 50    default_stmt -> empty
Rule 51    expression -> expression PLUS expression
Rule 52    expression -> expression MINUS expression
Rule 53    expression -> expression MULTIPLY expression
Rule 54    expression -> expression DIVIDE expression
Rule 55    expression -> expression MODULUS expression
Rule 56    expression -> expression AND expression
Rule 57    expression -> expression OR expression
Rule 58    expression -> expression EQUAL expression
Rule 59    expression -> expression NOTEQUAL expression
Rule 60    expression -> expression LESSTHAN expression
Rule 61    expression -> expression GREATERTHAN expression
Rule 62    expression -> expression LESSTHANEQUAL expression
Rule 63    expression -> expression GREATERTHANEQUAL expression
Rule 64    expression -> expression INCREMENT
Rule 65    expression -> expression DECREMENT
Rule 66    expression -> expression COMMA expression
Rule 67    expression -> expression POW expression
Rule 68    expression -> NOT expression
Rule 69    expression -> LPAREN expression RPAREN
Rule 70    expression -> identifier
Rule 71    expression -> digit
Rule 72    expression -> string
Rule 73    expression -> boolean
Rule 74    expression -> identifier LBRACKET expression RBRACKET
Rule 75    expression -> identifier LBRACE expression RBRACE
Rule 76    digit -> NUMBER
Rule 77    boolean -> TRUE
Rule 78    boolean -> FALSE
Rule 79    general_type -> INT
Rule 80    general_type -> FLOAT
Rule 81    general_type -> DOUBLE
Rule 82    general_type -> STRING
Rule 83    general_type -> BOOLEAN
Rule 84    general_type -> identifier
Rule 85    array_type -> INTARRAY
Rule 86    array_type -> FLOATARRAY
Rule 87    array_type -> STRINGARRAY
Rule 88    array_type -> DOUBLEARRAY
Rule 89    list_type -> INTLIST
Rule 90    list_type -> FLOATLIST
Rule 91    list_type -> STRINGLIST
Rule 92    list_type -> DOUBLELIST
Rule 93    identifier -> IDENTIFIER
Rule 94    comment -> COMMENT
Rule 95    string -> STRING_LITERAL
Rule 96    empty -> <empty>

Terminals, with rules where they appear

AND                  : 56
APOSTROPHE           : 
ARGS                 : 
ARROW                : 
ASSIGN               : 29 30 31 32 33 34
AT                   : 
BACKSLASH            : 
BOOLEAN              : 83
BREAK                : 20
CASE                 : 47
CLASS                : 15
COLON                : 43 47 49
COMMA                : 22 39 66
COMMENT              : 94
CONTINUE             : 21
DECREMENT            : 65
DEFAULT              : 49
DIVIDE               : 54
DIVIDEASSIGN         : 
DOT                  : 
DOUBLE               : 81
DOUBLEARRAY          : 88
DOUBLELIST           : 92
DOUBLEQUOTE          : 
ELSE                 : 42
EQUAL                : 58
FALSE                : 78
FLOAT                : 80
FLOATARRAY           : 86
FLOATLIST            : 90
FOR                  : 44
FUN                  : 16 17
GREATERTHAN          : 61
GREATERTHANEQUAL     : 63
HASH                 : 
IDENTIFIER           : 93
IF                   : 41 42
IMPORT               : 25
INCREMENT            : 64
INPUT                : 
INT                  : 79
INTARRAY             : 85
INTLIST              : 89
LBRACE               : 15 16 17 28 32 33 41 42 42 44 45 46 75
LBRACKET             : 27 30 31 74
LESSTHAN             : 60
LESSTHANEQUAL        : 62
LPAREN               : 16 17 18 41 42 44 45 46 69
MINUS                : 52
MINUSASSIGN          : 
MODASSIGN            : 
MODULUS              : 55
MULTIPLY             : 53
NEW                  : 
NOT                  : 68
NOTEQUAL             : 59
NULL                 : 
NUMBER               : 76
OR                   : 57
PARAMS               : 
PIPE                 : 
PLUS                 : 51
PLUSASSIGN           : 
POW                  : 67
PRINT                : 
QUESTION             : 43
RBRACE               : 15 16 17 28 32 33 41 42 42 44 45 46 75
RBRACKET             : 27 30 31 74
RETURN               : 19
RPAREN               : 16 17 18 41 42 44 45 46 69
SEMICOLON            : 18 19 20 21 26 27 28 29 30 31 32 33 34 43 44 44
SLASH                : 
STRING               : 82
STRINGARRAY          : 87
STRINGLIST           : 91
STRING_LITERAL       : 25 95
SWITCH               : 46
TIMESASSIGN          : 
TRUE                 : 77
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

arg_list             : 39
array_type           : 28 32 33
assignment           : 8 44
boolean              : 73
break_continue_stmt  : 
case_stmts           : 46 47
class_declaration    : 5
comment              : 
control_structure    : 11
default_stmt         : 46
digit                : 30 32 71
empty                : 4 14 24 48 50
expression           : 19 29 30 31 32 33 34 39 40 41 42 43 43 43 44 44 45 46 47 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 65 66 66 67 67 68 69 74 75
for_stmt             : 36
fun_call             : 
fun_declaration      : 6
function_call        : 13
general_type         : 16 22 23 26 29
identifier           : 15 16 17 18 22 23 26 27 28 29 30 31 32 33 34 70 74 75 84
if_stmt              : 35
import_declaration   : 7
list_type            : 27 30 31
params               : 16 17 18 22
print_stmt           : 10
program              : 0
return_stmt          : 12
stmt                 : 2 3
stmt_list            : 1 2 15 16 17 41 42 42 44 45 47 49
string               : 72
switch_stmt          : 38
variable_declaration : 9
while_stmt           : 37

