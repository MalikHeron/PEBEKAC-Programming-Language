
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOSTROPHE ARROW ASSIGN AT BACKSLASH BOOLEAN BREAK CASE CLASS COLON COMMA DECREMENT DEFAULT DIVIDE DIVIDEASSIGN DOT DOUBLE DOUBLEARRAY DOUBLELIST DOUBLEQUOTE ELSE EQUAL FALSE FLOAT FLOATARRAY FLOATLIST FOR FUN GREATERTHAN GREATERTHANEQUAL HASH IDENTIFIER IF IMPORT INCREMENT INPUT INT INTARRAY INTLIST LBRACE LBRACKET LESSTHAN LESSTHANEQUAL LPAREN MINUS MINUSASSIGN MODASSIGN MODULUS MULTIPLY NEW NOT NOTEQUAL NULL NUMBER OR PARAMS PIPE PLUS PLUSASSIGN POW PRINT QUESTION RBRACE RBRACKET RETURN RPAREN SEMICOLON SLASH STRING STRINGARRAY STRINGLIST STRING_LITERAL SWITCH TIMESASSIGN TRUE WHILE\n    program : stmt_list\n    \n    stmt_list : stmt stmt_list\n              | stmt\n              | empty\n    \n    stmt : class_declaration\n         | fun_declaration\n         | import_declaration\n         | assignment\n         | variable_declaration\n         | print_stmt\n         | control_structure\n         | empty\n    \n    class_declaration : CLASS identifier LBRACE stmt_list RBRACE\n    \n    fun_declaration : FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE\n    \n    params : general_type identifier COMMA params\n           | general_type identifier\n           | empty\n    \n    import_declaration : IMPORT STRING_LITERAL\n    \n    variable_declaration : general_type identifier SEMICOLON\n                         | list_type identifier LBRACKET RBRACKET SEMICOLON\n                         | array_type identifier LBRACE RBRACE SEMICOLON\n    \n    assignment : general_type identifier ASSIGN expression SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON\n               | list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON\n               | array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON\n               | array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON\n               | identifier ASSIGN expression SEMICOLON\n    \n    print_stmt : PRINT LPAREN expression RPAREN SEMICOLON\n    \n    control_structure : if_stmt\n                      | for_stmt\n                      | while_stmt\n                      | switch_stmt\n    \n    if_stmt : IF LPAREN expression RPAREN LBRACE stmt_list RBRACE\n            | IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE\n            | expression QUESTION expression COLON expression SEMICOLON\n    \n    for_stmt : FOR LPAREN assignment SEMICOLON expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE\n    \n    while_stmt : WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE\n    \n    switch_stmt : SWITCH LPAREN expression RPAREN LBRACE case_stmts default_stmt RBRACE\n    \n    case_stmts : CASE expression COLON stmt_list case_stmts\n               | empty\n    \n    default_stmt : DEFAULT COLON stmt_list\n                 | empty\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression MODULUS expression\n               | expression AND expression\n               | expression OR expression\n               | expression EQUAL expression\n               | expression NOTEQUAL expression\n               | expression LESSTHAN expression\n               | expression GREATERTHAN expression\n               | expression LESSTHANEQUAL expression\n               | expression GREATERTHANEQUAL expression\n               | expression INCREMENT\n               | expression DECREMENT\n               | expression COMMA expression\n               | expression POW expression\n               | NOT expression\n               | LPAREN expression RPAREN\n               | IDENTIFIER\n               | digit\n               | STRING_LITERAL\n               | boolean\n               | IDENTIFIER LBRACKET expression RBRACKET\n               | IDENTIFIER LBRACE expression RBRACE\n    \n    digit : NUMBER\n    \n    boolean : TRUE\n            | FALSE\n    \n    general_type : INT\n                 | FLOAT\n                 | DOUBLE\n                 | STRING\n                 | BOOLEAN\n                 | identifier\n    \n    array_type : INTARRAY\n               | FLOATARRAY\n               | STRINGARRAY\n               | DOUBLEARRAY\n    \n    list_type : INTLIST\n              | FLOATLIST\n              | STRINGLIST\n              | DOUBLELIST\n    \n    identifier : IDENTIFIER\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,24,25,26,27,51,58,93,125,148,151,154,157,159,168,182,184,185,187,192,193,194,197,207,208,],[-86,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-2,-18,-19,-27,-13,-22,-20,-21,-28,-35,-24,-26,-33,-37,-14,-23,-25,-38,-34,-36,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[12,12,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,12,-19,-27,-13,-22,-20,-21,-28,12,12,12,-35,-24,-26,-33,-37,-14,-23,-25,-38,12,12,12,12,-34,-36,]),'FUN':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[14,14,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,14,-19,-27,-13,-22,-20,-21,-28,14,14,14,-35,-24,-26,-33,-37,-14,-23,-25,-38,14,14,14,14,-34,-36,]),'IMPORT':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[16,16,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,16,-19,-27,-13,-22,-20,-21,-28,16,16,16,-35,-24,-26,-33,-37,-14,-23,-25,-38,16,16,16,16,-34,-36,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[23,23,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,23,-19,-27,-13,-22,-20,-21,-28,23,23,23,-35,-24,-26,-33,-37,-14,-23,-25,-38,23,23,23,23,-34,-36,]),'INT':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,90,93,125,148,151,154,157,159,160,164,166,167,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[28,28,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,28,28,28,-19,-27,-13,-22,-20,-21,-28,28,28,28,28,-35,-24,-26,-33,-37,-14,-23,-25,-38,28,28,28,28,-34,-36,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,90,93,125,148,151,154,157,159,160,164,166,167,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[29,29,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,29,29,29,-19,-27,-13,-22,-20,-21,-28,29,29,29,29,-35,-24,-26,-33,-37,-14,-23,-25,-38,29,29,29,29,-34,-36,]),'DOUBLE':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,90,93,125,148,151,154,157,159,160,164,166,167,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[30,30,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,30,30,30,-19,-27,-13,-22,-20,-21,-28,30,30,30,30,-35,-24,-26,-33,-37,-14,-23,-25,-38,30,30,30,30,-34,-36,]),'STRING':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,90,93,125,148,151,154,157,159,160,164,166,167,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[31,31,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,31,31,31,-19,-27,-13,-22,-20,-21,-28,31,31,31,31,-35,-24,-26,-33,-37,-14,-23,-25,-38,31,31,31,31,-34,-36,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,90,93,125,148,151,154,157,159,160,164,166,167,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[32,32,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,32,32,32,-19,-27,-13,-22,-20,-21,-28,32,32,32,32,-35,-24,-26,-33,-37,-14,-23,-25,-38,32,32,32,32,-34,-36,]),'INTLIST':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[33,33,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,33,33,-19,-27,-13,-22,-20,-21,-28,33,33,33,-35,-24,-26,-33,-37,-14,-23,-25,-38,33,33,33,33,-34,-36,]),'FLOATLIST':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[34,34,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,34,34,-19,-27,-13,-22,-20,-21,-28,34,34,34,-35,-24,-26,-33,-37,-14,-23,-25,-38,34,34,34,34,-34,-36,]),'STRINGLIST':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[35,35,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,35,35,-19,-27,-13,-22,-20,-21,-28,35,35,35,-35,-24,-26,-33,-37,-14,-23,-25,-38,35,35,35,35,-34,-36,]),'DOUBLELIST':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[36,36,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,36,36,-19,-27,-13,-22,-20,-21,-28,36,36,36,-35,-24,-26,-33,-37,-14,-23,-25,-38,36,36,36,36,-34,-36,]),'INTARRAY':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[37,37,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,37,37,-19,-27,-13,-22,-20,-21,-28,37,37,37,-35,-24,-26,-33,-37,-14,-23,-25,-38,37,37,37,37,-34,-36,]),'FLOATARRAY':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[38,38,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,38,38,-19,-27,-13,-22,-20,-21,-28,38,38,38,-35,-24,-26,-33,-37,-14,-23,-25,-38,38,38,38,38,-34,-36,]),'STRINGARRAY':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[39,39,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,39,39,-19,-27,-13,-22,-20,-21,-28,39,39,39,-35,-24,-26,-33,-37,-14,-23,-25,-38,39,39,39,39,-34,-36,]),'DOUBLEARRAY':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,84,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[40,40,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,40,40,-19,-27,-13,-22,-20,-21,-28,40,40,40,-35,-24,-26,-33,-37,-14,-23,-25,-38,40,40,40,40,-34,-36,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,18,20,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,46,53,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,84,85,86,88,90,92,93,119,120,121,125,126,128,131,134,137,142,148,151,154,157,159,160,164,166,167,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[41,41,-12,-5,-6,-7,-8,-9,-10,-11,53,-76,53,57,53,53,53,-29,-30,-31,-32,-71,-72,-73,-74,-75,-81,-82,-83,-84,-77,-78,-79,-80,-85,57,-85,57,-18,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,53,57,57,41,53,57,-19,53,53,53,-27,-76,53,57,57,57,57,-13,-22,-20,-21,-28,41,41,41,53,-35,57,57,57,57,-24,-26,-33,-37,-14,-23,-25,-38,41,41,41,41,-34,-36,]),'IF':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[42,42,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,42,-19,-27,-13,-22,-20,-21,-28,42,42,42,-35,-24,-26,-33,-37,-14,-23,-25,-38,42,42,42,42,-34,-36,]),'FOR':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[43,43,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,43,-19,-27,-13,-22,-20,-21,-28,43,43,43,-35,-24,-26,-33,-37,-14,-23,-25,-38,43,43,43,43,-34,-36,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[44,44,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,44,-19,-27,-13,-22,-20,-21,-28,44,44,44,-35,-24,-26,-33,-37,-14,-23,-25,-38,44,44,44,44,-34,-36,]),'SWITCH':([0,3,4,5,6,7,8,9,10,11,24,25,26,27,58,88,93,125,148,151,154,157,159,160,164,166,168,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[45,45,-12,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-18,45,-19,-27,-13,-22,-20,-21,-28,45,45,45,-35,-24,-26,-33,-37,-14,-23,-25,-38,45,45,45,45,-34,-36,]),'NOT':([0,3,4,5,6,7,8,9,10,11,15,24,25,26,27,46,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,93,125,131,134,137,142,148,151,154,157,159,160,164,166,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[46,46,-12,-5,-6,-7,-8,-9,-10,-11,46,-29,-30,-31,-32,46,46,-18,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-19,-27,46,46,46,46,-13,-22,-20,-21,-28,46,46,46,-35,46,46,46,46,-24,-26,-33,-37,-14,-23,-25,-38,46,46,46,46,-34,-36,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,15,23,24,25,26,27,42,43,44,45,46,53,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,93,125,131,134,137,142,148,151,154,157,159,160,164,166,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[15,15,-12,-5,-6,-7,-8,-9,-10,-11,15,80,-29,-30,-31,-32,83,84,85,86,15,-85,15,90,-18,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-19,-27,15,15,15,15,-13,-22,-20,-21,-28,15,15,15,-35,15,15,15,15,-24,-26,-33,-37,-14,-23,-25,-38,15,15,15,15,-34,-36,]),'STRING_LITERAL':([0,3,4,5,6,7,8,9,10,11,15,16,24,25,26,27,46,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,93,125,131,134,137,142,148,151,154,157,159,160,164,166,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[17,17,-12,-5,-6,-7,-8,-9,-10,-11,17,58,-29,-30,-31,-32,17,17,-18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-19,-27,17,17,17,17,-13,-22,-20,-21,-28,17,17,17,-35,17,17,17,17,-24,-26,-33,-37,-14,-23,-25,-38,17,17,17,17,-34,-36,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,15,24,25,26,27,46,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,93,110,112,125,131,134,137,142,148,151,154,157,159,160,162,163,164,166,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[48,48,-12,-5,-6,-7,-8,-9,-10,-11,48,-29,-30,-31,-32,48,48,-18,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-19,48,48,-27,48,48,48,48,-13,-22,-20,-21,-28,48,48,48,48,48,-35,48,48,48,48,-24,-26,-33,-37,-14,-23,-25,-38,48,48,48,48,-34,-36,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,15,24,25,26,27,46,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,93,125,131,134,137,142,148,151,154,157,159,160,164,166,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[49,49,-12,-5,-6,-7,-8,-9,-10,-11,49,-29,-30,-31,-32,49,49,-18,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-19,-27,49,49,49,49,-13,-22,-20,-21,-28,49,49,49,-35,49,49,49,49,-24,-26,-33,-37,-14,-23,-25,-38,49,49,49,49,-34,-36,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,15,24,25,26,27,46,54,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,93,125,131,134,137,142,148,151,154,157,159,160,164,166,168,169,171,174,177,182,184,185,187,192,193,194,197,198,199,200,201,207,208,],[50,50,-12,-5,-6,-7,-8,-9,-10,-11,50,-29,-30,-31,-32,50,50,-18,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-19,-27,50,50,50,50,-13,-22,-20,-21,-28,50,50,50,-35,50,50,50,50,-24,-26,-33,-37,-14,-23,-25,-38,50,50,50,50,-34,-36,]),'RBRACE':([3,4,5,6,7,8,9,10,11,17,21,24,25,26,27,47,48,49,50,51,57,58,74,75,87,88,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,116,124,125,135,139,140,148,151,154,157,158,159,160,164,165,166,168,173,175,176,178,179,182,184,185,187,188,190,192,193,194,197,198,199,200,201,202,203,204,205,206,207,208,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-64,-63,-29,-30,-31,-32,-65,-68,-69,-70,-2,-62,-18,-56,-57,-60,-86,-61,-19,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-58,-59,136,140,148,-27,156,-66,-67,-13,-22,-20,-21,172,-28,-86,-86,-86,-86,-35,185,187,-86,-40,192,-24,-26,-33,-37,197,-42,-14,-23,-25,-38,-86,-86,-86,-86,-41,-86,207,208,-39,-34,-36,]),'CASE':([3,4,5,6,7,8,9,10,11,24,25,26,27,51,58,93,125,148,151,154,157,159,165,168,182,184,185,187,192,193,194,197,199,203,207,208,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-2,-18,-19,-27,-13,-22,-20,-21,-28,177,-35,-24,-26,-33,-37,-14,-23,-25,-38,-86,177,-34,-36,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,24,25,26,27,51,58,93,125,148,151,154,157,159,165,168,176,178,182,184,185,187,192,193,194,197,199,203,206,207,208,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-29,-30,-31,-32,-2,-18,-19,-27,-13,-22,-20,-21,-28,-86,-35,189,-40,-24,-26,-33,-37,-14,-23,-25,-38,-86,-86,-39,-34,-36,]),'ASSIGN':([13,41,53,59,78,79,143,144,145,153,156,],[54,-85,-85,92,111,113,92,111,113,169,171,]),'QUESTION':([17,19,21,41,47,48,49,50,57,74,75,87,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,139,140,],[-64,60,-63,-62,-65,-68,-69,-70,-62,-56,-57,-60,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-58,-59,-66,-67,]),'PLUS':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,61,-63,-62,-65,-68,-69,-70,61,-62,-56,-57,61,61,-61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-66,-67,61,61,61,61,61,61,61,61,]),'MINUS':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,62,-63,-62,-65,-68,-69,-70,62,-62,-56,-57,62,62,-61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-66,-67,62,62,62,62,62,62,62,62,]),'MULTIPLY':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,63,-63,-62,-65,-68,-69,-70,63,-62,-56,-57,63,63,-61,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-66,-67,63,63,63,63,63,63,63,63,]),'DIVIDE':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,64,-63,-62,-65,-68,-69,-70,64,-62,-56,-57,64,64,-61,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-66,-67,64,64,64,64,64,64,64,64,]),'MODULUS':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,65,-63,-62,-65,-68,-69,-70,65,-62,-56,-57,65,65,-61,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-66,-67,65,65,65,65,65,65,65,65,]),'AND':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,66,-63,-62,-65,-68,-69,-70,66,-62,-56,-57,66,66,-61,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-66,-67,66,66,66,66,66,66,66,66,]),'OR':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,67,-63,-62,-65,-68,-69,-70,67,-62,-56,-57,67,67,-61,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-66,-67,67,67,67,67,67,67,67,67,]),'EQUAL':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,68,-63,-62,-65,-68,-69,-70,68,-62,-56,-57,68,68,-61,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-66,-67,68,68,68,68,68,68,68,68,]),'NOTEQUAL':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,69,-63,-62,-65,-68,-69,-70,69,-62,-56,-57,69,69,-61,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-66,-67,69,69,69,69,69,69,69,69,]),'LESSTHAN':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,70,-63,-62,-65,-68,-69,-70,70,-62,-56,-57,70,70,-61,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-66,-67,70,70,70,70,70,70,70,70,]),'GREATERTHAN':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,71,-63,-62,-65,-68,-69,-70,71,-62,-56,-57,71,71,-61,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-66,-67,71,71,71,71,71,71,71,71,]),'LESSTHANEQUAL':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,72,-63,-62,-65,-68,-69,-70,72,-62,-56,-57,72,72,-61,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-66,-67,72,72,72,72,72,72,72,72,]),'GREATERTHANEQUAL':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,73,-63,-62,-65,-68,-69,-70,73,-62,-56,-57,73,73,-61,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-66,-67,73,73,73,73,73,73,73,73,]),'INCREMENT':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,74,-63,-62,-65,-68,-69,-70,74,-62,-56,-57,74,74,-61,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-66,-67,74,74,74,74,74,74,74,74,]),'DECREMENT':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,75,-63,-62,-65,-68,-69,-70,75,-62,-56,-57,75,75,-61,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-66,-67,75,75,75,75,75,75,75,75,]),'COMMA':([17,19,21,41,47,48,49,50,53,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,150,152,155,158,161,181,183,186,191,],[-64,76,-63,-62,-65,-68,-69,-70,-85,76,-62,-56,-57,76,76,-61,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-66,-67,167,76,76,76,76,76,76,76,76,]),'POW':([17,19,21,41,47,48,49,50,56,57,74,75,87,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,130,139,140,152,155,158,161,181,183,186,191,],[-64,77,-63,-62,-65,-68,-69,-70,77,-62,-56,-57,77,77,-61,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-66,-67,77,77,77,77,77,77,77,77,]),'RPAREN':([17,21,47,48,49,50,53,56,57,74,75,87,90,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,117,122,123,127,129,139,140,150,167,180,186,],[-64,-63,-65,-68,-69,-70,-85,91,-62,-56,-57,-60,-86,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-58,-59,138,141,146,147,149,-17,-66,-67,-16,-86,-15,196,]),'SEMICOLON':([17,21,47,48,49,50,53,57,59,74,75,87,89,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,118,125,130,133,136,138,139,140,151,152,161,170,172,181,182,183,184,193,194,],[-64,-63,-65,-68,-69,-70,-85,-62,93,-56,-57,-60,125,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-58,-59,142,-27,151,154,157,159,-66,-67,-22,168,174,182,184,193,-24,194,-26,-23,-25,]),'COLON':([17,21,47,48,49,50,57,74,75,87,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,139,140,189,191,],[-64,-63,-65,-68,-69,-70,-62,-56,-57,-60,-61,131,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-58,-59,-66,-67,198,199,]),'RBRACKET':([17,21,47,48,49,50,57,74,75,87,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,132,139,140,155,],[-64,-63,-65,-68,-69,-70,-62,-56,-57,-60,-61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-58,-59,133,139,153,-66,-67,170,]),'LBRACKET':([41,53,57,78,111,144,],[81,-85,81,110,134,162,]),'LBRACE':([41,52,53,57,79,113,141,145,146,147,149,195,196,],[82,88,-85,82,112,137,160,163,164,165,166,200,201,]),'ELSE':([185,],[195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,3,88,160,164,166,198,199,200,201,],[2,51,124,173,175,179,202,203,204,205,]),'stmt':([0,3,88,160,164,166,198,199,200,201,],[3,3,3,3,3,3,3,3,3,3,]),'empty':([0,3,88,90,160,164,165,166,167,176,198,199,200,201,203,],[4,4,4,129,4,4,178,4,129,190,4,4,4,4,178,]),'class_declaration':([0,3,88,160,164,166,198,199,200,201,],[5,5,5,5,5,5,5,5,5,5,]),'fun_declaration':([0,3,88,160,164,166,198,199,200,201,],[6,6,6,6,6,6,6,6,6,6,]),'import_declaration':([0,3,88,160,164,166,198,199,200,201,],[7,7,7,7,7,7,7,7,7,7,]),'assignment':([0,3,84,88,160,164,166,198,199,200,201,],[8,8,118,8,8,8,8,8,8,8,8,]),'variable_declaration':([0,3,88,160,164,166,198,199,200,201,],[9,9,9,9,9,9,9,9,9,9,]),'print_stmt':([0,3,88,160,164,166,198,199,200,201,],[10,10,10,10,10,10,10,10,10,10,]),'control_structure':([0,3,88,160,164,166,198,199,200,201,],[11,11,11,11,11,11,11,11,11,11,]),'identifier':([0,3,12,14,18,20,22,84,88,90,119,120,121,128,160,164,166,167,198,199,200,201,],[13,13,52,55,59,78,79,13,13,126,143,144,145,150,13,13,13,126,13,13,13,13,]),'general_type':([0,3,84,88,90,160,164,166,167,198,199,200,201,],[18,18,119,18,128,18,18,18,128,18,18,18,18,]),'expression':([0,3,15,46,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,131,134,137,142,160,164,166,169,171,174,177,198,199,200,201,],[19,19,56,87,89,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,122,123,19,130,152,155,158,161,19,19,19,181,183,186,191,19,19,19,19,]),'list_type':([0,3,84,88,160,164,166,198,199,200,201,],[20,20,120,20,20,20,20,20,20,20,20,]),'digit':([0,3,15,46,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,110,112,131,134,137,142,160,162,163,164,166,169,171,174,177,198,199,200,201,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,132,135,21,21,21,21,21,132,135,21,21,21,21,21,21,21,21,21,21,]),'array_type':([0,3,84,88,160,164,166,198,199,200,201,],[22,22,121,22,22,22,22,22,22,22,22,]),'if_stmt':([0,3,88,160,164,166,198,199,200,201,],[24,24,24,24,24,24,24,24,24,24,]),'for_stmt':([0,3,88,160,164,166,198,199,200,201,],[25,25,25,25,25,25,25,25,25,25,]),'while_stmt':([0,3,88,160,164,166,198,199,200,201,],[26,26,26,26,26,26,26,26,26,26,]),'switch_stmt':([0,3,88,160,164,166,198,199,200,201,],[27,27,27,27,27,27,27,27,27,27,]),'boolean':([0,3,15,46,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,85,86,88,92,131,134,137,142,160,164,166,169,171,174,177,198,199,200,201,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'params':([90,167,],[127,180,]),'case_stmts':([165,203,],[176,206,]),'default_stmt':([176,],[188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','yacc.py',11),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','yacc.py',18),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','yacc.py',19),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','yacc.py',20),
  ('stmt -> class_declaration','stmt',1,'p_stmt','yacc.py',32),
  ('stmt -> fun_declaration','stmt',1,'p_stmt','yacc.py',33),
  ('stmt -> import_declaration','stmt',1,'p_stmt','yacc.py',34),
  ('stmt -> assignment','stmt',1,'p_stmt','yacc.py',35),
  ('stmt -> variable_declaration','stmt',1,'p_stmt','yacc.py',36),
  ('stmt -> print_stmt','stmt',1,'p_stmt','yacc.py',37),
  ('stmt -> control_structure','stmt',1,'p_stmt','yacc.py',38),
  ('stmt -> empty','stmt',1,'p_stmt','yacc.py',39),
  ('class_declaration -> CLASS identifier LBRACE stmt_list RBRACE','class_declaration',5,'p_class_declaration','yacc.py',46),
  ('fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE','fun_declaration',8,'p_fun_declaration','yacc.py',53),
  ('params -> general_type identifier COMMA params','params',4,'p_params','yacc.py',60),
  ('params -> general_type identifier','params',2,'p_params','yacc.py',61),
  ('params -> empty','params',1,'p_params','yacc.py',62),
  ('import_declaration -> IMPORT STRING_LITERAL','import_declaration',2,'p_import_declaration','yacc.py',74),
  ('variable_declaration -> general_type identifier SEMICOLON','variable_declaration',3,'p_variable_declaration','yacc.py',81),
  ('variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON','variable_declaration',5,'p_variable_declaration','yacc.py',82),
  ('variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON','variable_declaration',5,'p_variable_declaration','yacc.py',83),
  ('assignment -> general_type identifier ASSIGN expression SEMICOLON','assignment',5,'p_assignment','yacc.py',90),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON','assignment',8,'p_assignment','yacc.py',91),
  ('assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON','assignment',7,'p_assignment','yacc.py',92),
  ('assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON','assignment',8,'p_assignment','yacc.py',93),
  ('assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON','assignment',7,'p_assignment','yacc.py',94),
  ('assignment -> identifier ASSIGN expression SEMICOLON','assignment',4,'p_assignment','yacc.py',95),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','yacc.py',106),
  ('control_structure -> if_stmt','control_structure',1,'p_control_structure','yacc.py',113),
  ('control_structure -> for_stmt','control_structure',1,'p_control_structure','yacc.py',114),
  ('control_structure -> while_stmt','control_structure',1,'p_control_structure','yacc.py',115),
  ('control_structure -> switch_stmt','control_structure',1,'p_control_structure','yacc.py',116),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE','if_stmt',7,'p_if_stmt','yacc.py',123),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE','if_stmt',11,'p_if_stmt','yacc.py',124),
  ('if_stmt -> expression QUESTION expression COLON expression SEMICOLON','if_stmt',6,'p_if_stmt','yacc.py',125),
  ('for_stmt -> FOR LPAREN assignment SEMICOLON expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE','for_stmt',11,'p_for_stmt','yacc.py',137),
  ('while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE','while_stmt',7,'p_while_stmt','yacc.py',144),
  ('switch_stmt -> SWITCH LPAREN expression RPAREN LBRACE case_stmts default_stmt RBRACE','switch_stmt',8,'p_switch_stmt','yacc.py',151),
  ('case_stmts -> CASE expression COLON stmt_list case_stmts','case_stmts',5,'p_case_stmts','yacc.py',158),
  ('case_stmts -> empty','case_stmts',1,'p_case_stmts','yacc.py',159),
  ('default_stmt -> DEFAULT COLON stmt_list','default_stmt',3,'p_default_stmt','yacc.py',166),
  ('default_stmt -> empty','default_stmt',1,'p_default_stmt','yacc.py',167),
  ('expression -> expression PLUS expression','expression',3,'p_expression','yacc.py',174),
  ('expression -> expression MINUS expression','expression',3,'p_expression','yacc.py',175),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','yacc.py',176),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','yacc.py',177),
  ('expression -> expression MODULUS expression','expression',3,'p_expression','yacc.py',178),
  ('expression -> expression AND expression','expression',3,'p_expression','yacc.py',179),
  ('expression -> expression OR expression','expression',3,'p_expression','yacc.py',180),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','yacc.py',181),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','yacc.py',182),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','yacc.py',183),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','yacc.py',184),
  ('expression -> expression LESSTHANEQUAL expression','expression',3,'p_expression','yacc.py',185),
  ('expression -> expression GREATERTHANEQUAL expression','expression',3,'p_expression','yacc.py',186),
  ('expression -> expression INCREMENT','expression',2,'p_expression','yacc.py',187),
  ('expression -> expression DECREMENT','expression',2,'p_expression','yacc.py',188),
  ('expression -> expression COMMA expression','expression',3,'p_expression','yacc.py',189),
  ('expression -> expression POW expression','expression',3,'p_expression','yacc.py',190),
  ('expression -> NOT expression','expression',2,'p_expression','yacc.py',191),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc.py',192),
  ('expression -> IDENTIFIER','expression',1,'p_expression','yacc.py',193),
  ('expression -> digit','expression',1,'p_expression','yacc.py',194),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','yacc.py',195),
  ('expression -> boolean','expression',1,'p_expression','yacc.py',196),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression','yacc.py',197),
  ('expression -> IDENTIFIER LBRACE expression RBRACE','expression',4,'p_expression','yacc.py',198),
  ('digit -> NUMBER','digit',1,'p_digit','yacc.py',212),
  ('boolean -> TRUE','boolean',1,'p_boolean','yacc.py',219),
  ('boolean -> FALSE','boolean',1,'p_boolean','yacc.py',220),
  ('general_type -> INT','general_type',1,'p_general_type','yacc.py',227),
  ('general_type -> FLOAT','general_type',1,'p_general_type','yacc.py',228),
  ('general_type -> DOUBLE','general_type',1,'p_general_type','yacc.py',229),
  ('general_type -> STRING','general_type',1,'p_general_type','yacc.py',230),
  ('general_type -> BOOLEAN','general_type',1,'p_general_type','yacc.py',231),
  ('general_type -> identifier','general_type',1,'p_general_type','yacc.py',232),
  ('array_type -> INTARRAY','array_type',1,'p_array_type','yacc.py',239),
  ('array_type -> FLOATARRAY','array_type',1,'p_array_type','yacc.py',240),
  ('array_type -> STRINGARRAY','array_type',1,'p_array_type','yacc.py',241),
  ('array_type -> DOUBLEARRAY','array_type',1,'p_array_type','yacc.py',242),
  ('list_type -> INTLIST','list_type',1,'p_list_type','yacc.py',249),
  ('list_type -> FLOATLIST','list_type',1,'p_list_type','yacc.py',250),
  ('list_type -> STRINGLIST','list_type',1,'p_list_type','yacc.py',251),
  ('list_type -> DOUBLELIST','list_type',1,'p_list_type','yacc.py',252),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','yacc.py',259),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',266),
]
