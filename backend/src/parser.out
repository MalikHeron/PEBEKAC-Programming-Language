Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APOSTROPHE
    ARGS
    ARROW
    AT
    BACKSLASH
    CLASS
    CONTINUE
    DIVIDEASSIGN
    DOT
    DOUBLEQUOTE
    HASH
    MINUSASSIGN
    MODASSIGN
    NEW
    PARAMS
    PIPE
    PLUSASSIGN
    SLASH
    SWITCH
    TIMESASSIGN

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> stmt stmt_list
Rule 3     stmt_list -> stmt
Rule 4     stmt_list -> empty
Rule 5     stmt -> import_declaration
Rule 6     stmt -> fun_declaration
Rule 7     stmt -> assignment
Rule 8     stmt -> variable_declaration
Rule 9     stmt -> print_stmt
Rule 10    stmt -> control_structure
Rule 11    stmt -> return_stmt
Rule 12    stmt -> function_call
Rule 13    stmt -> break_stmt
Rule 14    stmt -> input_stmt
Rule 15    stmt -> empty
Rule 16    stmt -> comment stmt
Rule 17    input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
Rule 18    print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 19    print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
Rule 20    print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
Rule 21    print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON
Rule 22    fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
Rule 23    fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
Rule 24    function_call -> identifier LPAREN arg_list RPAREN SEMICOLON
Rule 25    return_stmt -> RETURN expression SEMICOLON
Rule 26    return_type -> general_type
Rule 27    return_type -> array_type
Rule 28    return_type -> list_type
Rule 29    return_type -> VOID
Rule 30    break_stmt -> BREAK SEMICOLON
Rule 31    params -> general_type identifier COMMA params
Rule 32    params -> general_type identifier
Rule 33    params -> empty
Rule 34    import_declaration -> IMPORT STRING_LITERAL
Rule 35    variable_declaration -> general_type identifier SEMICOLON
Rule 36    variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON
Rule 37    variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON
Rule 38    assignment -> general_type identifier ASSIGN expression SEMICOLON
Rule 39    assignment -> general_type identifier ASSIGN NULL SEMICOLON
Rule 40    assignment -> general_type identifier ASSIGN function_call
Rule 41    assignment -> list_type identifier ASSIGN NULL SEMICOLON
Rule 42    assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
Rule 43    assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
Rule 44    assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
Rule 45    assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
Rule 46    assignment -> list_type identifier ASSIGN function_call
Rule 47    assignment -> array_type identifier ASSIGN NULL SEMICOLON
Rule 48    assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
Rule 49    assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
Rule 50    assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call
Rule 51    assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
Rule 52    assignment -> array_type identifier ASSIGN function_call
Rule 53    assignment -> identifier ASSIGN expression SEMICOLON
Rule 54    assignment -> identifier ASSIGN function_call
Rule 55    assignment -> identifier ASSIGN NULL SEMICOLON
Rule 56    control_structure -> if_stmt
Rule 57    control_structure -> for_stmt
Rule 58    control_structure -> while_stmt
Rule 59    arg_list -> expression COMMA arg_list
Rule 60    arg_list -> expression
Rule 61    arg_list -> empty
Rule 62    if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
Rule 63    if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
Rule 64    if_stmt -> expression QUESTION expression COLON expression SEMICOLON
Rule 65    for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
Rule 66    for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
Rule 67    while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
Rule 68    case_stmts -> CASE expression COLON stmt_list case_stmts
Rule 69    case_stmts -> empty
Rule 70    default_stmt -> DEFAULT COLON stmt_list
Rule 71    default_stmt -> empty
Rule 72    expression -> expression PLUS expression
Rule 73    expression -> expression MINUS expression
Rule 74    expression -> expression MULTIPLY expression
Rule 75    expression -> expression DIVIDE expression
Rule 76    expression -> expression MODULUS expression
Rule 77    expression -> expression AND expression
Rule 78    expression -> expression OR expression
Rule 79    expression -> expression EQUAL expression
Rule 80    expression -> expression NOTEQUAL expression
Rule 81    expression -> expression LESSTHAN expression
Rule 82    expression -> expression GREATERTHAN expression
Rule 83    expression -> expression LESSTHANEQUAL expression
Rule 84    expression -> expression GREATERTHANEQUAL expression
Rule 85    expression -> expression COMMA expression
Rule 86    expression -> expression POW expression
Rule 87    expression -> LPAREN expression RPAREN
Rule 88    expression -> expression INCREMENT
Rule 89    expression -> expression DECREMENT
Rule 90    expression -> NOT expression
Rule 91    expression -> identifier
Rule 92    expression -> digit
Rule 93    expression -> string
Rule 94    expression -> boolean
Rule 95    expression -> identifier LBRACKET expression RBRACKET
Rule 96    expression -> identifier LBRACE expression RBRACE
Rule 97    digit -> NUMBER
Rule 98    boolean -> TRUE
Rule 99    boolean -> FALSE
Rule 100   general_type -> INT
Rule 101   general_type -> FLOAT
Rule 102   general_type -> DOUBLE
Rule 103   general_type -> STRING
Rule 104   general_type -> BOOLEAN
Rule 105   general_type -> identifier
Rule 106   array_type -> INTARRAY
Rule 107   array_type -> FLOATARRAY
Rule 108   array_type -> STRINGARRAY
Rule 109   array_type -> DOUBLEARRAY
Rule 110   list_type -> INTLIST
Rule 111   list_type -> FLOATLIST
Rule 112   list_type -> STRINGLIST
Rule 113   list_type -> DOUBLELIST
Rule 114   identifier -> IDENTIFIER
Rule 115   comment -> COMMENT
Rule 116   string -> STRING_LITERAL
Rule 117   empty -> <empty>

Terminals, with rules where they appear

AND                  : 77
APOSTROPHE           : 
ARGS                 : 
ARROW                : 
ASSIGN               : 17 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
AT                   : 
BACKSLASH            : 
BOOLEAN              : 104
BREAK                : 30
CASE                 : 68
CLASS                : 
COLON                : 64 68 70
COMMA                : 31 59 85
COMMENT              : 115
CONTINUE             : 
DECREMENT            : 89
DEFAULT              : 70
DIVIDE               : 75
DIVIDEASSIGN         : 
DOT                  : 
DOUBLE               : 102
DOUBLEARRAY          : 109
DOUBLELIST           : 113
DOUBLEQUOTE          : 
ELSE                 : 63
EQUAL                : 79
FALSE                : 99
FLOAT                : 101
FLOATARRAY           : 107
FLOATLIST            : 111
FOR                  : 65 66
FUN                  : 22 23
GREATERTHAN          : 82
GREATERTHANEQUAL     : 84
HASH                 : 
IDENTIFIER           : 114
IF                   : 62 63
IMPORT               : 34
INCREMENT            : 88
INPUT                : 17
INT                  : 100
INTARRAY             : 106
INTLIST              : 110
LBRACE               : 22 23 37 48 49 50 51 62 63 63 65 66 67 96
LBRACKET             : 36 42 43 44 45 95
LESSTHAN             : 81
LESSTHANEQUAL        : 83
LPAREN               : 17 18 19 20 21 22 23 24 62 63 65 66 67 87
MINUS                : 73
MINUSASSIGN          : 
MODASSIGN            : 
MODULUS              : 76
MULTIPLY             : 74
NEW                  : 
NOT                  : 90
NOTEQUAL             : 80
NULL                 : 39 41 42 47 48 55
NUMBER               : 97
OR                   : 78
PARAMS               : 
PIPE                 : 
PLUS                 : 19 19 20 72
PLUSASSIGN           : 
POW                  : 86
PRINT                : 18 19 20 21
QUESTION             : 64
RBRACE               : 22 23 37 48 49 50 51 62 63 63 65 66 67 96
RBRACKET             : 36 42 43 44 45 95
RETURN               : 25
RPAREN               : 17 18 19 20 21 22 23 24 62 63 65 66 67 87
SEMICOLON            : 17 18 19 20 21 24 25 30 35 36 37 38 39 41 42 43 44 47 48 49 51 53 55 64 65 66
SLASH                : 
STRING               : 103
STRINGARRAY          : 108
STRINGLIST           : 112
STRING_LITERAL       : 34 116
SWITCH               : 
TIMESASSIGN          : 
TRUE                 : 98
VOID                 : 29
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

arg_list             : 24 59
array_type           : 27 37 47 48 49 50 51 52
assignment           : 7 66
boolean              : 94
break_stmt           : 13
case_stmts           : 68
comment              : 16
control_structure    : 10
default_stmt         : 
digit                : 42 43 45 48 49 50 92
empty                : 4 15 33 61 69 71
expression           : 18 19 19 20 25 38 43 44 49 51 53 59 60 62 63 64 64 64 65 65 66 66 67 68 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 88 89 90 95 96
for_stmt             : 57
fun_declaration      : 6
function_call        : 12 19 20 21 40 45 46 50 52 54
general_type         : 26 31 32 35 38 39 40
identifier           : 17 22 23 24 31 32 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 91 95 96 105
if_stmt              : 56
import_declaration   : 5
input_stmt           : 14
list_type            : 28 36 41 42 43 44 45 46
params               : 22 23 31
print_stmt           : 9
program              : 0
return_stmt          : 11
return_type          : 22
stmt                 : 2 3 16
stmt_list            : 1 2 22 23 62 63 63 65 66 67 68 70
string               : 17 93
variable_declaration : 8 65
while_stmt           : 58

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    expression                     shift and go to state 22
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .

    $end            reduce using rule 1 (program -> stmt_list .)


state 3

    (2) stmt_list -> stmt . stmt_list
    (3) stmt_list -> stmt .
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! reduce/reduce conflict for $end resolved using rule 3 (stmt_list -> stmt .)
  ! reduce/reduce conflict for RBRACE resolved using rule 3 (stmt_list -> stmt .)
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 3 (stmt_list -> stmt .)
    RBRACE          reduce using rule 3 (stmt_list -> stmt .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! $end            [ reduce using rule 117 (empty -> .) ]
  ! RBRACE          [ reduce using rule 117 (empty -> .) ]
  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    stmt                           shift and go to state 3
    stmt_list                      shift and go to state 56
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    expression                     shift and go to state 22
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 4

    (4) stmt_list -> empty .
    (15) stmt -> empty .

  ! reduce/reduce conflict for $end resolved using rule 4 (stmt_list -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 4 (stmt_list -> empty .)
    $end            reduce using rule 4 (stmt_list -> empty .)
    RBRACE          reduce using rule 4 (stmt_list -> empty .)
    IMPORT          reduce using rule 15 (stmt -> empty .)
    FUN             reduce using rule 15 (stmt -> empty .)
    PRINT           reduce using rule 15 (stmt -> empty .)
    RETURN          reduce using rule 15 (stmt -> empty .)
    BREAK           reduce using rule 15 (stmt -> empty .)
    COMMENT         reduce using rule 15 (stmt -> empty .)
    INT             reduce using rule 15 (stmt -> empty .)
    FLOAT           reduce using rule 15 (stmt -> empty .)
    DOUBLE          reduce using rule 15 (stmt -> empty .)
    STRING          reduce using rule 15 (stmt -> empty .)
    BOOLEAN         reduce using rule 15 (stmt -> empty .)
    INTLIST         reduce using rule 15 (stmt -> empty .)
    FLOATLIST       reduce using rule 15 (stmt -> empty .)
    STRINGLIST      reduce using rule 15 (stmt -> empty .)
    DOUBLELIST      reduce using rule 15 (stmt -> empty .)
    INTARRAY        reduce using rule 15 (stmt -> empty .)
    FLOATARRAY      reduce using rule 15 (stmt -> empty .)
    STRINGARRAY     reduce using rule 15 (stmt -> empty .)
    DOUBLEARRAY     reduce using rule 15 (stmt -> empty .)
    IDENTIFIER      reduce using rule 15 (stmt -> empty .)
    IF              reduce using rule 15 (stmt -> empty .)
    FOR             reduce using rule 15 (stmt -> empty .)
    WHILE           reduce using rule 15 (stmt -> empty .)
    LPAREN          reduce using rule 15 (stmt -> empty .)
    NOT             reduce using rule 15 (stmt -> empty .)
    NUMBER          reduce using rule 15 (stmt -> empty .)
    STRING_LITERAL  reduce using rule 15 (stmt -> empty .)
    TRUE            reduce using rule 15 (stmt -> empty .)
    FALSE           reduce using rule 15 (stmt -> empty .)

  ! $end            [ reduce using rule 15 (stmt -> empty .) ]
  ! RBRACE          [ reduce using rule 15 (stmt -> empty .) ]


state 5

    (5) stmt -> import_declaration .

    IMPORT          reduce using rule 5 (stmt -> import_declaration .)
    FUN             reduce using rule 5 (stmt -> import_declaration .)
    PRINT           reduce using rule 5 (stmt -> import_declaration .)
    RETURN          reduce using rule 5 (stmt -> import_declaration .)
    BREAK           reduce using rule 5 (stmt -> import_declaration .)
    COMMENT         reduce using rule 5 (stmt -> import_declaration .)
    INT             reduce using rule 5 (stmt -> import_declaration .)
    FLOAT           reduce using rule 5 (stmt -> import_declaration .)
    DOUBLE          reduce using rule 5 (stmt -> import_declaration .)
    STRING          reduce using rule 5 (stmt -> import_declaration .)
    BOOLEAN         reduce using rule 5 (stmt -> import_declaration .)
    INTLIST         reduce using rule 5 (stmt -> import_declaration .)
    FLOATLIST       reduce using rule 5 (stmt -> import_declaration .)
    STRINGLIST      reduce using rule 5 (stmt -> import_declaration .)
    DOUBLELIST      reduce using rule 5 (stmt -> import_declaration .)
    INTARRAY        reduce using rule 5 (stmt -> import_declaration .)
    FLOATARRAY      reduce using rule 5 (stmt -> import_declaration .)
    STRINGARRAY     reduce using rule 5 (stmt -> import_declaration .)
    DOUBLEARRAY     reduce using rule 5 (stmt -> import_declaration .)
    IDENTIFIER      reduce using rule 5 (stmt -> import_declaration .)
    IF              reduce using rule 5 (stmt -> import_declaration .)
    FOR             reduce using rule 5 (stmt -> import_declaration .)
    WHILE           reduce using rule 5 (stmt -> import_declaration .)
    LPAREN          reduce using rule 5 (stmt -> import_declaration .)
    NOT             reduce using rule 5 (stmt -> import_declaration .)
    NUMBER          reduce using rule 5 (stmt -> import_declaration .)
    STRING_LITERAL  reduce using rule 5 (stmt -> import_declaration .)
    TRUE            reduce using rule 5 (stmt -> import_declaration .)
    FALSE           reduce using rule 5 (stmt -> import_declaration .)
    $end            reduce using rule 5 (stmt -> import_declaration .)
    RBRACE          reduce using rule 5 (stmt -> import_declaration .)


state 6

    (6) stmt -> fun_declaration .

    IMPORT          reduce using rule 6 (stmt -> fun_declaration .)
    FUN             reduce using rule 6 (stmt -> fun_declaration .)
    PRINT           reduce using rule 6 (stmt -> fun_declaration .)
    RETURN          reduce using rule 6 (stmt -> fun_declaration .)
    BREAK           reduce using rule 6 (stmt -> fun_declaration .)
    COMMENT         reduce using rule 6 (stmt -> fun_declaration .)
    INT             reduce using rule 6 (stmt -> fun_declaration .)
    FLOAT           reduce using rule 6 (stmt -> fun_declaration .)
    DOUBLE          reduce using rule 6 (stmt -> fun_declaration .)
    STRING          reduce using rule 6 (stmt -> fun_declaration .)
    BOOLEAN         reduce using rule 6 (stmt -> fun_declaration .)
    INTLIST         reduce using rule 6 (stmt -> fun_declaration .)
    FLOATLIST       reduce using rule 6 (stmt -> fun_declaration .)
    STRINGLIST      reduce using rule 6 (stmt -> fun_declaration .)
    DOUBLELIST      reduce using rule 6 (stmt -> fun_declaration .)
    INTARRAY        reduce using rule 6 (stmt -> fun_declaration .)
    FLOATARRAY      reduce using rule 6 (stmt -> fun_declaration .)
    STRINGARRAY     reduce using rule 6 (stmt -> fun_declaration .)
    DOUBLEARRAY     reduce using rule 6 (stmt -> fun_declaration .)
    IDENTIFIER      reduce using rule 6 (stmt -> fun_declaration .)
    IF              reduce using rule 6 (stmt -> fun_declaration .)
    FOR             reduce using rule 6 (stmt -> fun_declaration .)
    WHILE           reduce using rule 6 (stmt -> fun_declaration .)
    LPAREN          reduce using rule 6 (stmt -> fun_declaration .)
    NOT             reduce using rule 6 (stmt -> fun_declaration .)
    NUMBER          reduce using rule 6 (stmt -> fun_declaration .)
    STRING_LITERAL  reduce using rule 6 (stmt -> fun_declaration .)
    TRUE            reduce using rule 6 (stmt -> fun_declaration .)
    FALSE           reduce using rule 6 (stmt -> fun_declaration .)
    $end            reduce using rule 6 (stmt -> fun_declaration .)
    RBRACE          reduce using rule 6 (stmt -> fun_declaration .)


state 7

    (7) stmt -> assignment .

    IMPORT          reduce using rule 7 (stmt -> assignment .)
    FUN             reduce using rule 7 (stmt -> assignment .)
    PRINT           reduce using rule 7 (stmt -> assignment .)
    RETURN          reduce using rule 7 (stmt -> assignment .)
    BREAK           reduce using rule 7 (stmt -> assignment .)
    COMMENT         reduce using rule 7 (stmt -> assignment .)
    INT             reduce using rule 7 (stmt -> assignment .)
    FLOAT           reduce using rule 7 (stmt -> assignment .)
    DOUBLE          reduce using rule 7 (stmt -> assignment .)
    STRING          reduce using rule 7 (stmt -> assignment .)
    BOOLEAN         reduce using rule 7 (stmt -> assignment .)
    INTLIST         reduce using rule 7 (stmt -> assignment .)
    FLOATLIST       reduce using rule 7 (stmt -> assignment .)
    STRINGLIST      reduce using rule 7 (stmt -> assignment .)
    DOUBLELIST      reduce using rule 7 (stmt -> assignment .)
    INTARRAY        reduce using rule 7 (stmt -> assignment .)
    FLOATARRAY      reduce using rule 7 (stmt -> assignment .)
    STRINGARRAY     reduce using rule 7 (stmt -> assignment .)
    DOUBLEARRAY     reduce using rule 7 (stmt -> assignment .)
    IDENTIFIER      reduce using rule 7 (stmt -> assignment .)
    IF              reduce using rule 7 (stmt -> assignment .)
    FOR             reduce using rule 7 (stmt -> assignment .)
    WHILE           reduce using rule 7 (stmt -> assignment .)
    LPAREN          reduce using rule 7 (stmt -> assignment .)
    NOT             reduce using rule 7 (stmt -> assignment .)
    NUMBER          reduce using rule 7 (stmt -> assignment .)
    STRING_LITERAL  reduce using rule 7 (stmt -> assignment .)
    TRUE            reduce using rule 7 (stmt -> assignment .)
    FALSE           reduce using rule 7 (stmt -> assignment .)
    $end            reduce using rule 7 (stmt -> assignment .)
    RBRACE          reduce using rule 7 (stmt -> assignment .)


state 8

    (8) stmt -> variable_declaration .

    IMPORT          reduce using rule 8 (stmt -> variable_declaration .)
    FUN             reduce using rule 8 (stmt -> variable_declaration .)
    PRINT           reduce using rule 8 (stmt -> variable_declaration .)
    RETURN          reduce using rule 8 (stmt -> variable_declaration .)
    BREAK           reduce using rule 8 (stmt -> variable_declaration .)
    COMMENT         reduce using rule 8 (stmt -> variable_declaration .)
    INT             reduce using rule 8 (stmt -> variable_declaration .)
    FLOAT           reduce using rule 8 (stmt -> variable_declaration .)
    DOUBLE          reduce using rule 8 (stmt -> variable_declaration .)
    STRING          reduce using rule 8 (stmt -> variable_declaration .)
    BOOLEAN         reduce using rule 8 (stmt -> variable_declaration .)
    INTLIST         reduce using rule 8 (stmt -> variable_declaration .)
    FLOATLIST       reduce using rule 8 (stmt -> variable_declaration .)
    STRINGLIST      reduce using rule 8 (stmt -> variable_declaration .)
    DOUBLELIST      reduce using rule 8 (stmt -> variable_declaration .)
    INTARRAY        reduce using rule 8 (stmt -> variable_declaration .)
    FLOATARRAY      reduce using rule 8 (stmt -> variable_declaration .)
    STRINGARRAY     reduce using rule 8 (stmt -> variable_declaration .)
    DOUBLEARRAY     reduce using rule 8 (stmt -> variable_declaration .)
    IDENTIFIER      reduce using rule 8 (stmt -> variable_declaration .)
    IF              reduce using rule 8 (stmt -> variable_declaration .)
    FOR             reduce using rule 8 (stmt -> variable_declaration .)
    WHILE           reduce using rule 8 (stmt -> variable_declaration .)
    LPAREN          reduce using rule 8 (stmt -> variable_declaration .)
    NOT             reduce using rule 8 (stmt -> variable_declaration .)
    NUMBER          reduce using rule 8 (stmt -> variable_declaration .)
    STRING_LITERAL  reduce using rule 8 (stmt -> variable_declaration .)
    TRUE            reduce using rule 8 (stmt -> variable_declaration .)
    FALSE           reduce using rule 8 (stmt -> variable_declaration .)
    $end            reduce using rule 8 (stmt -> variable_declaration .)
    RBRACE          reduce using rule 8 (stmt -> variable_declaration .)


state 9

    (9) stmt -> print_stmt .

    IMPORT          reduce using rule 9 (stmt -> print_stmt .)
    FUN             reduce using rule 9 (stmt -> print_stmt .)
    PRINT           reduce using rule 9 (stmt -> print_stmt .)
    RETURN          reduce using rule 9 (stmt -> print_stmt .)
    BREAK           reduce using rule 9 (stmt -> print_stmt .)
    COMMENT         reduce using rule 9 (stmt -> print_stmt .)
    INT             reduce using rule 9 (stmt -> print_stmt .)
    FLOAT           reduce using rule 9 (stmt -> print_stmt .)
    DOUBLE          reduce using rule 9 (stmt -> print_stmt .)
    STRING          reduce using rule 9 (stmt -> print_stmt .)
    BOOLEAN         reduce using rule 9 (stmt -> print_stmt .)
    INTLIST         reduce using rule 9 (stmt -> print_stmt .)
    FLOATLIST       reduce using rule 9 (stmt -> print_stmt .)
    STRINGLIST      reduce using rule 9 (stmt -> print_stmt .)
    DOUBLELIST      reduce using rule 9 (stmt -> print_stmt .)
    INTARRAY        reduce using rule 9 (stmt -> print_stmt .)
    FLOATARRAY      reduce using rule 9 (stmt -> print_stmt .)
    STRINGARRAY     reduce using rule 9 (stmt -> print_stmt .)
    DOUBLEARRAY     reduce using rule 9 (stmt -> print_stmt .)
    IDENTIFIER      reduce using rule 9 (stmt -> print_stmt .)
    IF              reduce using rule 9 (stmt -> print_stmt .)
    FOR             reduce using rule 9 (stmt -> print_stmt .)
    WHILE           reduce using rule 9 (stmt -> print_stmt .)
    LPAREN          reduce using rule 9 (stmt -> print_stmt .)
    NOT             reduce using rule 9 (stmt -> print_stmt .)
    NUMBER          reduce using rule 9 (stmt -> print_stmt .)
    STRING_LITERAL  reduce using rule 9 (stmt -> print_stmt .)
    TRUE            reduce using rule 9 (stmt -> print_stmt .)
    FALSE           reduce using rule 9 (stmt -> print_stmt .)
    $end            reduce using rule 9 (stmt -> print_stmt .)
    RBRACE          reduce using rule 9 (stmt -> print_stmt .)


state 10

    (10) stmt -> control_structure .

    IMPORT          reduce using rule 10 (stmt -> control_structure .)
    FUN             reduce using rule 10 (stmt -> control_structure .)
    PRINT           reduce using rule 10 (stmt -> control_structure .)
    RETURN          reduce using rule 10 (stmt -> control_structure .)
    BREAK           reduce using rule 10 (stmt -> control_structure .)
    COMMENT         reduce using rule 10 (stmt -> control_structure .)
    INT             reduce using rule 10 (stmt -> control_structure .)
    FLOAT           reduce using rule 10 (stmt -> control_structure .)
    DOUBLE          reduce using rule 10 (stmt -> control_structure .)
    STRING          reduce using rule 10 (stmt -> control_structure .)
    BOOLEAN         reduce using rule 10 (stmt -> control_structure .)
    INTLIST         reduce using rule 10 (stmt -> control_structure .)
    FLOATLIST       reduce using rule 10 (stmt -> control_structure .)
    STRINGLIST      reduce using rule 10 (stmt -> control_structure .)
    DOUBLELIST      reduce using rule 10 (stmt -> control_structure .)
    INTARRAY        reduce using rule 10 (stmt -> control_structure .)
    FLOATARRAY      reduce using rule 10 (stmt -> control_structure .)
    STRINGARRAY     reduce using rule 10 (stmt -> control_structure .)
    DOUBLEARRAY     reduce using rule 10 (stmt -> control_structure .)
    IDENTIFIER      reduce using rule 10 (stmt -> control_structure .)
    IF              reduce using rule 10 (stmt -> control_structure .)
    FOR             reduce using rule 10 (stmt -> control_structure .)
    WHILE           reduce using rule 10 (stmt -> control_structure .)
    LPAREN          reduce using rule 10 (stmt -> control_structure .)
    NOT             reduce using rule 10 (stmt -> control_structure .)
    NUMBER          reduce using rule 10 (stmt -> control_structure .)
    STRING_LITERAL  reduce using rule 10 (stmt -> control_structure .)
    TRUE            reduce using rule 10 (stmt -> control_structure .)
    FALSE           reduce using rule 10 (stmt -> control_structure .)
    $end            reduce using rule 10 (stmt -> control_structure .)
    RBRACE          reduce using rule 10 (stmt -> control_structure .)


state 11

    (11) stmt -> return_stmt .

    IMPORT          reduce using rule 11 (stmt -> return_stmt .)
    FUN             reduce using rule 11 (stmt -> return_stmt .)
    PRINT           reduce using rule 11 (stmt -> return_stmt .)
    RETURN          reduce using rule 11 (stmt -> return_stmt .)
    BREAK           reduce using rule 11 (stmt -> return_stmt .)
    COMMENT         reduce using rule 11 (stmt -> return_stmt .)
    INT             reduce using rule 11 (stmt -> return_stmt .)
    FLOAT           reduce using rule 11 (stmt -> return_stmt .)
    DOUBLE          reduce using rule 11 (stmt -> return_stmt .)
    STRING          reduce using rule 11 (stmt -> return_stmt .)
    BOOLEAN         reduce using rule 11 (stmt -> return_stmt .)
    INTLIST         reduce using rule 11 (stmt -> return_stmt .)
    FLOATLIST       reduce using rule 11 (stmt -> return_stmt .)
    STRINGLIST      reduce using rule 11 (stmt -> return_stmt .)
    DOUBLELIST      reduce using rule 11 (stmt -> return_stmt .)
    INTARRAY        reduce using rule 11 (stmt -> return_stmt .)
    FLOATARRAY      reduce using rule 11 (stmt -> return_stmt .)
    STRINGARRAY     reduce using rule 11 (stmt -> return_stmt .)
    DOUBLEARRAY     reduce using rule 11 (stmt -> return_stmt .)
    IDENTIFIER      reduce using rule 11 (stmt -> return_stmt .)
    IF              reduce using rule 11 (stmt -> return_stmt .)
    FOR             reduce using rule 11 (stmt -> return_stmt .)
    WHILE           reduce using rule 11 (stmt -> return_stmt .)
    LPAREN          reduce using rule 11 (stmt -> return_stmt .)
    NOT             reduce using rule 11 (stmt -> return_stmt .)
    NUMBER          reduce using rule 11 (stmt -> return_stmt .)
    STRING_LITERAL  reduce using rule 11 (stmt -> return_stmt .)
    TRUE            reduce using rule 11 (stmt -> return_stmt .)
    FALSE           reduce using rule 11 (stmt -> return_stmt .)
    $end            reduce using rule 11 (stmt -> return_stmt .)
    RBRACE          reduce using rule 11 (stmt -> return_stmt .)


state 12

    (12) stmt -> function_call .

    IMPORT          reduce using rule 12 (stmt -> function_call .)
    FUN             reduce using rule 12 (stmt -> function_call .)
    PRINT           reduce using rule 12 (stmt -> function_call .)
    RETURN          reduce using rule 12 (stmt -> function_call .)
    BREAK           reduce using rule 12 (stmt -> function_call .)
    COMMENT         reduce using rule 12 (stmt -> function_call .)
    INT             reduce using rule 12 (stmt -> function_call .)
    FLOAT           reduce using rule 12 (stmt -> function_call .)
    DOUBLE          reduce using rule 12 (stmt -> function_call .)
    STRING          reduce using rule 12 (stmt -> function_call .)
    BOOLEAN         reduce using rule 12 (stmt -> function_call .)
    INTLIST         reduce using rule 12 (stmt -> function_call .)
    FLOATLIST       reduce using rule 12 (stmt -> function_call .)
    STRINGLIST      reduce using rule 12 (stmt -> function_call .)
    DOUBLELIST      reduce using rule 12 (stmt -> function_call .)
    INTARRAY        reduce using rule 12 (stmt -> function_call .)
    FLOATARRAY      reduce using rule 12 (stmt -> function_call .)
    STRINGARRAY     reduce using rule 12 (stmt -> function_call .)
    DOUBLEARRAY     reduce using rule 12 (stmt -> function_call .)
    IDENTIFIER      reduce using rule 12 (stmt -> function_call .)
    IF              reduce using rule 12 (stmt -> function_call .)
    FOR             reduce using rule 12 (stmt -> function_call .)
    WHILE           reduce using rule 12 (stmt -> function_call .)
    LPAREN          reduce using rule 12 (stmt -> function_call .)
    NOT             reduce using rule 12 (stmt -> function_call .)
    NUMBER          reduce using rule 12 (stmt -> function_call .)
    STRING_LITERAL  reduce using rule 12 (stmt -> function_call .)
    TRUE            reduce using rule 12 (stmt -> function_call .)
    FALSE           reduce using rule 12 (stmt -> function_call .)
    $end            reduce using rule 12 (stmt -> function_call .)
    RBRACE          reduce using rule 12 (stmt -> function_call .)


state 13

    (13) stmt -> break_stmt .

    IMPORT          reduce using rule 13 (stmt -> break_stmt .)
    FUN             reduce using rule 13 (stmt -> break_stmt .)
    PRINT           reduce using rule 13 (stmt -> break_stmt .)
    RETURN          reduce using rule 13 (stmt -> break_stmt .)
    BREAK           reduce using rule 13 (stmt -> break_stmt .)
    COMMENT         reduce using rule 13 (stmt -> break_stmt .)
    INT             reduce using rule 13 (stmt -> break_stmt .)
    FLOAT           reduce using rule 13 (stmt -> break_stmt .)
    DOUBLE          reduce using rule 13 (stmt -> break_stmt .)
    STRING          reduce using rule 13 (stmt -> break_stmt .)
    BOOLEAN         reduce using rule 13 (stmt -> break_stmt .)
    INTLIST         reduce using rule 13 (stmt -> break_stmt .)
    FLOATLIST       reduce using rule 13 (stmt -> break_stmt .)
    STRINGLIST      reduce using rule 13 (stmt -> break_stmt .)
    DOUBLELIST      reduce using rule 13 (stmt -> break_stmt .)
    INTARRAY        reduce using rule 13 (stmt -> break_stmt .)
    FLOATARRAY      reduce using rule 13 (stmt -> break_stmt .)
    STRINGARRAY     reduce using rule 13 (stmt -> break_stmt .)
    DOUBLEARRAY     reduce using rule 13 (stmt -> break_stmt .)
    IDENTIFIER      reduce using rule 13 (stmt -> break_stmt .)
    IF              reduce using rule 13 (stmt -> break_stmt .)
    FOR             reduce using rule 13 (stmt -> break_stmt .)
    WHILE           reduce using rule 13 (stmt -> break_stmt .)
    LPAREN          reduce using rule 13 (stmt -> break_stmt .)
    NOT             reduce using rule 13 (stmt -> break_stmt .)
    NUMBER          reduce using rule 13 (stmt -> break_stmt .)
    STRING_LITERAL  reduce using rule 13 (stmt -> break_stmt .)
    TRUE            reduce using rule 13 (stmt -> break_stmt .)
    FALSE           reduce using rule 13 (stmt -> break_stmt .)
    $end            reduce using rule 13 (stmt -> break_stmt .)
    RBRACE          reduce using rule 13 (stmt -> break_stmt .)


state 14

    (14) stmt -> input_stmt .

    IMPORT          reduce using rule 14 (stmt -> input_stmt .)
    FUN             reduce using rule 14 (stmt -> input_stmt .)
    PRINT           reduce using rule 14 (stmt -> input_stmt .)
    RETURN          reduce using rule 14 (stmt -> input_stmt .)
    BREAK           reduce using rule 14 (stmt -> input_stmt .)
    COMMENT         reduce using rule 14 (stmt -> input_stmt .)
    INT             reduce using rule 14 (stmt -> input_stmt .)
    FLOAT           reduce using rule 14 (stmt -> input_stmt .)
    DOUBLE          reduce using rule 14 (stmt -> input_stmt .)
    STRING          reduce using rule 14 (stmt -> input_stmt .)
    BOOLEAN         reduce using rule 14 (stmt -> input_stmt .)
    INTLIST         reduce using rule 14 (stmt -> input_stmt .)
    FLOATLIST       reduce using rule 14 (stmt -> input_stmt .)
    STRINGLIST      reduce using rule 14 (stmt -> input_stmt .)
    DOUBLELIST      reduce using rule 14 (stmt -> input_stmt .)
    INTARRAY        reduce using rule 14 (stmt -> input_stmt .)
    FLOATARRAY      reduce using rule 14 (stmt -> input_stmt .)
    STRINGARRAY     reduce using rule 14 (stmt -> input_stmt .)
    DOUBLEARRAY     reduce using rule 14 (stmt -> input_stmt .)
    IDENTIFIER      reduce using rule 14 (stmt -> input_stmt .)
    IF              reduce using rule 14 (stmt -> input_stmt .)
    FOR             reduce using rule 14 (stmt -> input_stmt .)
    WHILE           reduce using rule 14 (stmt -> input_stmt .)
    LPAREN          reduce using rule 14 (stmt -> input_stmt .)
    NOT             reduce using rule 14 (stmt -> input_stmt .)
    NUMBER          reduce using rule 14 (stmt -> input_stmt .)
    STRING_LITERAL  reduce using rule 14 (stmt -> input_stmt .)
    TRUE            reduce using rule 14 (stmt -> input_stmt .)
    FALSE           reduce using rule 14 (stmt -> input_stmt .)
    $end            reduce using rule 14 (stmt -> input_stmt .)
    RBRACE          reduce using rule 14 (stmt -> input_stmt .)


state 15

    (16) stmt -> comment . stmt
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (117) empty -> .
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    $end            reduce using rule 117 (empty -> .)
    RBRACE          reduce using rule 117 (empty -> .)
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    comment                        shift and go to state 15
    stmt                           shift and go to state 57
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    empty                          shift and go to state 58
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    expression                     shift and go to state 22
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 16

    (34) import_declaration -> IMPORT . STRING_LITERAL

    STRING_LITERAL  shift and go to state 59


state 17

    (116) string -> STRING_LITERAL .

    QUESTION        reduce using rule 116 (string -> STRING_LITERAL .)
    PLUS            reduce using rule 116 (string -> STRING_LITERAL .)
    MINUS           reduce using rule 116 (string -> STRING_LITERAL .)
    MULTIPLY        reduce using rule 116 (string -> STRING_LITERAL .)
    DIVIDE          reduce using rule 116 (string -> STRING_LITERAL .)
    MODULUS         reduce using rule 116 (string -> STRING_LITERAL .)
    AND             reduce using rule 116 (string -> STRING_LITERAL .)
    OR              reduce using rule 116 (string -> STRING_LITERAL .)
    EQUAL           reduce using rule 116 (string -> STRING_LITERAL .)
    NOTEQUAL        reduce using rule 116 (string -> STRING_LITERAL .)
    LESSTHAN        reduce using rule 116 (string -> STRING_LITERAL .)
    GREATERTHAN     reduce using rule 116 (string -> STRING_LITERAL .)
    LESSTHANEQUAL   reduce using rule 116 (string -> STRING_LITERAL .)
    GREATERTHANEQUAL reduce using rule 116 (string -> STRING_LITERAL .)
    COMMA           reduce using rule 116 (string -> STRING_LITERAL .)
    POW             reduce using rule 116 (string -> STRING_LITERAL .)
    INCREMENT       reduce using rule 116 (string -> STRING_LITERAL .)
    DECREMENT       reduce using rule 116 (string -> STRING_LITERAL .)
    RPAREN          reduce using rule 116 (string -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 116 (string -> STRING_LITERAL .)
    RBRACKET        reduce using rule 116 (string -> STRING_LITERAL .)
    RBRACE          reduce using rule 116 (string -> STRING_LITERAL .)
    COLON           reduce using rule 116 (string -> STRING_LITERAL .)


state 18

    (22) fun_declaration -> FUN . return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> FUN . identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (26) return_type -> . general_type
    (27) return_type -> . array_type
    (28) return_type -> . list_type
    (29) return_type -> . VOID
    (114) identifier -> . IDENTIFIER
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST

    VOID            shift and go to state 65
    IDENTIFIER      shift and go to state 47
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42

    return_type                    shift and go to state 60
    identifier                     shift and go to state 61
    general_type                   shift and go to state 62
    array_type                     shift and go to state 63
    list_type                      shift and go to state 64

state 19

    (53) assignment -> identifier . ASSIGN expression SEMICOLON
    (54) assignment -> identifier . ASSIGN function_call
    (55) assignment -> identifier . ASSIGN NULL SEMICOLON
    (24) function_call -> identifier . LPAREN arg_list RPAREN SEMICOLON
    (17) input_stmt -> identifier . ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (105) general_type -> identifier .
    (91) expression -> identifier .
    (95) expression -> identifier . LBRACKET expression RBRACKET
    (96) expression -> identifier . LBRACE expression RBRACE

    ASSIGN          shift and go to state 66
    LPAREN          shift and go to state 67
    IDENTIFIER      reduce using rule 105 (general_type -> identifier .)
    QUESTION        reduce using rule 91 (expression -> identifier .)
    PLUS            reduce using rule 91 (expression -> identifier .)
    MINUS           reduce using rule 91 (expression -> identifier .)
    MULTIPLY        reduce using rule 91 (expression -> identifier .)
    DIVIDE          reduce using rule 91 (expression -> identifier .)
    MODULUS         reduce using rule 91 (expression -> identifier .)
    AND             reduce using rule 91 (expression -> identifier .)
    OR              reduce using rule 91 (expression -> identifier .)
    EQUAL           reduce using rule 91 (expression -> identifier .)
    NOTEQUAL        reduce using rule 91 (expression -> identifier .)
    LESSTHAN        reduce using rule 91 (expression -> identifier .)
    GREATERTHAN     reduce using rule 91 (expression -> identifier .)
    LESSTHANEQUAL   reduce using rule 91 (expression -> identifier .)
    GREATERTHANEQUAL reduce using rule 91 (expression -> identifier .)
    COMMA           reduce using rule 91 (expression -> identifier .)
    POW             reduce using rule 91 (expression -> identifier .)
    INCREMENT       reduce using rule 91 (expression -> identifier .)
    DECREMENT       reduce using rule 91 (expression -> identifier .)
    LBRACKET        shift and go to state 68
    LBRACE          shift and go to state 69


state 20

    (87) expression -> LPAREN . expression RPAREN
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 70
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 21

    (38) assignment -> general_type . identifier ASSIGN expression SEMICOLON
    (39) assignment -> general_type . identifier ASSIGN NULL SEMICOLON
    (40) assignment -> general_type . identifier ASSIGN function_call
    (35) variable_declaration -> general_type . identifier SEMICOLON
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 72

state 22

    (64) if_stmt -> expression . QUESTION expression COLON expression SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    QUESTION        shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 23

    (41) assignment -> list_type . identifier ASSIGN NULL SEMICOLON
    (42) assignment -> list_type . identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type . identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> list_type . identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> list_type . identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> list_type . identifier ASSIGN function_call
    (36) variable_declaration -> list_type . identifier LBRACKET RBRACKET SEMICOLON
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 91

state 24

    (92) expression -> digit .

    QUESTION        reduce using rule 92 (expression -> digit .)
    PLUS            reduce using rule 92 (expression -> digit .)
    MINUS           reduce using rule 92 (expression -> digit .)
    MULTIPLY        reduce using rule 92 (expression -> digit .)
    DIVIDE          reduce using rule 92 (expression -> digit .)
    MODULUS         reduce using rule 92 (expression -> digit .)
    AND             reduce using rule 92 (expression -> digit .)
    OR              reduce using rule 92 (expression -> digit .)
    EQUAL           reduce using rule 92 (expression -> digit .)
    NOTEQUAL        reduce using rule 92 (expression -> digit .)
    LESSTHAN        reduce using rule 92 (expression -> digit .)
    GREATERTHAN     reduce using rule 92 (expression -> digit .)
    LESSTHANEQUAL   reduce using rule 92 (expression -> digit .)
    GREATERTHANEQUAL reduce using rule 92 (expression -> digit .)
    COMMA           reduce using rule 92 (expression -> digit .)
    POW             reduce using rule 92 (expression -> digit .)
    INCREMENT       reduce using rule 92 (expression -> digit .)
    DECREMENT       reduce using rule 92 (expression -> digit .)
    RPAREN          reduce using rule 92 (expression -> digit .)
    SEMICOLON       reduce using rule 92 (expression -> digit .)
    RBRACKET        reduce using rule 92 (expression -> digit .)
    RBRACE          reduce using rule 92 (expression -> digit .)
    COLON           reduce using rule 92 (expression -> digit .)


state 25

    (47) assignment -> array_type . identifier ASSIGN NULL SEMICOLON
    (48) assignment -> array_type . identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type . identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type . identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> array_type . identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> array_type . identifier ASSIGN function_call
    (37) variable_declaration -> array_type . identifier LBRACE RBRACE SEMICOLON
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 92

state 26

    (18) print_stmt -> PRINT . LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> PRINT . LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> PRINT . LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> PRINT . LPAREN function_call RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 27

    (56) control_structure -> if_stmt .

    IMPORT          reduce using rule 56 (control_structure -> if_stmt .)
    FUN             reduce using rule 56 (control_structure -> if_stmt .)
    PRINT           reduce using rule 56 (control_structure -> if_stmt .)
    RETURN          reduce using rule 56 (control_structure -> if_stmt .)
    BREAK           reduce using rule 56 (control_structure -> if_stmt .)
    COMMENT         reduce using rule 56 (control_structure -> if_stmt .)
    INT             reduce using rule 56 (control_structure -> if_stmt .)
    FLOAT           reduce using rule 56 (control_structure -> if_stmt .)
    DOUBLE          reduce using rule 56 (control_structure -> if_stmt .)
    STRING          reduce using rule 56 (control_structure -> if_stmt .)
    BOOLEAN         reduce using rule 56 (control_structure -> if_stmt .)
    INTLIST         reduce using rule 56 (control_structure -> if_stmt .)
    FLOATLIST       reduce using rule 56 (control_structure -> if_stmt .)
    STRINGLIST      reduce using rule 56 (control_structure -> if_stmt .)
    DOUBLELIST      reduce using rule 56 (control_structure -> if_stmt .)
    INTARRAY        reduce using rule 56 (control_structure -> if_stmt .)
    FLOATARRAY      reduce using rule 56 (control_structure -> if_stmt .)
    STRINGARRAY     reduce using rule 56 (control_structure -> if_stmt .)
    DOUBLEARRAY     reduce using rule 56 (control_structure -> if_stmt .)
    IDENTIFIER      reduce using rule 56 (control_structure -> if_stmt .)
    IF              reduce using rule 56 (control_structure -> if_stmt .)
    FOR             reduce using rule 56 (control_structure -> if_stmt .)
    WHILE           reduce using rule 56 (control_structure -> if_stmt .)
    LPAREN          reduce using rule 56 (control_structure -> if_stmt .)
    NOT             reduce using rule 56 (control_structure -> if_stmt .)
    NUMBER          reduce using rule 56 (control_structure -> if_stmt .)
    STRING_LITERAL  reduce using rule 56 (control_structure -> if_stmt .)
    TRUE            reduce using rule 56 (control_structure -> if_stmt .)
    FALSE           reduce using rule 56 (control_structure -> if_stmt .)
    $end            reduce using rule 56 (control_structure -> if_stmt .)
    RBRACE          reduce using rule 56 (control_structure -> if_stmt .)


state 28

    (57) control_structure -> for_stmt .

    IMPORT          reduce using rule 57 (control_structure -> for_stmt .)
    FUN             reduce using rule 57 (control_structure -> for_stmt .)
    PRINT           reduce using rule 57 (control_structure -> for_stmt .)
    RETURN          reduce using rule 57 (control_structure -> for_stmt .)
    BREAK           reduce using rule 57 (control_structure -> for_stmt .)
    COMMENT         reduce using rule 57 (control_structure -> for_stmt .)
    INT             reduce using rule 57 (control_structure -> for_stmt .)
    FLOAT           reduce using rule 57 (control_structure -> for_stmt .)
    DOUBLE          reduce using rule 57 (control_structure -> for_stmt .)
    STRING          reduce using rule 57 (control_structure -> for_stmt .)
    BOOLEAN         reduce using rule 57 (control_structure -> for_stmt .)
    INTLIST         reduce using rule 57 (control_structure -> for_stmt .)
    FLOATLIST       reduce using rule 57 (control_structure -> for_stmt .)
    STRINGLIST      reduce using rule 57 (control_structure -> for_stmt .)
    DOUBLELIST      reduce using rule 57 (control_structure -> for_stmt .)
    INTARRAY        reduce using rule 57 (control_structure -> for_stmt .)
    FLOATARRAY      reduce using rule 57 (control_structure -> for_stmt .)
    STRINGARRAY     reduce using rule 57 (control_structure -> for_stmt .)
    DOUBLEARRAY     reduce using rule 57 (control_structure -> for_stmt .)
    IDENTIFIER      reduce using rule 57 (control_structure -> for_stmt .)
    IF              reduce using rule 57 (control_structure -> for_stmt .)
    FOR             reduce using rule 57 (control_structure -> for_stmt .)
    WHILE           reduce using rule 57 (control_structure -> for_stmt .)
    LPAREN          reduce using rule 57 (control_structure -> for_stmt .)
    NOT             reduce using rule 57 (control_structure -> for_stmt .)
    NUMBER          reduce using rule 57 (control_structure -> for_stmt .)
    STRING_LITERAL  reduce using rule 57 (control_structure -> for_stmt .)
    TRUE            reduce using rule 57 (control_structure -> for_stmt .)
    FALSE           reduce using rule 57 (control_structure -> for_stmt .)
    $end            reduce using rule 57 (control_structure -> for_stmt .)
    RBRACE          reduce using rule 57 (control_structure -> for_stmt .)


state 29

    (58) control_structure -> while_stmt .

    IMPORT          reduce using rule 58 (control_structure -> while_stmt .)
    FUN             reduce using rule 58 (control_structure -> while_stmt .)
    PRINT           reduce using rule 58 (control_structure -> while_stmt .)
    RETURN          reduce using rule 58 (control_structure -> while_stmt .)
    BREAK           reduce using rule 58 (control_structure -> while_stmt .)
    COMMENT         reduce using rule 58 (control_structure -> while_stmt .)
    INT             reduce using rule 58 (control_structure -> while_stmt .)
    FLOAT           reduce using rule 58 (control_structure -> while_stmt .)
    DOUBLE          reduce using rule 58 (control_structure -> while_stmt .)
    STRING          reduce using rule 58 (control_structure -> while_stmt .)
    BOOLEAN         reduce using rule 58 (control_structure -> while_stmt .)
    INTLIST         reduce using rule 58 (control_structure -> while_stmt .)
    FLOATLIST       reduce using rule 58 (control_structure -> while_stmt .)
    STRINGLIST      reduce using rule 58 (control_structure -> while_stmt .)
    DOUBLELIST      reduce using rule 58 (control_structure -> while_stmt .)
    INTARRAY        reduce using rule 58 (control_structure -> while_stmt .)
    FLOATARRAY      reduce using rule 58 (control_structure -> while_stmt .)
    STRINGARRAY     reduce using rule 58 (control_structure -> while_stmt .)
    DOUBLEARRAY     reduce using rule 58 (control_structure -> while_stmt .)
    IDENTIFIER      reduce using rule 58 (control_structure -> while_stmt .)
    IF              reduce using rule 58 (control_structure -> while_stmt .)
    FOR             reduce using rule 58 (control_structure -> while_stmt .)
    WHILE           reduce using rule 58 (control_structure -> while_stmt .)
    LPAREN          reduce using rule 58 (control_structure -> while_stmt .)
    NOT             reduce using rule 58 (control_structure -> while_stmt .)
    NUMBER          reduce using rule 58 (control_structure -> while_stmt .)
    STRING_LITERAL  reduce using rule 58 (control_structure -> while_stmt .)
    TRUE            reduce using rule 58 (control_structure -> while_stmt .)
    FALSE           reduce using rule 58 (control_structure -> while_stmt .)
    $end            reduce using rule 58 (control_structure -> while_stmt .)
    RBRACE          reduce using rule 58 (control_structure -> while_stmt .)


state 30

    (25) return_stmt -> RETURN . expression SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 94
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 31

    (30) break_stmt -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 95


state 32

    (93) expression -> string .

    QUESTION        reduce using rule 93 (expression -> string .)
    PLUS            reduce using rule 93 (expression -> string .)
    MINUS           reduce using rule 93 (expression -> string .)
    MULTIPLY        reduce using rule 93 (expression -> string .)
    DIVIDE          reduce using rule 93 (expression -> string .)
    MODULUS         reduce using rule 93 (expression -> string .)
    AND             reduce using rule 93 (expression -> string .)
    OR              reduce using rule 93 (expression -> string .)
    EQUAL           reduce using rule 93 (expression -> string .)
    NOTEQUAL        reduce using rule 93 (expression -> string .)
    LESSTHAN        reduce using rule 93 (expression -> string .)
    GREATERTHAN     reduce using rule 93 (expression -> string .)
    LESSTHANEQUAL   reduce using rule 93 (expression -> string .)
    GREATERTHANEQUAL reduce using rule 93 (expression -> string .)
    COMMA           reduce using rule 93 (expression -> string .)
    POW             reduce using rule 93 (expression -> string .)
    INCREMENT       reduce using rule 93 (expression -> string .)
    DECREMENT       reduce using rule 93 (expression -> string .)
    RPAREN          reduce using rule 93 (expression -> string .)
    SEMICOLON       reduce using rule 93 (expression -> string .)
    RBRACKET        reduce using rule 93 (expression -> string .)
    RBRACE          reduce using rule 93 (expression -> string .)
    COLON           reduce using rule 93 (expression -> string .)


state 33

    (115) comment -> COMMENT .

    IMPORT          reduce using rule 115 (comment -> COMMENT .)
    FUN             reduce using rule 115 (comment -> COMMENT .)
    PRINT           reduce using rule 115 (comment -> COMMENT .)
    RETURN          reduce using rule 115 (comment -> COMMENT .)
    BREAK           reduce using rule 115 (comment -> COMMENT .)
    COMMENT         reduce using rule 115 (comment -> COMMENT .)
    INT             reduce using rule 115 (comment -> COMMENT .)
    FLOAT           reduce using rule 115 (comment -> COMMENT .)
    DOUBLE          reduce using rule 115 (comment -> COMMENT .)
    STRING          reduce using rule 115 (comment -> COMMENT .)
    BOOLEAN         reduce using rule 115 (comment -> COMMENT .)
    INTLIST         reduce using rule 115 (comment -> COMMENT .)
    FLOATLIST       reduce using rule 115 (comment -> COMMENT .)
    STRINGLIST      reduce using rule 115 (comment -> COMMENT .)
    DOUBLELIST      reduce using rule 115 (comment -> COMMENT .)
    INTARRAY        reduce using rule 115 (comment -> COMMENT .)
    FLOATARRAY      reduce using rule 115 (comment -> COMMENT .)
    STRINGARRAY     reduce using rule 115 (comment -> COMMENT .)
    DOUBLEARRAY     reduce using rule 115 (comment -> COMMENT .)
    IDENTIFIER      reduce using rule 115 (comment -> COMMENT .)
    IF              reduce using rule 115 (comment -> COMMENT .)
    FOR             reduce using rule 115 (comment -> COMMENT .)
    WHILE           reduce using rule 115 (comment -> COMMENT .)
    LPAREN          reduce using rule 115 (comment -> COMMENT .)
    NOT             reduce using rule 115 (comment -> COMMENT .)
    NUMBER          reduce using rule 115 (comment -> COMMENT .)
    STRING_LITERAL  reduce using rule 115 (comment -> COMMENT .)
    TRUE            reduce using rule 115 (comment -> COMMENT .)
    FALSE           reduce using rule 115 (comment -> COMMENT .)
    $end            reduce using rule 115 (comment -> COMMENT .)
    RBRACE          reduce using rule 115 (comment -> COMMENT .)


state 34

    (100) general_type -> INT .

    IDENTIFIER      reduce using rule 100 (general_type -> INT .)


state 35

    (101) general_type -> FLOAT .

    IDENTIFIER      reduce using rule 101 (general_type -> FLOAT .)


state 36

    (102) general_type -> DOUBLE .

    IDENTIFIER      reduce using rule 102 (general_type -> DOUBLE .)


state 37

    (103) general_type -> STRING .

    IDENTIFIER      reduce using rule 103 (general_type -> STRING .)


state 38

    (104) general_type -> BOOLEAN .

    IDENTIFIER      reduce using rule 104 (general_type -> BOOLEAN .)


state 39

    (110) list_type -> INTLIST .

    IDENTIFIER      reduce using rule 110 (list_type -> INTLIST .)


state 40

    (111) list_type -> FLOATLIST .

    IDENTIFIER      reduce using rule 111 (list_type -> FLOATLIST .)


state 41

    (112) list_type -> STRINGLIST .

    IDENTIFIER      reduce using rule 112 (list_type -> STRINGLIST .)


state 42

    (113) list_type -> DOUBLELIST .

    IDENTIFIER      reduce using rule 113 (list_type -> DOUBLELIST .)


state 43

    (106) array_type -> INTARRAY .

    IDENTIFIER      reduce using rule 106 (array_type -> INTARRAY .)


state 44

    (107) array_type -> FLOATARRAY .

    IDENTIFIER      reduce using rule 107 (array_type -> FLOATARRAY .)


state 45

    (108) array_type -> STRINGARRAY .

    IDENTIFIER      reduce using rule 108 (array_type -> STRINGARRAY .)


state 46

    (109) array_type -> DOUBLEARRAY .

    IDENTIFIER      reduce using rule 109 (array_type -> DOUBLEARRAY .)


state 47

    (114) identifier -> IDENTIFIER .

    ASSIGN          reduce using rule 114 (identifier -> IDENTIFIER .)
    LPAREN          reduce using rule 114 (identifier -> IDENTIFIER .)
    LBRACKET        reduce using rule 114 (identifier -> IDENTIFIER .)
    LBRACE          reduce using rule 114 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 114 (identifier -> IDENTIFIER .)
    QUESTION        reduce using rule 114 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 114 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 114 (identifier -> IDENTIFIER .)
    MULTIPLY        reduce using rule 114 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 114 (identifier -> IDENTIFIER .)
    MODULUS         reduce using rule 114 (identifier -> IDENTIFIER .)
    AND             reduce using rule 114 (identifier -> IDENTIFIER .)
    OR              reduce using rule 114 (identifier -> IDENTIFIER .)
    EQUAL           reduce using rule 114 (identifier -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 114 (identifier -> IDENTIFIER .)
    LESSTHAN        reduce using rule 114 (identifier -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 114 (identifier -> IDENTIFIER .)
    LESSTHANEQUAL   reduce using rule 114 (identifier -> IDENTIFIER .)
    GREATERTHANEQUAL reduce using rule 114 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 114 (identifier -> IDENTIFIER .)
    POW             reduce using rule 114 (identifier -> IDENTIFIER .)
    INCREMENT       reduce using rule 114 (identifier -> IDENTIFIER .)
    DECREMENT       reduce using rule 114 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 114 (identifier -> IDENTIFIER .)
    SEMICOLON       reduce using rule 114 (identifier -> IDENTIFIER .)
    RBRACKET        reduce using rule 114 (identifier -> IDENTIFIER .)
    RBRACE          reduce using rule 114 (identifier -> IDENTIFIER .)
    COLON           reduce using rule 114 (identifier -> IDENTIFIER .)


state 48

    (62) if_stmt -> IF . LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> IF . LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE

    LPAREN          shift and go to state 96


state 49

    (65) for_stmt -> FOR . LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> FOR . LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE

    LPAREN          shift and go to state 97


state 50

    (67) while_stmt -> WHILE . LPAREN expression RPAREN LBRACE stmt_list RBRACE

    LPAREN          shift and go to state 98


state 51

    (90) expression -> NOT . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 99
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 52

    (94) expression -> boolean .

    QUESTION        reduce using rule 94 (expression -> boolean .)
    PLUS            reduce using rule 94 (expression -> boolean .)
    MINUS           reduce using rule 94 (expression -> boolean .)
    MULTIPLY        reduce using rule 94 (expression -> boolean .)
    DIVIDE          reduce using rule 94 (expression -> boolean .)
    MODULUS         reduce using rule 94 (expression -> boolean .)
    AND             reduce using rule 94 (expression -> boolean .)
    OR              reduce using rule 94 (expression -> boolean .)
    EQUAL           reduce using rule 94 (expression -> boolean .)
    NOTEQUAL        reduce using rule 94 (expression -> boolean .)
    LESSTHAN        reduce using rule 94 (expression -> boolean .)
    GREATERTHAN     reduce using rule 94 (expression -> boolean .)
    LESSTHANEQUAL   reduce using rule 94 (expression -> boolean .)
    GREATERTHANEQUAL reduce using rule 94 (expression -> boolean .)
    COMMA           reduce using rule 94 (expression -> boolean .)
    POW             reduce using rule 94 (expression -> boolean .)
    INCREMENT       reduce using rule 94 (expression -> boolean .)
    DECREMENT       reduce using rule 94 (expression -> boolean .)
    RPAREN          reduce using rule 94 (expression -> boolean .)
    SEMICOLON       reduce using rule 94 (expression -> boolean .)
    RBRACKET        reduce using rule 94 (expression -> boolean .)
    RBRACE          reduce using rule 94 (expression -> boolean .)
    COLON           reduce using rule 94 (expression -> boolean .)


state 53

    (97) digit -> NUMBER .

    QUESTION        reduce using rule 97 (digit -> NUMBER .)
    PLUS            reduce using rule 97 (digit -> NUMBER .)
    MINUS           reduce using rule 97 (digit -> NUMBER .)
    MULTIPLY        reduce using rule 97 (digit -> NUMBER .)
    DIVIDE          reduce using rule 97 (digit -> NUMBER .)
    MODULUS         reduce using rule 97 (digit -> NUMBER .)
    AND             reduce using rule 97 (digit -> NUMBER .)
    OR              reduce using rule 97 (digit -> NUMBER .)
    EQUAL           reduce using rule 97 (digit -> NUMBER .)
    NOTEQUAL        reduce using rule 97 (digit -> NUMBER .)
    LESSTHAN        reduce using rule 97 (digit -> NUMBER .)
    GREATERTHAN     reduce using rule 97 (digit -> NUMBER .)
    LESSTHANEQUAL   reduce using rule 97 (digit -> NUMBER .)
    GREATERTHANEQUAL reduce using rule 97 (digit -> NUMBER .)
    COMMA           reduce using rule 97 (digit -> NUMBER .)
    POW             reduce using rule 97 (digit -> NUMBER .)
    INCREMENT       reduce using rule 97 (digit -> NUMBER .)
    DECREMENT       reduce using rule 97 (digit -> NUMBER .)
    RPAREN          reduce using rule 97 (digit -> NUMBER .)
    SEMICOLON       reduce using rule 97 (digit -> NUMBER .)
    RBRACKET        reduce using rule 97 (digit -> NUMBER .)
    RBRACE          reduce using rule 97 (digit -> NUMBER .)
    COLON           reduce using rule 97 (digit -> NUMBER .)


state 54

    (98) boolean -> TRUE .

    QUESTION        reduce using rule 98 (boolean -> TRUE .)
    PLUS            reduce using rule 98 (boolean -> TRUE .)
    MINUS           reduce using rule 98 (boolean -> TRUE .)
    MULTIPLY        reduce using rule 98 (boolean -> TRUE .)
    DIVIDE          reduce using rule 98 (boolean -> TRUE .)
    MODULUS         reduce using rule 98 (boolean -> TRUE .)
    AND             reduce using rule 98 (boolean -> TRUE .)
    OR              reduce using rule 98 (boolean -> TRUE .)
    EQUAL           reduce using rule 98 (boolean -> TRUE .)
    NOTEQUAL        reduce using rule 98 (boolean -> TRUE .)
    LESSTHAN        reduce using rule 98 (boolean -> TRUE .)
    GREATERTHAN     reduce using rule 98 (boolean -> TRUE .)
    LESSTHANEQUAL   reduce using rule 98 (boolean -> TRUE .)
    GREATERTHANEQUAL reduce using rule 98 (boolean -> TRUE .)
    COMMA           reduce using rule 98 (boolean -> TRUE .)
    POW             reduce using rule 98 (boolean -> TRUE .)
    INCREMENT       reduce using rule 98 (boolean -> TRUE .)
    DECREMENT       reduce using rule 98 (boolean -> TRUE .)
    RPAREN          reduce using rule 98 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 98 (boolean -> TRUE .)
    RBRACKET        reduce using rule 98 (boolean -> TRUE .)
    RBRACE          reduce using rule 98 (boolean -> TRUE .)
    COLON           reduce using rule 98 (boolean -> TRUE .)


state 55

    (99) boolean -> FALSE .

    QUESTION        reduce using rule 99 (boolean -> FALSE .)
    PLUS            reduce using rule 99 (boolean -> FALSE .)
    MINUS           reduce using rule 99 (boolean -> FALSE .)
    MULTIPLY        reduce using rule 99 (boolean -> FALSE .)
    DIVIDE          reduce using rule 99 (boolean -> FALSE .)
    MODULUS         reduce using rule 99 (boolean -> FALSE .)
    AND             reduce using rule 99 (boolean -> FALSE .)
    OR              reduce using rule 99 (boolean -> FALSE .)
    EQUAL           reduce using rule 99 (boolean -> FALSE .)
    NOTEQUAL        reduce using rule 99 (boolean -> FALSE .)
    LESSTHAN        reduce using rule 99 (boolean -> FALSE .)
    GREATERTHAN     reduce using rule 99 (boolean -> FALSE .)
    LESSTHANEQUAL   reduce using rule 99 (boolean -> FALSE .)
    GREATERTHANEQUAL reduce using rule 99 (boolean -> FALSE .)
    COMMA           reduce using rule 99 (boolean -> FALSE .)
    POW             reduce using rule 99 (boolean -> FALSE .)
    INCREMENT       reduce using rule 99 (boolean -> FALSE .)
    DECREMENT       reduce using rule 99 (boolean -> FALSE .)
    RPAREN          reduce using rule 99 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 99 (boolean -> FALSE .)
    RBRACKET        reduce using rule 99 (boolean -> FALSE .)
    RBRACE          reduce using rule 99 (boolean -> FALSE .)
    COLON           reduce using rule 99 (boolean -> FALSE .)


state 56

    (2) stmt_list -> stmt stmt_list .

    $end            reduce using rule 2 (stmt_list -> stmt stmt_list .)
    RBRACE          reduce using rule 2 (stmt_list -> stmt stmt_list .)


state 57

    (16) stmt -> comment stmt .

    IMPORT          reduce using rule 16 (stmt -> comment stmt .)
    FUN             reduce using rule 16 (stmt -> comment stmt .)
    PRINT           reduce using rule 16 (stmt -> comment stmt .)
    RETURN          reduce using rule 16 (stmt -> comment stmt .)
    BREAK           reduce using rule 16 (stmt -> comment stmt .)
    COMMENT         reduce using rule 16 (stmt -> comment stmt .)
    INT             reduce using rule 16 (stmt -> comment stmt .)
    FLOAT           reduce using rule 16 (stmt -> comment stmt .)
    DOUBLE          reduce using rule 16 (stmt -> comment stmt .)
    STRING          reduce using rule 16 (stmt -> comment stmt .)
    BOOLEAN         reduce using rule 16 (stmt -> comment stmt .)
    INTLIST         reduce using rule 16 (stmt -> comment stmt .)
    FLOATLIST       reduce using rule 16 (stmt -> comment stmt .)
    STRINGLIST      reduce using rule 16 (stmt -> comment stmt .)
    DOUBLELIST      reduce using rule 16 (stmt -> comment stmt .)
    INTARRAY        reduce using rule 16 (stmt -> comment stmt .)
    FLOATARRAY      reduce using rule 16 (stmt -> comment stmt .)
    STRINGARRAY     reduce using rule 16 (stmt -> comment stmt .)
    DOUBLEARRAY     reduce using rule 16 (stmt -> comment stmt .)
    IDENTIFIER      reduce using rule 16 (stmt -> comment stmt .)
    IF              reduce using rule 16 (stmt -> comment stmt .)
    FOR             reduce using rule 16 (stmt -> comment stmt .)
    WHILE           reduce using rule 16 (stmt -> comment stmt .)
    LPAREN          reduce using rule 16 (stmt -> comment stmt .)
    NOT             reduce using rule 16 (stmt -> comment stmt .)
    NUMBER          reduce using rule 16 (stmt -> comment stmt .)
    STRING_LITERAL  reduce using rule 16 (stmt -> comment stmt .)
    TRUE            reduce using rule 16 (stmt -> comment stmt .)
    FALSE           reduce using rule 16 (stmt -> comment stmt .)
    $end            reduce using rule 16 (stmt -> comment stmt .)
    RBRACE          reduce using rule 16 (stmt -> comment stmt .)


state 58

    (15) stmt -> empty .

    IMPORT          reduce using rule 15 (stmt -> empty .)
    FUN             reduce using rule 15 (stmt -> empty .)
    PRINT           reduce using rule 15 (stmt -> empty .)
    RETURN          reduce using rule 15 (stmt -> empty .)
    BREAK           reduce using rule 15 (stmt -> empty .)
    COMMENT         reduce using rule 15 (stmt -> empty .)
    INT             reduce using rule 15 (stmt -> empty .)
    FLOAT           reduce using rule 15 (stmt -> empty .)
    DOUBLE          reduce using rule 15 (stmt -> empty .)
    STRING          reduce using rule 15 (stmt -> empty .)
    BOOLEAN         reduce using rule 15 (stmt -> empty .)
    INTLIST         reduce using rule 15 (stmt -> empty .)
    FLOATLIST       reduce using rule 15 (stmt -> empty .)
    STRINGLIST      reduce using rule 15 (stmt -> empty .)
    DOUBLELIST      reduce using rule 15 (stmt -> empty .)
    INTARRAY        reduce using rule 15 (stmt -> empty .)
    FLOATARRAY      reduce using rule 15 (stmt -> empty .)
    STRINGARRAY     reduce using rule 15 (stmt -> empty .)
    DOUBLEARRAY     reduce using rule 15 (stmt -> empty .)
    IDENTIFIER      reduce using rule 15 (stmt -> empty .)
    IF              reduce using rule 15 (stmt -> empty .)
    FOR             reduce using rule 15 (stmt -> empty .)
    WHILE           reduce using rule 15 (stmt -> empty .)
    LPAREN          reduce using rule 15 (stmt -> empty .)
    NOT             reduce using rule 15 (stmt -> empty .)
    NUMBER          reduce using rule 15 (stmt -> empty .)
    STRING_LITERAL  reduce using rule 15 (stmt -> empty .)
    TRUE            reduce using rule 15 (stmt -> empty .)
    FALSE           reduce using rule 15 (stmt -> empty .)
    $end            reduce using rule 15 (stmt -> empty .)
    RBRACE          reduce using rule 15 (stmt -> empty .)


state 59

    (34) import_declaration -> IMPORT STRING_LITERAL .

    IMPORT          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    FUN             reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    PRINT           reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    RETURN          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    BREAK           reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    COMMENT         reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    INT             reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    FLOAT           reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    DOUBLE          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    STRING          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    BOOLEAN         reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    INTLIST         reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    FLOATLIST       reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    STRINGLIST      reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    DOUBLELIST      reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    INTARRAY        reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    FLOATARRAY      reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    STRINGARRAY     reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    DOUBLEARRAY     reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    IDENTIFIER      reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    IF              reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    FOR             reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    WHILE           reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    LPAREN          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    NOT             reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    NUMBER          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    TRUE            reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    FALSE           reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    $end            reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)
    RBRACE          reduce using rule 34 (import_declaration -> IMPORT STRING_LITERAL .)


state 60

    (22) fun_declaration -> FUN return_type . identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 100

state 61

    (23) fun_declaration -> FUN identifier . LPAREN params RPAREN LBRACE stmt_list RBRACE
    (105) general_type -> identifier .

    LPAREN          shift and go to state 101
    IDENTIFIER      reduce using rule 105 (general_type -> identifier .)


state 62

    (26) return_type -> general_type .

    IDENTIFIER      reduce using rule 26 (return_type -> general_type .)


state 63

    (27) return_type -> array_type .

    IDENTIFIER      reduce using rule 27 (return_type -> array_type .)


state 64

    (28) return_type -> list_type .

    IDENTIFIER      reduce using rule 28 (return_type -> list_type .)


state 65

    (29) return_type -> VOID .

    IDENTIFIER      reduce using rule 29 (return_type -> VOID .)


state 66

    (53) assignment -> identifier ASSIGN . expression SEMICOLON
    (54) assignment -> identifier ASSIGN . function_call
    (55) assignment -> identifier ASSIGN . NULL SEMICOLON
    (17) input_stmt -> identifier ASSIGN . INPUT LPAREN string RPAREN SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    NULL            shift and go to state 105
    INPUT           shift and go to state 106
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 102
    expression                     shift and go to state 103
    function_call                  shift and go to state 104
    string                         shift and go to state 32
    digit                          shift and go to state 24
    boolean                        shift and go to state 52

state 67

    (24) function_call -> identifier LPAREN . arg_list RPAREN SEMICOLON
    (59) arg_list -> . expression COMMA arg_list
    (60) arg_list -> . expression
    (61) arg_list -> . empty
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (117) empty -> .
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    RPAREN          reduce using rule 117 (empty -> .)
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 71
    arg_list                       shift and go to state 107
    expression                     shift and go to state 108
    empty                          shift and go to state 109
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 68

    (95) expression -> identifier LBRACKET . expression RBRACKET
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 71
    expression                     shift and go to state 110
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 69

    (96) expression -> identifier LBRACE . expression RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 71
    expression                     shift and go to state 111
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 70

    (87) expression -> LPAREN expression . RPAREN
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 71

    (91) expression -> identifier .
    (95) expression -> identifier . LBRACKET expression RBRACKET
    (96) expression -> identifier . LBRACE expression RBRACE

    RPAREN          reduce using rule 91 (expression -> identifier .)
    PLUS            reduce using rule 91 (expression -> identifier .)
    MINUS           reduce using rule 91 (expression -> identifier .)
    MULTIPLY        reduce using rule 91 (expression -> identifier .)
    DIVIDE          reduce using rule 91 (expression -> identifier .)
    MODULUS         reduce using rule 91 (expression -> identifier .)
    AND             reduce using rule 91 (expression -> identifier .)
    OR              reduce using rule 91 (expression -> identifier .)
    EQUAL           reduce using rule 91 (expression -> identifier .)
    NOTEQUAL        reduce using rule 91 (expression -> identifier .)
    LESSTHAN        reduce using rule 91 (expression -> identifier .)
    GREATERTHAN     reduce using rule 91 (expression -> identifier .)
    LESSTHANEQUAL   reduce using rule 91 (expression -> identifier .)
    GREATERTHANEQUAL reduce using rule 91 (expression -> identifier .)
    COMMA           reduce using rule 91 (expression -> identifier .)
    POW             reduce using rule 91 (expression -> identifier .)
    INCREMENT       reduce using rule 91 (expression -> identifier .)
    DECREMENT       reduce using rule 91 (expression -> identifier .)
    SEMICOLON       reduce using rule 91 (expression -> identifier .)
    QUESTION        reduce using rule 91 (expression -> identifier .)
    RBRACKET        reduce using rule 91 (expression -> identifier .)
    RBRACE          reduce using rule 91 (expression -> identifier .)
    COLON           reduce using rule 91 (expression -> identifier .)
    LBRACKET        shift and go to state 68
    LBRACE          shift and go to state 69


state 72

    (38) assignment -> general_type identifier . ASSIGN expression SEMICOLON
    (39) assignment -> general_type identifier . ASSIGN NULL SEMICOLON
    (40) assignment -> general_type identifier . ASSIGN function_call
    (35) variable_declaration -> general_type identifier . SEMICOLON

    ASSIGN          shift and go to state 113
    SEMICOLON       shift and go to state 114


state 73

    (64) if_stmt -> expression QUESTION . expression COLON expression SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 115
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 74

    (72) expression -> expression PLUS . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 116
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 75

    (73) expression -> expression MINUS . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 117
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 76

    (74) expression -> expression MULTIPLY . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 118
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 77

    (75) expression -> expression DIVIDE . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 119
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 78

    (76) expression -> expression MODULUS . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 120
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 79

    (77) expression -> expression AND . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 121
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 80

    (78) expression -> expression OR . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 122
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 81

    (79) expression -> expression EQUAL . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 123
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 82

    (80) expression -> expression NOTEQUAL . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 124
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 83

    (81) expression -> expression LESSTHAN . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 125
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 84

    (82) expression -> expression GREATERTHAN . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 126
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 85

    (83) expression -> expression LESSTHANEQUAL . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 127
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 86

    (84) expression -> expression GREATERTHANEQUAL . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 128
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 87

    (85) expression -> expression COMMA . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 129
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 88

    (86) expression -> expression POW . expression
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 130
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 89

    (88) expression -> expression INCREMENT .

    QUESTION        reduce using rule 88 (expression -> expression INCREMENT .)
    PLUS            reduce using rule 88 (expression -> expression INCREMENT .)
    MINUS           reduce using rule 88 (expression -> expression INCREMENT .)
    MULTIPLY        reduce using rule 88 (expression -> expression INCREMENT .)
    DIVIDE          reduce using rule 88 (expression -> expression INCREMENT .)
    MODULUS         reduce using rule 88 (expression -> expression INCREMENT .)
    AND             reduce using rule 88 (expression -> expression INCREMENT .)
    OR              reduce using rule 88 (expression -> expression INCREMENT .)
    EQUAL           reduce using rule 88 (expression -> expression INCREMENT .)
    NOTEQUAL        reduce using rule 88 (expression -> expression INCREMENT .)
    LESSTHAN        reduce using rule 88 (expression -> expression INCREMENT .)
    GREATERTHAN     reduce using rule 88 (expression -> expression INCREMENT .)
    LESSTHANEQUAL   reduce using rule 88 (expression -> expression INCREMENT .)
    GREATERTHANEQUAL reduce using rule 88 (expression -> expression INCREMENT .)
    COMMA           reduce using rule 88 (expression -> expression INCREMENT .)
    POW             reduce using rule 88 (expression -> expression INCREMENT .)
    INCREMENT       reduce using rule 88 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 88 (expression -> expression INCREMENT .)
    RPAREN          reduce using rule 88 (expression -> expression INCREMENT .)
    SEMICOLON       reduce using rule 88 (expression -> expression INCREMENT .)
    RBRACKET        reduce using rule 88 (expression -> expression INCREMENT .)
    RBRACE          reduce using rule 88 (expression -> expression INCREMENT .)
    COLON           reduce using rule 88 (expression -> expression INCREMENT .)


state 90

    (89) expression -> expression DECREMENT .

    QUESTION        reduce using rule 89 (expression -> expression DECREMENT .)
    PLUS            reduce using rule 89 (expression -> expression DECREMENT .)
    MINUS           reduce using rule 89 (expression -> expression DECREMENT .)
    MULTIPLY        reduce using rule 89 (expression -> expression DECREMENT .)
    DIVIDE          reduce using rule 89 (expression -> expression DECREMENT .)
    MODULUS         reduce using rule 89 (expression -> expression DECREMENT .)
    AND             reduce using rule 89 (expression -> expression DECREMENT .)
    OR              reduce using rule 89 (expression -> expression DECREMENT .)
    EQUAL           reduce using rule 89 (expression -> expression DECREMENT .)
    NOTEQUAL        reduce using rule 89 (expression -> expression DECREMENT .)
    LESSTHAN        reduce using rule 89 (expression -> expression DECREMENT .)
    GREATERTHAN     reduce using rule 89 (expression -> expression DECREMENT .)
    LESSTHANEQUAL   reduce using rule 89 (expression -> expression DECREMENT .)
    GREATERTHANEQUAL reduce using rule 89 (expression -> expression DECREMENT .)
    COMMA           reduce using rule 89 (expression -> expression DECREMENT .)
    POW             reduce using rule 89 (expression -> expression DECREMENT .)
    INCREMENT       reduce using rule 89 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 89 (expression -> expression DECREMENT .)
    RPAREN          reduce using rule 89 (expression -> expression DECREMENT .)
    SEMICOLON       reduce using rule 89 (expression -> expression DECREMENT .)
    RBRACKET        reduce using rule 89 (expression -> expression DECREMENT .)
    RBRACE          reduce using rule 89 (expression -> expression DECREMENT .)
    COLON           reduce using rule 89 (expression -> expression DECREMENT .)


state 91

    (41) assignment -> list_type identifier . ASSIGN NULL SEMICOLON
    (42) assignment -> list_type identifier . LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type identifier . LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> list_type identifier . ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> list_type identifier . LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> list_type identifier . ASSIGN function_call
    (36) variable_declaration -> list_type identifier . LBRACKET RBRACKET SEMICOLON

    ASSIGN          shift and go to state 131
    LBRACKET        shift and go to state 132


state 92

    (47) assignment -> array_type identifier . ASSIGN NULL SEMICOLON
    (48) assignment -> array_type identifier . LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type identifier . LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type identifier . LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> array_type identifier . ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> array_type identifier . ASSIGN function_call
    (37) variable_declaration -> array_type identifier . LBRACE RBRACE SEMICOLON

    ASSIGN          shift and go to state 133
    LBRACE          shift and go to state 134


state 93

    (18) print_stmt -> PRINT LPAREN . expression RPAREN SEMICOLON
    (19) print_stmt -> PRINT LPAREN . expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> PRINT LPAREN . expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> PRINT LPAREN . function_call RPAREN SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 135
    function_call                  shift and go to state 136
    identifier                     shift and go to state 102
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 94

    (25) return_stmt -> RETURN expression . SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 137
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 95

    (30) break_stmt -> BREAK SEMICOLON .

    IMPORT          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    FUN             reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    PRINT           reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    RETURN          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    BREAK           reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    COMMENT         reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    INT             reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    FLOAT           reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    DOUBLE          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    STRING          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    BOOLEAN         reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    INTLIST         reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    FLOATLIST       reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    STRINGLIST      reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    DOUBLELIST      reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    INTARRAY        reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    FLOATARRAY      reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    STRINGARRAY     reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    DOUBLEARRAY     reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    IF              reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    FOR             reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    WHILE           reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    NOT             reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    STRING_LITERAL  reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    TRUE            reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    FALSE           reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    $end            reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 30 (break_stmt -> BREAK SEMICOLON .)


state 96

    (62) if_stmt -> IF LPAREN . expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> IF LPAREN . expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 138
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 97

    (65) for_stmt -> FOR LPAREN . variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> FOR LPAREN . assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47

    variable_declaration           shift and go to state 139
    assignment                     shift and go to state 140
    general_type                   shift and go to state 141
    identifier                     shift and go to state 142
    list_type                      shift and go to state 143
    array_type                     shift and go to state 144

state 98

    (67) while_stmt -> WHILE LPAREN . expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 145
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 99

    (90) expression -> NOT expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 90 (expression -> NOT expression .)
    RPAREN          reduce using rule 90 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 90 (expression -> NOT expression .)
    RBRACKET        reduce using rule 90 (expression -> NOT expression .)
    RBRACE          reduce using rule 90 (expression -> NOT expression .)
    COLON           reduce using rule 90 (expression -> NOT expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 90 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 90 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 90 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> NOT expression .) ]
  ! MODULUS         [ reduce using rule 90 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 90 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 90 (expression -> NOT expression .) ]
  ! EQUAL           [ reduce using rule 90 (expression -> NOT expression .) ]
  ! NOTEQUAL        [ reduce using rule 90 (expression -> NOT expression .) ]
  ! LESSTHAN        [ reduce using rule 90 (expression -> NOT expression .) ]
  ! GREATERTHAN     [ reduce using rule 90 (expression -> NOT expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 90 (expression -> NOT expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 90 (expression -> NOT expression .) ]
  ! COMMA           [ reduce using rule 90 (expression -> NOT expression .) ]
  ! POW             [ reduce using rule 90 (expression -> NOT expression .) ]
  ! INCREMENT       [ reduce using rule 90 (expression -> NOT expression .) ]
  ! DECREMENT       [ reduce using rule 90 (expression -> NOT expression .) ]


state 100

    (22) fun_declaration -> FUN return_type identifier . LPAREN params RPAREN LBRACE stmt_list RBRACE

    LPAREN          shift and go to state 146


state 101

    (23) fun_declaration -> FUN identifier LPAREN . params RPAREN LBRACE stmt_list RBRACE
    (31) params -> . general_type identifier COMMA params
    (32) params -> . general_type identifier
    (33) params -> . empty
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (117) empty -> .
    (114) identifier -> . IDENTIFIER

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    RPAREN          reduce using rule 117 (empty -> .)
    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 147
    params                         shift and go to state 148
    general_type                   shift and go to state 149
    empty                          shift and go to state 150

state 102

    (91) expression -> identifier .
    (95) expression -> identifier . LBRACKET expression RBRACKET
    (96) expression -> identifier . LBRACE expression RBRACE
    (24) function_call -> identifier . LPAREN arg_list RPAREN SEMICOLON

    SEMICOLON       reduce using rule 91 (expression -> identifier .)
    PLUS            reduce using rule 91 (expression -> identifier .)
    MINUS           reduce using rule 91 (expression -> identifier .)
    MULTIPLY        reduce using rule 91 (expression -> identifier .)
    DIVIDE          reduce using rule 91 (expression -> identifier .)
    MODULUS         reduce using rule 91 (expression -> identifier .)
    AND             reduce using rule 91 (expression -> identifier .)
    OR              reduce using rule 91 (expression -> identifier .)
    EQUAL           reduce using rule 91 (expression -> identifier .)
    NOTEQUAL        reduce using rule 91 (expression -> identifier .)
    LESSTHAN        reduce using rule 91 (expression -> identifier .)
    GREATERTHAN     reduce using rule 91 (expression -> identifier .)
    LESSTHANEQUAL   reduce using rule 91 (expression -> identifier .)
    GREATERTHANEQUAL reduce using rule 91 (expression -> identifier .)
    COMMA           reduce using rule 91 (expression -> identifier .)
    POW             reduce using rule 91 (expression -> identifier .)
    INCREMENT       reduce using rule 91 (expression -> identifier .)
    DECREMENT       reduce using rule 91 (expression -> identifier .)
    RPAREN          reduce using rule 91 (expression -> identifier .)
    LBRACKET        shift and go to state 68
    LBRACE          shift and go to state 69
    LPAREN          shift and go to state 67


state 103

    (53) assignment -> identifier ASSIGN expression . SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 151
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 104

    (54) assignment -> identifier ASSIGN function_call .

    IMPORT          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    FUN             reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    PRINT           reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    RETURN          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    BREAK           reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    COMMENT         reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    INT             reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    FLOAT           reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    DOUBLE          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    STRING          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    BOOLEAN         reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    INTLIST         reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    FLOATLIST       reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    STRINGLIST      reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    DOUBLELIST      reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    INTARRAY        reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    FLOATARRAY      reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    STRINGARRAY     reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    DOUBLEARRAY     reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    IDENTIFIER      reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    IF              reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    FOR             reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    WHILE           reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    LPAREN          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    NOT             reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    NUMBER          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    STRING_LITERAL  reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    TRUE            reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    FALSE           reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    $end            reduce using rule 54 (assignment -> identifier ASSIGN function_call .)
    RBRACE          reduce using rule 54 (assignment -> identifier ASSIGN function_call .)


state 105

    (55) assignment -> identifier ASSIGN NULL . SEMICOLON

    SEMICOLON       shift and go to state 152


state 106

    (17) input_stmt -> identifier ASSIGN INPUT . LPAREN string RPAREN SEMICOLON

    LPAREN          shift and go to state 153


state 107

    (24) function_call -> identifier LPAREN arg_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 154


state 108

    (59) arg_list -> expression . COMMA arg_list
    (60) arg_list -> expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    COMMA           shift and go to state 155
    RPAREN          reduce using rule 60 (arg_list -> expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 109

    (61) arg_list -> empty .

    RPAREN          reduce using rule 61 (arg_list -> empty .)


state 110

    (95) expression -> identifier LBRACKET expression . RBRACKET
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RBRACKET        shift and go to state 156
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 111

    (96) expression -> identifier LBRACE expression . RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RBRACE          shift and go to state 157
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 112

    (87) expression -> LPAREN expression RPAREN .

    QUESTION        reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    INCREMENT       reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 87 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 87 (expression -> LPAREN expression RPAREN .)


state 113

    (38) assignment -> general_type identifier ASSIGN . expression SEMICOLON
    (39) assignment -> general_type identifier ASSIGN . NULL SEMICOLON
    (40) assignment -> general_type identifier ASSIGN . function_call
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    NULL            shift and go to state 159
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 102
    expression                     shift and go to state 158
    function_call                  shift and go to state 160
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 114

    (35) variable_declaration -> general_type identifier SEMICOLON .

    IMPORT          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    FUN             reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    PRINT           reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    RETURN          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    BREAK           reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    COMMENT         reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    INT             reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    FLOAT           reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    DOUBLE          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    STRING          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    BOOLEAN         reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    INTLIST         reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    FLOATLIST       reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    STRINGLIST      reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    DOUBLELIST      reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    INTARRAY        reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    FLOATARRAY      reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    STRINGARRAY     reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    DOUBLEARRAY     reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    IF              reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    FOR             reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    WHILE           reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    LPAREN          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    NOT             reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    NUMBER          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    STRING_LITERAL  reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    TRUE            reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    FALSE           reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    $end            reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)
    RBRACE          reduce using rule 35 (variable_declaration -> general_type identifier SEMICOLON .)


state 115

    (64) if_stmt -> expression QUESTION expression . COLON expression SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    COLON           shift and go to state 161
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 116

    (72) expression -> expression PLUS expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 72 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 72 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 72 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 72 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 72 (expression -> expression PLUS expression .)
    COLON           reduce using rule 72 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! COMMA           [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! POW             [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! INCREMENT       [ reduce using rule 72 (expression -> expression PLUS expression .) ]
  ! DECREMENT       [ reduce using rule 72 (expression -> expression PLUS expression .) ]


state 117

    (73) expression -> expression MINUS expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 73 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 73 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 73 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 73 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 73 (expression -> expression MINUS expression .)
    COLON           reduce using rule 73 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! COMMA           [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! POW             [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! INCREMENT       [ reduce using rule 73 (expression -> expression MINUS expression .) ]
  ! DECREMENT       [ reduce using rule 73 (expression -> expression MINUS expression .) ]


state 118

    (74) expression -> expression MULTIPLY expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 74 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 74 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 74 (expression -> expression MULTIPLY expression .)
    RBRACKET        reduce using rule 74 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 74 (expression -> expression MULTIPLY expression .)
    COLON           reduce using rule 74 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! MODULUS         [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! EQUAL           [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! NOTEQUAL        [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! LESSTHAN        [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! GREATERTHAN     [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! COMMA           [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! POW             [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! INCREMENT       [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]
  ! DECREMENT       [ reduce using rule 74 (expression -> expression MULTIPLY expression .) ]


state 119

    (75) expression -> expression DIVIDE expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 75 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 75 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 75 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 75 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 75 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 75 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! MODULUS         [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! EQUAL           [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! NOTEQUAL        [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! LESSTHAN        [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHAN     [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! COMMA           [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! POW             [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! INCREMENT       [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]
  ! DECREMENT       [ reduce using rule 75 (expression -> expression DIVIDE expression .) ]


state 120

    (76) expression -> expression MODULUS expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 76 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 76 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 76 (expression -> expression MODULUS expression .)
    RBRACKET        reduce using rule 76 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 76 (expression -> expression MODULUS expression .)
    COLON           reduce using rule 76 (expression -> expression MODULUS expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! MINUS           [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! MULTIPLY        [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! MODULUS         [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! AND             [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! OR              [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! EQUAL           [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! LESSTHAN        [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! GREATERTHAN     [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! COMMA           [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! POW             [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! INCREMENT       [ reduce using rule 76 (expression -> expression MODULUS expression .) ]
  ! DECREMENT       [ reduce using rule 76 (expression -> expression MODULUS expression .) ]


state 121

    (77) expression -> expression AND expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 77 (expression -> expression AND expression .)
    RPAREN          reduce using rule 77 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 77 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 77 (expression -> expression AND expression .)
    RBRACE          reduce using rule 77 (expression -> expression AND expression .)
    COLON           reduce using rule 77 (expression -> expression AND expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! LESSTHAN        [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! GREATERTHAN     [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! COMMA           [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! POW             [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! INCREMENT       [ reduce using rule 77 (expression -> expression AND expression .) ]
  ! DECREMENT       [ reduce using rule 77 (expression -> expression AND expression .) ]


state 122

    (78) expression -> expression OR expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 78 (expression -> expression OR expression .)
    RPAREN          reduce using rule 78 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 78 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 78 (expression -> expression OR expression .)
    RBRACE          reduce using rule 78 (expression -> expression OR expression .)
    COLON           reduce using rule 78 (expression -> expression OR expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! LESSTHAN        [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! GREATERTHAN     [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! COMMA           [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! POW             [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! INCREMENT       [ reduce using rule 78 (expression -> expression OR expression .) ]
  ! DECREMENT       [ reduce using rule 78 (expression -> expression OR expression .) ]


state 123

    (79) expression -> expression EQUAL expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 79 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 79 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 79 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 79 (expression -> expression EQUAL expression .)
    RBRACE          reduce using rule 79 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 79 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! MODULUS         [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! OR              [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! COMMA           [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! POW             [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! INCREMENT       [ reduce using rule 79 (expression -> expression EQUAL expression .) ]
  ! DECREMENT       [ reduce using rule 79 (expression -> expression EQUAL expression .) ]


state 124

    (80) expression -> expression NOTEQUAL expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 80 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 80 (expression -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 80 (expression -> expression NOTEQUAL expression .)
    RBRACKET        reduce using rule 80 (expression -> expression NOTEQUAL expression .)
    RBRACE          reduce using rule 80 (expression -> expression NOTEQUAL expression .)
    COLON           reduce using rule 80 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! MODULUS         [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! AND             [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! OR              [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! COMMA           [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! POW             [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! INCREMENT       [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]
  ! DECREMENT       [ reduce using rule 80 (expression -> expression NOTEQUAL expression .) ]


state 125

    (81) expression -> expression LESSTHAN expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 81 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 81 (expression -> expression LESSTHAN expression .)
    SEMICOLON       reduce using rule 81 (expression -> expression LESSTHAN expression .)
    RBRACKET        reduce using rule 81 (expression -> expression LESSTHAN expression .)
    RBRACE          reduce using rule 81 (expression -> expression LESSTHAN expression .)
    COLON           reduce using rule 81 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! MULTIPLY        [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! MODULUS         [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! AND             [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! OR              [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! EQUAL           [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! COMMA           [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! POW             [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! INCREMENT       [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]
  ! DECREMENT       [ reduce using rule 81 (expression -> expression LESSTHAN expression .) ]


state 126

    (82) expression -> expression GREATERTHAN expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 82 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 82 (expression -> expression GREATERTHAN expression .)
    SEMICOLON       reduce using rule 82 (expression -> expression GREATERTHAN expression .)
    RBRACKET        reduce using rule 82 (expression -> expression GREATERTHAN expression .)
    RBRACE          reduce using rule 82 (expression -> expression GREATERTHAN expression .)
    COLON           reduce using rule 82 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! MULTIPLY        [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! MODULUS         [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! AND             [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! OR              [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! EQUAL           [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHAN     [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! COMMA           [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! POW             [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! INCREMENT       [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]
  ! DECREMENT       [ reduce using rule 82 (expression -> expression GREATERTHAN expression .) ]


state 127

    (83) expression -> expression LESSTHANEQUAL expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .)
    RPAREN          reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .)
    SEMICOLON       reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .)
    RBRACKET        reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .)
    RBRACE          reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .)
    COLON           reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MINUS           [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MODULUS         [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! AND             [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! OR              [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! COMMA           [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! POW             [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! INCREMENT       [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]
  ! DECREMENT       [ reduce using rule 83 (expression -> expression LESSTHANEQUAL expression .) ]


state 128

    (84) expression -> expression GREATERTHANEQUAL expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .)
    RPAREN          reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .)
    SEMICOLON       reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .)
    RBRACKET        reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .)
    RBRACE          reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .)
    COLON           reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MINUS           [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MODULUS         [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! AND             [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! OR              [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! GREATERTHAN     [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! COMMA           [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! POW             [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! INCREMENT       [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! DECREMENT       [ reduce using rule 84 (expression -> expression GREATERTHANEQUAL expression .) ]


state 129

    (85) expression -> expression COMMA expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 85 (expression -> expression COMMA expression .)
    RPAREN          reduce using rule 85 (expression -> expression COMMA expression .)
    SEMICOLON       reduce using rule 85 (expression -> expression COMMA expression .)
    RBRACKET        reduce using rule 85 (expression -> expression COMMA expression .)
    RBRACE          reduce using rule 85 (expression -> expression COMMA expression .)
    COLON           reduce using rule 85 (expression -> expression COMMA expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MINUS           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MULTIPLY        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DIVIDE          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MODULUS         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! AND             [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! OR              [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! EQUAL           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! NOTEQUAL        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESSTHAN        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATERTHAN     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! COMMA           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! POW             [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! INCREMENT       [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DECREMENT       [ reduce using rule 85 (expression -> expression COMMA expression .) ]


state 130

    (86) expression -> expression POW expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    QUESTION        reduce using rule 86 (expression -> expression POW expression .)
    RPAREN          reduce using rule 86 (expression -> expression POW expression .)
    SEMICOLON       reduce using rule 86 (expression -> expression POW expression .)
    RBRACKET        reduce using rule 86 (expression -> expression POW expression .)
    RBRACE          reduce using rule 86 (expression -> expression POW expression .)
    COLON           reduce using rule 86 (expression -> expression POW expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! PLUS            [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! MINUS           [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! MULTIPLY        [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! DIVIDE          [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! MODULUS         [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! AND             [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! OR              [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! EQUAL           [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! NOTEQUAL        [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! LESSTHAN        [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! GREATERTHAN     [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! COMMA           [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! POW             [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! INCREMENT       [ reduce using rule 86 (expression -> expression POW expression .) ]
  ! DECREMENT       [ reduce using rule 86 (expression -> expression POW expression .) ]


state 131

    (41) assignment -> list_type identifier ASSIGN . NULL SEMICOLON
    (44) assignment -> list_type identifier ASSIGN . LBRACKET expression RBRACKET SEMICOLON
    (46) assignment -> list_type identifier ASSIGN . function_call
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER

    NULL            shift and go to state 163
    LBRACKET        shift and go to state 164
    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 162
    function_call                  shift and go to state 165

state 132

    (42) assignment -> list_type identifier LBRACKET . digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type identifier LBRACKET . digit RBRACKET ASSIGN expression SEMICOLON
    (45) assignment -> list_type identifier LBRACKET . digit RBRACKET ASSIGN function_call
    (36) variable_declaration -> list_type identifier LBRACKET . RBRACKET SEMICOLON
    (97) digit -> . NUMBER

    RBRACKET        shift and go to state 167
    NUMBER          shift and go to state 53

    digit                          shift and go to state 166

state 133

    (47) assignment -> array_type identifier ASSIGN . NULL SEMICOLON
    (51) assignment -> array_type identifier ASSIGN . LBRACE expression RBRACE SEMICOLON
    (52) assignment -> array_type identifier ASSIGN . function_call
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER

    NULL            shift and go to state 168
    LBRACE          shift and go to state 169
    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 162
    function_call                  shift and go to state 170

state 134

    (48) assignment -> array_type identifier LBRACE . digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type identifier LBRACE . digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type identifier LBRACE . digit RBRACE ASSIGN function_call
    (37) variable_declaration -> array_type identifier LBRACE . RBRACE SEMICOLON
    (97) digit -> . NUMBER

    RBRACE          shift and go to state 172
    NUMBER          shift and go to state 53

    digit                          shift and go to state 171

state 135

    (18) print_stmt -> PRINT LPAREN expression . RPAREN SEMICOLON
    (19) print_stmt -> PRINT LPAREN expression . PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> PRINT LPAREN expression . PLUS function_call RPAREN SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 173
    PLUS            shift and go to state 174
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 136

    (21) print_stmt -> PRINT LPAREN function_call . RPAREN SEMICOLON

    RPAREN          shift and go to state 175


state 137

    (25) return_stmt -> RETURN expression SEMICOLON .

    IMPORT          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    FUN             reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    COMMENT         reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    INT             reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    INTLIST         reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    FLOATLIST       reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    STRINGLIST      reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    DOUBLELIST      reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    INTARRAY        reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    FLOATARRAY      reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    STRINGARRAY     reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    DOUBLEARRAY     reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    IF              reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    $end            reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 25 (return_stmt -> RETURN expression SEMICOLON .)


state 138

    (62) if_stmt -> IF LPAREN expression . RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> IF LPAREN expression . RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 176
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 139

    (65) for_stmt -> FOR LPAREN variable_declaration . expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 177
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 140

    (66) for_stmt -> FOR LPAREN assignment . expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 178
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 141

    (35) variable_declaration -> general_type . identifier SEMICOLON
    (38) assignment -> general_type . identifier ASSIGN expression SEMICOLON
    (39) assignment -> general_type . identifier ASSIGN NULL SEMICOLON
    (40) assignment -> general_type . identifier ASSIGN function_call
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 179

state 142

    (53) assignment -> identifier . ASSIGN expression SEMICOLON
    (54) assignment -> identifier . ASSIGN function_call
    (55) assignment -> identifier . ASSIGN NULL SEMICOLON
    (105) general_type -> identifier .

    ASSIGN          shift and go to state 180
    IDENTIFIER      reduce using rule 105 (general_type -> identifier .)


state 143

    (36) variable_declaration -> list_type . identifier LBRACKET RBRACKET SEMICOLON
    (41) assignment -> list_type . identifier ASSIGN NULL SEMICOLON
    (42) assignment -> list_type . identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type . identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> list_type . identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> list_type . identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> list_type . identifier ASSIGN function_call
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 181

state 144

    (37) variable_declaration -> array_type . identifier LBRACE RBRACE SEMICOLON
    (47) assignment -> array_type . identifier ASSIGN NULL SEMICOLON
    (48) assignment -> array_type . identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type . identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type . identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> array_type . identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> array_type . identifier ASSIGN function_call
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 182

state 145

    (67) while_stmt -> WHILE LPAREN expression . RPAREN LBRACE stmt_list RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 183
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 146

    (22) fun_declaration -> FUN return_type identifier LPAREN . params RPAREN LBRACE stmt_list RBRACE
    (31) params -> . general_type identifier COMMA params
    (32) params -> . general_type identifier
    (33) params -> . empty
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (117) empty -> .
    (114) identifier -> . IDENTIFIER

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    RPAREN          reduce using rule 117 (empty -> .)
    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 147
    params                         shift and go to state 184
    general_type                   shift and go to state 149
    empty                          shift and go to state 150

state 147

    (105) general_type -> identifier .

    IDENTIFIER      reduce using rule 105 (general_type -> identifier .)


state 148

    (23) fun_declaration -> FUN identifier LPAREN params . RPAREN LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 185


state 149

    (31) params -> general_type . identifier COMMA params
    (32) params -> general_type . identifier
    (114) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 47

    identifier                     shift and go to state 186

state 150

    (33) params -> empty .

    RPAREN          reduce using rule 33 (params -> empty .)


state 151

    (53) assignment -> identifier ASSIGN expression SEMICOLON .

    IMPORT          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    FUN             reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    COMMENT         reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    INT             reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    BOOLEAN         reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    INTLIST         reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    FLOATLIST       reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    STRINGLIST      reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    DOUBLELIST      reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    INTARRAY        reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    FLOATARRAY      reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    STRINGARRAY     reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    DOUBLEARRAY     reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    NOT             reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    $end            reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 53 (assignment -> identifier ASSIGN expression SEMICOLON .)


state 152

    (55) assignment -> identifier ASSIGN NULL SEMICOLON .

    IMPORT          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    FUN             reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    PRINT           reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    RETURN          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    BREAK           reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    COMMENT         reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    INT             reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    FLOAT           reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    DOUBLE          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    STRING          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    BOOLEAN         reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    INTLIST         reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    FLOATLIST       reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    STRINGLIST      reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    DOUBLELIST      reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    INTARRAY        reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    FLOATARRAY      reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    STRINGARRAY     reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    DOUBLEARRAY     reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    IF              reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    FOR             reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    WHILE           reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    LPAREN          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    NOT             reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    NUMBER          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    STRING_LITERAL  reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    TRUE            reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    FALSE           reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    $end            reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)
    RBRACE          reduce using rule 55 (assignment -> identifier ASSIGN NULL SEMICOLON .)


state 153

    (17) input_stmt -> identifier ASSIGN INPUT LPAREN . string RPAREN SEMICOLON
    (116) string -> . STRING_LITERAL

    STRING_LITERAL  shift and go to state 17

    string                         shift and go to state 187

state 154

    (24) function_call -> identifier LPAREN arg_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 188


state 155

    (59) arg_list -> expression COMMA . arg_list
    (85) expression -> expression COMMA . expression
    (59) arg_list -> . expression COMMA arg_list
    (60) arg_list -> . expression
    (61) arg_list -> . empty
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (117) empty -> .
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    RPAREN          reduce using rule 117 (empty -> .)
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 189
    arg_list                       shift and go to state 190
    empty                          shift and go to state 109
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 156

    (95) expression -> identifier LBRACKET expression RBRACKET .

    QUESTION        reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    MODULUS         reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    AND             reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    OR              reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    NOTEQUAL        reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    LESSTHAN        reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    GREATERTHAN     reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    LESSTHANEQUAL   reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    GREATERTHANEQUAL reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    POW             reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)
    COLON           reduce using rule 95 (expression -> identifier LBRACKET expression RBRACKET .)


state 157

    (96) expression -> identifier LBRACE expression RBRACE .

    QUESTION        reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    PLUS            reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    MINUS           reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    MULTIPLY        reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    DIVIDE          reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    MODULUS         reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    AND             reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    OR              reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    EQUAL           reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    NOTEQUAL        reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    LESSTHAN        reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    GREATERTHAN     reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    LESSTHANEQUAL   reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    GREATERTHANEQUAL reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    COMMA           reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    POW             reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    INCREMENT       reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    DECREMENT       reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    RPAREN          reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    SEMICOLON       reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    RBRACKET        reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    RBRACE          reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)
    COLON           reduce using rule 96 (expression -> identifier LBRACE expression RBRACE .)


state 158

    (38) assignment -> general_type identifier ASSIGN expression . SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 191
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 159

    (39) assignment -> general_type identifier ASSIGN NULL . SEMICOLON

    SEMICOLON       shift and go to state 192


state 160

    (40) assignment -> general_type identifier ASSIGN function_call .

    IMPORT          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    FUN             reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    PRINT           reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    RETURN          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    BREAK           reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    COMMENT         reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    INT             reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    FLOAT           reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    DOUBLE          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    STRING          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    BOOLEAN         reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    INTLIST         reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    FLOATLIST       reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    STRINGLIST      reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    DOUBLELIST      reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    INTARRAY        reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    FLOATARRAY      reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    STRINGARRAY     reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    DOUBLEARRAY     reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    IDENTIFIER      reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    IF              reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    FOR             reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    WHILE           reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    LPAREN          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    NOT             reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    NUMBER          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    STRING_LITERAL  reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    TRUE            reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    FALSE           reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    $end            reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)
    RBRACE          reduce using rule 40 (assignment -> general_type identifier ASSIGN function_call .)


state 161

    (64) if_stmt -> expression QUESTION expression COLON . expression SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 193
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 162

    (24) function_call -> identifier . LPAREN arg_list RPAREN SEMICOLON

    LPAREN          shift and go to state 67


state 163

    (41) assignment -> list_type identifier ASSIGN NULL . SEMICOLON

    SEMICOLON       shift and go to state 194


state 164

    (44) assignment -> list_type identifier ASSIGN LBRACKET . expression RBRACKET SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 71
    expression                     shift and go to state 195
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 165

    (46) assignment -> list_type identifier ASSIGN function_call .

    IMPORT          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    FUN             reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    PRINT           reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    RETURN          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    BREAK           reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    COMMENT         reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    INT             reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    FLOAT           reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    DOUBLE          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    STRING          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    BOOLEAN         reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    INTLIST         reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    FLOATLIST       reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    STRINGLIST      reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    DOUBLELIST      reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    INTARRAY        reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    FLOATARRAY      reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    STRINGARRAY     reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    DOUBLEARRAY     reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    IDENTIFIER      reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    IF              reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    FOR             reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    WHILE           reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    LPAREN          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    NOT             reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    NUMBER          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    STRING_LITERAL  reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    TRUE            reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    FALSE           reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    $end            reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)
    RBRACE          reduce using rule 46 (assignment -> list_type identifier ASSIGN function_call .)


state 166

    (42) assignment -> list_type identifier LBRACKET digit . RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type identifier LBRACKET digit . RBRACKET ASSIGN expression SEMICOLON
    (45) assignment -> list_type identifier LBRACKET digit . RBRACKET ASSIGN function_call

    RBRACKET        shift and go to state 196


state 167

    (36) variable_declaration -> list_type identifier LBRACKET RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 197


state 168

    (47) assignment -> array_type identifier ASSIGN NULL . SEMICOLON

    SEMICOLON       shift and go to state 198


state 169

    (51) assignment -> array_type identifier ASSIGN LBRACE . expression RBRACE SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 71
    expression                     shift and go to state 199
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 170

    (52) assignment -> array_type identifier ASSIGN function_call .

    IMPORT          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    FUN             reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    PRINT           reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    RETURN          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    BREAK           reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    COMMENT         reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    INT             reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    FLOAT           reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    DOUBLE          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    STRING          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    BOOLEAN         reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    INTLIST         reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    FLOATLIST       reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    STRINGLIST      reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    DOUBLELIST      reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    INTARRAY        reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    FLOATARRAY      reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    STRINGARRAY     reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    DOUBLEARRAY     reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    IDENTIFIER      reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    IF              reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    FOR             reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    WHILE           reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    LPAREN          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    NOT             reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    NUMBER          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    STRING_LITERAL  reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    TRUE            reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    FALSE           reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    $end            reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)
    RBRACE          reduce using rule 52 (assignment -> array_type identifier ASSIGN function_call .)


state 171

    (48) assignment -> array_type identifier LBRACE digit . RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type identifier LBRACE digit . RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type identifier LBRACE digit . RBRACE ASSIGN function_call

    RBRACE          shift and go to state 200


state 172

    (37) variable_declaration -> array_type identifier LBRACE RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 201


state 173

    (18) print_stmt -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 202


state 174

    (19) print_stmt -> PRINT LPAREN expression PLUS . function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> PRINT LPAREN expression PLUS . function_call RPAREN SEMICOLON
    (72) expression -> expression PLUS . expression
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 116
    function_call                  shift and go to state 203
    identifier                     shift and go to state 204
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 175

    (21) print_stmt -> PRINT LPAREN function_call RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 205


state 176

    (62) if_stmt -> IF LPAREN expression RPAREN . LBRACE stmt_list RBRACE
    (63) if_stmt -> IF LPAREN expression RPAREN . LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 206


state 177

    (65) for_stmt -> FOR LPAREN variable_declaration expression . SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 207
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 178

    (66) for_stmt -> FOR LPAREN assignment expression . SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 208
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 179

    (35) variable_declaration -> general_type identifier . SEMICOLON
    (38) assignment -> general_type identifier . ASSIGN expression SEMICOLON
    (39) assignment -> general_type identifier . ASSIGN NULL SEMICOLON
    (40) assignment -> general_type identifier . ASSIGN function_call

    SEMICOLON       shift and go to state 114
    ASSIGN          shift and go to state 113


state 180

    (53) assignment -> identifier ASSIGN . expression SEMICOLON
    (54) assignment -> identifier ASSIGN . function_call
    (55) assignment -> identifier ASSIGN . NULL SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    NULL            shift and go to state 105
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 102
    expression                     shift and go to state 103
    function_call                  shift and go to state 104
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 181

    (36) variable_declaration -> list_type identifier . LBRACKET RBRACKET SEMICOLON
    (41) assignment -> list_type identifier . ASSIGN NULL SEMICOLON
    (42) assignment -> list_type identifier . LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type identifier . LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> list_type identifier . ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> list_type identifier . LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> list_type identifier . ASSIGN function_call

    LBRACKET        shift and go to state 209
    ASSIGN          shift and go to state 131


state 182

    (37) variable_declaration -> array_type identifier . LBRACE RBRACE SEMICOLON
    (47) assignment -> array_type identifier . ASSIGN NULL SEMICOLON
    (48) assignment -> array_type identifier . LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type identifier . LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type identifier . LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> array_type identifier . ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> array_type identifier . ASSIGN function_call

    LBRACE          shift and go to state 210
    ASSIGN          shift and go to state 133


state 183

    (67) while_stmt -> WHILE LPAREN expression RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 211


state 184

    (22) fun_declaration -> FUN return_type identifier LPAREN params . RPAREN LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 212


state 185

    (23) fun_declaration -> FUN identifier LPAREN params RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 213


state 186

    (31) params -> general_type identifier . COMMA params
    (32) params -> general_type identifier .

    COMMA           shift and go to state 214
    RPAREN          reduce using rule 32 (params -> general_type identifier .)


state 187

    (17) input_stmt -> identifier ASSIGN INPUT LPAREN string . RPAREN SEMICOLON

    RPAREN          shift and go to state 215


state 188

    (24) function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .

    IMPORT          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    FUN             reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    BREAK           reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    COMMENT         reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    INT             reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    FLOAT           reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    STRING          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    INTLIST         reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    FLOATLIST       reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    STRINGLIST      reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    DOUBLELIST      reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    INTARRAY        reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    FLOATARRAY      reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    STRINGARRAY     reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    DOUBLEARRAY     reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    IF              reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    FOR             reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    NOT             reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    NUMBER          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    TRUE            reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    FALSE           reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    $end            reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)
    PLUS            reduce using rule 24 (function_call -> identifier LPAREN arg_list RPAREN SEMICOLON .)


state 189

    (85) expression -> expression COMMA expression .
    (59) arg_list -> expression . COMMA arg_list
    (60) arg_list -> expression .
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 60 (arg_list -> expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHANEQUAL resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    COMMA           shift and go to state 155
    RPAREN          reduce using rule 60 (arg_list -> expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90

  ! COMMA           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MINUS           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MULTIPLY        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DIVIDE          [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! MODULUS         [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! AND             [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! OR              [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! EQUAL           [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! NOTEQUAL        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESSTHAN        [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATERTHAN     [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! POW             [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! INCREMENT       [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! DECREMENT       [ reduce using rule 85 (expression -> expression COMMA expression .) ]
  ! RPAREN          [ reduce using rule 85 (expression -> expression COMMA expression .) ]


state 190

    (59) arg_list -> expression COMMA arg_list .

    RPAREN          reduce using rule 59 (arg_list -> expression COMMA arg_list .)


state 191

    (38) assignment -> general_type identifier ASSIGN expression SEMICOLON .

    IMPORT          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    FUN             reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    COMMENT         reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    INT             reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    BOOLEAN         reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    INTLIST         reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    FLOATLIST       reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    STRINGLIST      reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    DOUBLELIST      reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    INTARRAY        reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    FLOATARRAY      reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    STRINGARRAY     reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    DOUBLEARRAY     reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    NOT             reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    $end            reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 38 (assignment -> general_type identifier ASSIGN expression SEMICOLON .)


state 192

    (39) assignment -> general_type identifier ASSIGN NULL SEMICOLON .

    IMPORT          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    FUN             reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    PRINT           reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    RETURN          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    BREAK           reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    COMMENT         reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    INT             reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    FLOAT           reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLE          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    STRING          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    BOOLEAN         reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    INTLIST         reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    FLOATLIST       reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    STRINGLIST      reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLELIST      reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    INTARRAY        reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    FLOATARRAY      reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    STRINGARRAY     reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLEARRAY     reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    IDENTIFIER      reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    IF              reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    FOR             reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    WHILE           reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    LPAREN          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    NOT             reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    NUMBER          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    STRING_LITERAL  reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    TRUE            reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    FALSE           reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    $end            reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)
    RBRACE          reduce using rule 39 (assignment -> general_type identifier ASSIGN NULL SEMICOLON .)


state 193

    (64) if_stmt -> expression QUESTION expression COLON expression . SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 216
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 194

    (41) assignment -> list_type identifier ASSIGN NULL SEMICOLON .

    IMPORT          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    FUN             reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    PRINT           reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    RETURN          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    BREAK           reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    COMMENT         reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    INT             reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    FLOAT           reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLE          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    STRING          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    BOOLEAN         reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    INTLIST         reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    FLOATLIST       reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    STRINGLIST      reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLELIST      reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    INTARRAY        reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    FLOATARRAY      reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    STRINGARRAY     reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLEARRAY     reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    IF              reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    FOR             reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    WHILE           reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    LPAREN          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    NOT             reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    NUMBER          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    STRING_LITERAL  reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    TRUE            reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    FALSE           reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    $end            reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)
    RBRACE          reduce using rule 41 (assignment -> list_type identifier ASSIGN NULL SEMICOLON .)


state 195

    (44) assignment -> list_type identifier ASSIGN LBRACKET expression . RBRACKET SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RBRACKET        shift and go to state 217
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 196

    (42) assignment -> list_type identifier LBRACKET digit RBRACKET . ASSIGN NULL SEMICOLON
    (43) assignment -> list_type identifier LBRACKET digit RBRACKET . ASSIGN expression SEMICOLON
    (45) assignment -> list_type identifier LBRACKET digit RBRACKET . ASSIGN function_call

    ASSIGN          shift and go to state 218


state 197

    (36) variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .

    IMPORT          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    FUN             reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    PRINT           reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    RETURN          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    BREAK           reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    COMMENT         reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    INT             reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    DOUBLE          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    STRING          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    BOOLEAN         reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    INTLIST         reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    FLOATLIST       reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    STRINGLIST      reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    DOUBLELIST      reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    INTARRAY        reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    FLOATARRAY      reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    STRINGARRAY     reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    DOUBLEARRAY     reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    IF              reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    FOR             reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    WHILE           reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    NOT             reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    TRUE            reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    FALSE           reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 36 (variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON .)


state 198

    (47) assignment -> array_type identifier ASSIGN NULL SEMICOLON .

    IMPORT          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    FUN             reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    PRINT           reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    RETURN          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    BREAK           reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    COMMENT         reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    INT             reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    FLOAT           reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLE          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    STRING          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    BOOLEAN         reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    INTLIST         reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    FLOATLIST       reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    STRINGLIST      reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLELIST      reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    INTARRAY        reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    FLOATARRAY      reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    STRINGARRAY     reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    DOUBLEARRAY     reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    IF              reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    FOR             reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    WHILE           reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    LPAREN          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    NOT             reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    NUMBER          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    STRING_LITERAL  reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    TRUE            reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    FALSE           reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    $end            reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)
    RBRACE          reduce using rule 47 (assignment -> array_type identifier ASSIGN NULL SEMICOLON .)


state 199

    (51) assignment -> array_type identifier ASSIGN LBRACE expression . RBRACE SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RBRACE          shift and go to state 219
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 200

    (48) assignment -> array_type identifier LBRACE digit RBRACE . ASSIGN NULL SEMICOLON
    (49) assignment -> array_type identifier LBRACE digit RBRACE . ASSIGN expression SEMICOLON
    (50) assignment -> array_type identifier LBRACE digit RBRACE . ASSIGN function_call

    ASSIGN          shift and go to state 220


state 201

    (37) variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .

    IMPORT          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    FUN             reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    PRINT           reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    RETURN          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    BREAK           reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    COMMENT         reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    INT             reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    FLOAT           reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    DOUBLE          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    STRING          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    BOOLEAN         reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    INTLIST         reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    FLOATLIST       reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    STRINGLIST      reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    DOUBLELIST      reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    INTARRAY        reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    FLOATARRAY      reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    STRINGARRAY     reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    DOUBLEARRAY     reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    IF              reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    FOR             reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    WHILE           reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    LPAREN          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    NOT             reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    NUMBER          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    STRING_LITERAL  reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    TRUE            reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    FALSE           reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    $end            reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)
    RBRACE          reduce using rule 37 (variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON .)


state 202

    (18) print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .

    IMPORT          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FUN             reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INTLIST         reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FLOATLIST       reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRINGLIST      reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLELIST      reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INTARRAY        reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FLOATARRAY      reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRINGARRAY     reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLEARRAY     reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 18 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 203

    (19) print_stmt -> PRINT LPAREN expression PLUS function_call . PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> PRINT LPAREN expression PLUS function_call . RPAREN SEMICOLON

    PLUS            shift and go to state 221
    RPAREN          shift and go to state 222


state 204

    (24) function_call -> identifier . LPAREN arg_list RPAREN SEMICOLON
    (91) expression -> identifier .
    (95) expression -> identifier . LBRACKET expression RBRACKET
    (96) expression -> identifier . LBRACE expression RBRACE

    LPAREN          shift and go to state 67
    PLUS            reduce using rule 91 (expression -> identifier .)
    MINUS           reduce using rule 91 (expression -> identifier .)
    MULTIPLY        reduce using rule 91 (expression -> identifier .)
    DIVIDE          reduce using rule 91 (expression -> identifier .)
    MODULUS         reduce using rule 91 (expression -> identifier .)
    AND             reduce using rule 91 (expression -> identifier .)
    OR              reduce using rule 91 (expression -> identifier .)
    EQUAL           reduce using rule 91 (expression -> identifier .)
    NOTEQUAL        reduce using rule 91 (expression -> identifier .)
    LESSTHAN        reduce using rule 91 (expression -> identifier .)
    GREATERTHAN     reduce using rule 91 (expression -> identifier .)
    LESSTHANEQUAL   reduce using rule 91 (expression -> identifier .)
    GREATERTHANEQUAL reduce using rule 91 (expression -> identifier .)
    COMMA           reduce using rule 91 (expression -> identifier .)
    POW             reduce using rule 91 (expression -> identifier .)
    INCREMENT       reduce using rule 91 (expression -> identifier .)
    DECREMENT       reduce using rule 91 (expression -> identifier .)
    RPAREN          reduce using rule 91 (expression -> identifier .)
    LBRACKET        shift and go to state 68
    LBRACE          shift and go to state 69


state 205

    (21) print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .

    IMPORT          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    FUN             reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    PRINT           reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    RETURN          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    BREAK           reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    COMMENT         reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    INT             reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    FLOAT           reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    STRING          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    INTLIST         reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    FLOATLIST       reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    STRINGLIST      reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    DOUBLELIST      reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    INTARRAY        reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    FLOATARRAY      reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    STRINGARRAY     reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    DOUBLEARRAY     reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    IF              reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    FOR             reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    WHILE           reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    LPAREN          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    NOT             reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    NUMBER          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    TRUE            reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    FALSE           reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    $end            reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)
    RBRACE          reduce using rule 21 (print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON .)


state 206

    (62) if_stmt -> IF LPAREN expression RPAREN LBRACE . stmt_list RBRACE
    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE . stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    expression                     shift and go to state 22
    stmt_list                      shift and go to state 223
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 207

    (65) for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON . expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 224
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 208

    (66) for_stmt -> FOR LPAREN assignment expression SEMICOLON . expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 225
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 209

    (36) variable_declaration -> list_type identifier LBRACKET . RBRACKET SEMICOLON
    (42) assignment -> list_type identifier LBRACKET . digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> list_type identifier LBRACKET . digit RBRACKET ASSIGN expression SEMICOLON
    (45) assignment -> list_type identifier LBRACKET . digit RBRACKET ASSIGN function_call
    (97) digit -> . NUMBER

    RBRACKET        shift and go to state 167
    NUMBER          shift and go to state 53

    digit                          shift and go to state 166

state 210

    (37) variable_declaration -> array_type identifier LBRACE . RBRACE SEMICOLON
    (48) assignment -> array_type identifier LBRACE . digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> array_type identifier LBRACE . digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> array_type identifier LBRACE . digit RBRACE ASSIGN function_call
    (97) digit -> . NUMBER

    RBRACE          shift and go to state 172
    NUMBER          shift and go to state 53

    digit                          shift and go to state 171

state 211

    (67) while_stmt -> WHILE LPAREN expression RPAREN LBRACE . stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    expression                     shift and go to state 22
    stmt_list                      shift and go to state 226
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 212

    (22) fun_declaration -> FUN return_type identifier LPAREN params RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 227


state 213

    (23) fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE . stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    identifier                     shift and go to state 19
    stmt_list                      shift and go to state 228
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    general_type                   shift and go to state 21
    expression                     shift and go to state 22
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 214

    (31) params -> general_type identifier COMMA . params
    (31) params -> . general_type identifier COMMA params
    (32) params -> . general_type identifier
    (33) params -> . empty
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (117) empty -> .
    (114) identifier -> . IDENTIFIER

    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    RPAREN          reduce using rule 117 (empty -> .)
    IDENTIFIER      shift and go to state 47

    general_type                   shift and go to state 149
    identifier                     shift and go to state 147
    params                         shift and go to state 229
    empty                          shift and go to state 150

state 215

    (17) input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 216

    (64) if_stmt -> expression QUESTION expression COLON expression SEMICOLON .

    IMPORT          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    FUN             reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    PRINT           reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    RETURN          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    BREAK           reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    COMMENT         reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    INT             reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    FLOAT           reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    DOUBLE          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    STRING          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    BOOLEAN         reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    INTLIST         reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    FLOATLIST       reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    STRINGLIST      reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    DOUBLELIST      reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    INTARRAY        reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    FLOATARRAY      reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    STRINGARRAY     reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    DOUBLEARRAY     reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    IDENTIFIER      reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    IF              reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    FOR             reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    WHILE           reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    LPAREN          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    NOT             reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    NUMBER          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    TRUE            reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    FALSE           reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    $end            reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)
    RBRACE          reduce using rule 64 (if_stmt -> expression QUESTION expression COLON expression SEMICOLON .)


state 217

    (44) assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 231


state 218

    (42) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN . NULL SEMICOLON
    (43) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN . expression SEMICOLON
    (45) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN . function_call
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    NULL            shift and go to state 232
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 102
    digit                          shift and go to state 24
    expression                     shift and go to state 233
    function_call                  shift and go to state 234
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 219

    (51) assignment -> array_type identifier ASSIGN LBRACE expression RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 235


state 220

    (48) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN . NULL SEMICOLON
    (49) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN . expression SEMICOLON
    (50) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN . function_call
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    NULL            shift and go to state 236
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    identifier                     shift and go to state 102
    digit                          shift and go to state 24
    expression                     shift and go to state 237
    function_call                  shift and go to state 238
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 221

    (19) print_stmt -> PRINT LPAREN expression PLUS function_call PLUS . expression RPAREN SEMICOLON
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (114) identifier -> . IDENTIFIER
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    IDENTIFIER      shift and go to state 47
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

    expression                     shift and go to state 239
    identifier                     shift and go to state 71
    digit                          shift and go to state 24
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 222

    (20) print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 240


state 223

    (62) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list . RBRACE
    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list . RBRACE ELSE LBRACE stmt_list RBRACE

    RBRACE          shift and go to state 241


state 224

    (65) for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression . RPAREN LBRACE stmt_list RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 242
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 225

    (66) for_stmt -> FOR LPAREN assignment expression SEMICOLON expression . RPAREN LBRACE stmt_list RBRACE
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 243
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 226

    (67) while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 244


state 227

    (22) fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE . stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    identifier                     shift and go to state 19
    stmt_list                      shift and go to state 245
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    general_type                   shift and go to state 21
    expression                     shift and go to state 22
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 228

    (23) fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 246


state 229

    (31) params -> general_type identifier COMMA params .

    RPAREN          reduce using rule 31 (params -> general_type identifier COMMA params .)


state 230

    (17) input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .

    IMPORT          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    FUN             reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    PRINT           reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    RETURN          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    BREAK           reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    COMMENT         reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    INT             reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    FLOAT           reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    STRING          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    INTLIST         reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    FLOATLIST       reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    STRINGLIST      reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    DOUBLELIST      reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    INTARRAY        reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    FLOATARRAY      reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    STRINGARRAY     reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    DOUBLEARRAY     reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    IF              reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    FOR             reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    WHILE           reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    LPAREN          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    NOT             reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    NUMBER          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    TRUE            reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    FALSE           reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    $end            reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)
    RBRACE          reduce using rule 17 (input_stmt -> identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON .)


state 231

    (44) assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .

    IMPORT          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    FUN             reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    PRINT           reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    RETURN          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    BREAK           reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    COMMENT         reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    INT             reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    DOUBLE          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    STRING          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    BOOLEAN         reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    INTLIST         reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    FLOATLIST       reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    STRINGLIST      reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    DOUBLELIST      reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    INTARRAY        reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    FLOATARRAY      reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    STRINGARRAY     reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    DOUBLEARRAY     reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    IF              reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    FOR             reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    WHILE           reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    NOT             reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    TRUE            reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    FALSE           reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    $end            reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 44 (assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON .)


state 232

    (42) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL . SEMICOLON

    SEMICOLON       shift and go to state 247


state 233

    (43) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression . SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 248
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 234

    (45) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .

    IMPORT          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    FUN             reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    PRINT           reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    RETURN          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    BREAK           reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    COMMENT         reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    INT             reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    FLOAT           reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    DOUBLE          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    STRING          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    BOOLEAN         reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    INTLIST         reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    FLOATLIST       reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    STRINGLIST      reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    DOUBLELIST      reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    INTARRAY        reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    FLOATARRAY      reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    STRINGARRAY     reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    DOUBLEARRAY     reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    IDENTIFIER      reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    IF              reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    FOR             reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    WHILE           reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    LPAREN          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    NOT             reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    NUMBER          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    STRING_LITERAL  reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    TRUE            reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    FALSE           reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    $end            reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)
    RBRACE          reduce using rule 45 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call .)


state 235

    (51) assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .

    IMPORT          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    FUN             reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    PRINT           reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    RETURN          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    BREAK           reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    COMMENT         reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    INT             reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    FLOAT           reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    DOUBLE          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    STRING          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    BOOLEAN         reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    INTLIST         reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    FLOATLIST       reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    STRINGLIST      reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    DOUBLELIST      reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    INTARRAY        reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    FLOATARRAY      reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    STRINGARRAY     reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    DOUBLEARRAY     reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    IF              reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    FOR             reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    WHILE           reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    LPAREN          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    NOT             reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    NUMBER          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    STRING_LITERAL  reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    TRUE            reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    FALSE           reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    $end            reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)
    RBRACE          reduce using rule 51 (assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON .)


state 236

    (48) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL . SEMICOLON

    SEMICOLON       shift and go to state 249


state 237

    (49) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression . SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    SEMICOLON       shift and go to state 250
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 238

    (50) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .

    IMPORT          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    FUN             reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    PRINT           reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    RETURN          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    BREAK           reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    COMMENT         reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    INT             reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    FLOAT           reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    DOUBLE          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    STRING          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    BOOLEAN         reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    INTLIST         reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    FLOATLIST       reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    STRINGLIST      reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    DOUBLELIST      reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    INTARRAY        reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    FLOATARRAY      reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    STRINGARRAY     reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    DOUBLEARRAY     reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    IDENTIFIER      reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    IF              reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    FOR             reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    WHILE           reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    LPAREN          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    NOT             reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    NUMBER          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    STRING_LITERAL  reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    TRUE            reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    FALSE           reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    $end            reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)
    RBRACE          reduce using rule 50 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call .)


state 239

    (19) print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression . RPAREN SEMICOLON
    (72) expression -> expression . PLUS expression
    (73) expression -> expression . MINUS expression
    (74) expression -> expression . MULTIPLY expression
    (75) expression -> expression . DIVIDE expression
    (76) expression -> expression . MODULUS expression
    (77) expression -> expression . AND expression
    (78) expression -> expression . OR expression
    (79) expression -> expression . EQUAL expression
    (80) expression -> expression . NOTEQUAL expression
    (81) expression -> expression . LESSTHAN expression
    (82) expression -> expression . GREATERTHAN expression
    (83) expression -> expression . LESSTHANEQUAL expression
    (84) expression -> expression . GREATERTHANEQUAL expression
    (85) expression -> expression . COMMA expression
    (86) expression -> expression . POW expression
    (88) expression -> expression . INCREMENT
    (89) expression -> expression . DECREMENT

    RPAREN          shift and go to state 251
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MODULUS         shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80
    EQUAL           shift and go to state 81
    NOTEQUAL        shift and go to state 82
    LESSTHAN        shift and go to state 83
    GREATERTHAN     shift and go to state 84
    LESSTHANEQUAL   shift and go to state 85
    GREATERTHANEQUAL shift and go to state 86
    COMMA           shift and go to state 87
    POW             shift and go to state 88
    INCREMENT       shift and go to state 89
    DECREMENT       shift and go to state 90


state 240

    (20) print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .

    IMPORT          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    FUN             reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    PRINT           reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    RETURN          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    BREAK           reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    COMMENT         reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    INT             reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    FLOAT           reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    STRING          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    INTLIST         reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    FLOATLIST       reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    STRINGLIST      reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    DOUBLELIST      reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    INTARRAY        reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    FLOATARRAY      reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    STRINGARRAY     reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    DOUBLEARRAY     reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    IF              reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    FOR             reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    WHILE           reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    LPAREN          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    NOT             reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    NUMBER          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    TRUE            reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    FALSE           reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    $end            reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)
    RBRACE          reduce using rule 20 (print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON .)


state 241

    (62) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .
    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE . ELSE LBRACE stmt_list RBRACE

    IMPORT          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    INT             reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    IF              reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 62 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    ELSE            shift and go to state 252


state 242

    (65) for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 253


state 243

    (66) for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 254


state 244

    (67) while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .

    IMPORT          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    INT             reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    IF              reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 67 (while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE .)


state 245

    (22) fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 255


state 246

    (23) fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .

    IMPORT          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    INT             reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    IF              reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 23 (fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)


state 247

    (42) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .

    IMPORT          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    FUN             reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    PRINT           reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    RETURN          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    BREAK           reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    COMMENT         reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    INT             reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    FLOAT           reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    DOUBLE          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    STRING          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    BOOLEAN         reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    INTLIST         reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    FLOATLIST       reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    STRINGLIST      reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    DOUBLELIST      reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    INTARRAY        reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    FLOATARRAY      reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    STRINGARRAY     reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    DOUBLEARRAY     reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    IDENTIFIER      reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    IF              reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    FOR             reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    WHILE           reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    LPAREN          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    NOT             reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    NUMBER          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    STRING_LITERAL  reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    TRUE            reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    FALSE           reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    $end            reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)
    RBRACE          reduce using rule 42 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON .)


state 248

    (43) assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .

    IMPORT          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    FUN             reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    COMMENT         reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    INT             reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    BOOLEAN         reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    INTLIST         reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    FLOATLIST       reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    STRINGLIST      reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    DOUBLELIST      reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    INTARRAY        reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    FLOATARRAY      reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    STRINGARRAY     reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    DOUBLEARRAY     reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    NOT             reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 43 (assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON .)


state 249

    (48) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .

    IMPORT          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    FUN             reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    PRINT           reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    RETURN          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    BREAK           reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    COMMENT         reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    INT             reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    FLOAT           reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    DOUBLE          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    STRING          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    BOOLEAN         reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    INTLIST         reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    FLOATLIST       reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    STRINGLIST      reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    DOUBLELIST      reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    INTARRAY        reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    FLOATARRAY      reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    STRINGARRAY     reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    DOUBLEARRAY     reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    IF              reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    FOR             reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    WHILE           reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    LPAREN          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    NOT             reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    NUMBER          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    STRING_LITERAL  reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    TRUE            reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    FALSE           reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    $end            reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)
    RBRACE          reduce using rule 48 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON .)


state 250

    (49) assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .

    IMPORT          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    FUN             reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    COMMENT         reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    INT             reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    BOOLEAN         reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    INTLIST         reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    FLOATLIST       reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    STRINGLIST      reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    DOUBLELIST      reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    INTARRAY        reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    FLOATARRAY      reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    STRINGARRAY     reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    DOUBLEARRAY     reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    NOT             reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    $end            reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 49 (assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON .)


state 251

    (19) print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 256


state 252

    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 257


state 253

    (65) for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE . stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    variable_declaration           shift and go to state 8
    expression                     shift and go to state 22
    stmt_list                      shift and go to state 258
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 254

    (66) for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE . stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    assignment                     shift and go to state 7
    expression                     shift and go to state 22
    stmt_list                      shift and go to state 259
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 255

    (22) fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .

    IMPORT          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    INT             reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    IF              reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 22 (fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE .)


state 256

    (19) print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .

    IMPORT          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    FUN             reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    INT             reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    STRING          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    INTLIST         reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    FLOATLIST       reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    STRINGLIST      reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    DOUBLELIST      reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    INTARRAY        reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    FLOATARRAY      reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    STRINGARRAY     reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    DOUBLEARRAY     reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    IF              reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    FOR             reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    NOT             reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    $end            reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 19 (print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON .)


state 257

    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE . stmt_list RBRACE
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt_list -> . empty
    (5) stmt -> . import_declaration
    (6) stmt -> . fun_declaration
    (7) stmt -> . assignment
    (8) stmt -> . variable_declaration
    (9) stmt -> . print_stmt
    (10) stmt -> . control_structure
    (11) stmt -> . return_stmt
    (12) stmt -> . function_call
    (13) stmt -> . break_stmt
    (14) stmt -> . input_stmt
    (15) stmt -> . empty
    (16) stmt -> . comment stmt
    (117) empty -> .
    (34) import_declaration -> . IMPORT STRING_LITERAL
    (22) fun_declaration -> . FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (23) fun_declaration -> . FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE
    (38) assignment -> . general_type identifier ASSIGN expression SEMICOLON
    (39) assignment -> . general_type identifier ASSIGN NULL SEMICOLON
    (40) assignment -> . general_type identifier ASSIGN function_call
    (41) assignment -> . list_type identifier ASSIGN NULL SEMICOLON
    (42) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON
    (43) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON
    (44) assignment -> . list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON
    (45) assignment -> . list_type identifier LBRACKET digit RBRACKET ASSIGN function_call
    (46) assignment -> . list_type identifier ASSIGN function_call
    (47) assignment -> . array_type identifier ASSIGN NULL SEMICOLON
    (48) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON
    (49) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON
    (50) assignment -> . array_type identifier LBRACE digit RBRACE ASSIGN function_call
    (51) assignment -> . array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON
    (52) assignment -> . array_type identifier ASSIGN function_call
    (53) assignment -> . identifier ASSIGN expression SEMICOLON
    (54) assignment -> . identifier ASSIGN function_call
    (55) assignment -> . identifier ASSIGN NULL SEMICOLON
    (35) variable_declaration -> . general_type identifier SEMICOLON
    (36) variable_declaration -> . list_type identifier LBRACKET RBRACKET SEMICOLON
    (37) variable_declaration -> . array_type identifier LBRACE RBRACE SEMICOLON
    (18) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (19) print_stmt -> . PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON
    (20) print_stmt -> . PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON
    (21) print_stmt -> . PRINT LPAREN function_call RPAREN SEMICOLON
    (56) control_structure -> . if_stmt
    (57) control_structure -> . for_stmt
    (58) control_structure -> . while_stmt
    (25) return_stmt -> . RETURN expression SEMICOLON
    (24) function_call -> . identifier LPAREN arg_list RPAREN SEMICOLON
    (30) break_stmt -> . BREAK SEMICOLON
    (17) input_stmt -> . identifier ASSIGN INPUT LPAREN string RPAREN SEMICOLON
    (115) comment -> . COMMENT
    (100) general_type -> . INT
    (101) general_type -> . FLOAT
    (102) general_type -> . DOUBLE
    (103) general_type -> . STRING
    (104) general_type -> . BOOLEAN
    (105) general_type -> . identifier
    (110) list_type -> . INTLIST
    (111) list_type -> . FLOATLIST
    (112) list_type -> . STRINGLIST
    (113) list_type -> . DOUBLELIST
    (106) array_type -> . INTARRAY
    (107) array_type -> . FLOATARRAY
    (108) array_type -> . STRINGARRAY
    (109) array_type -> . DOUBLEARRAY
    (114) identifier -> . IDENTIFIER
    (62) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (63) if_stmt -> . IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE
    (64) if_stmt -> . expression QUESTION expression COLON expression SEMICOLON
    (65) for_stmt -> . FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (66) for_stmt -> . FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE
    (67) while_stmt -> . WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE
    (72) expression -> . expression PLUS expression
    (73) expression -> . expression MINUS expression
    (74) expression -> . expression MULTIPLY expression
    (75) expression -> . expression DIVIDE expression
    (76) expression -> . expression MODULUS expression
    (77) expression -> . expression AND expression
    (78) expression -> . expression OR expression
    (79) expression -> . expression EQUAL expression
    (80) expression -> . expression NOTEQUAL expression
    (81) expression -> . expression LESSTHAN expression
    (82) expression -> . expression GREATERTHAN expression
    (83) expression -> . expression LESSTHANEQUAL expression
    (84) expression -> . expression GREATERTHANEQUAL expression
    (85) expression -> . expression COMMA expression
    (86) expression -> . expression POW expression
    (87) expression -> . LPAREN expression RPAREN
    (88) expression -> . expression INCREMENT
    (89) expression -> . expression DECREMENT
    (90) expression -> . NOT expression
    (91) expression -> . identifier
    (92) expression -> . digit
    (93) expression -> . string
    (94) expression -> . boolean
    (95) expression -> . identifier LBRACKET expression RBRACKET
    (96) expression -> . identifier LBRACE expression RBRACE
    (97) digit -> . NUMBER
    (116) string -> . STRING_LITERAL
    (98) boolean -> . TRUE
    (99) boolean -> . FALSE

  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for INTLIST resolved as shift
  ! shift/reduce conflict for FLOATLIST resolved as shift
  ! shift/reduce conflict for STRINGLIST resolved as shift
  ! shift/reduce conflict for DOUBLELIST resolved as shift
  ! shift/reduce conflict for INTARRAY resolved as shift
  ! shift/reduce conflict for FLOATARRAY resolved as shift
  ! shift/reduce conflict for STRINGARRAY resolved as shift
  ! shift/reduce conflict for DOUBLEARRAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING_LITERAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBRACE          reduce using rule 117 (empty -> .)
    IMPORT          shift and go to state 16
    FUN             shift and go to state 18
    PRINT           shift and go to state 26
    RETURN          shift and go to state 30
    BREAK           shift and go to state 31
    COMMENT         shift and go to state 33
    INT             shift and go to state 34
    FLOAT           shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOLEAN         shift and go to state 38
    INTLIST         shift and go to state 39
    FLOATLIST       shift and go to state 40
    STRINGLIST      shift and go to state 41
    DOUBLELIST      shift and go to state 42
    INTARRAY        shift and go to state 43
    FLOATARRAY      shift and go to state 44
    STRINGARRAY     shift and go to state 45
    DOUBLEARRAY     shift and go to state 46
    IDENTIFIER      shift and go to state 47
    IF              shift and go to state 48
    FOR             shift and go to state 49
    WHILE           shift and go to state 50
    LPAREN          shift and go to state 20
    NOT             shift and go to state 51
    NUMBER          shift and go to state 53
    STRING_LITERAL  shift and go to state 17
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55

  ! IMPORT          [ reduce using rule 117 (empty -> .) ]
  ! FUN             [ reduce using rule 117 (empty -> .) ]
  ! PRINT           [ reduce using rule 117 (empty -> .) ]
  ! RETURN          [ reduce using rule 117 (empty -> .) ]
  ! BREAK           [ reduce using rule 117 (empty -> .) ]
  ! COMMENT         [ reduce using rule 117 (empty -> .) ]
  ! INT             [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 117 (empty -> .) ]
  ! STRING          [ reduce using rule 117 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 117 (empty -> .) ]
  ! INTLIST         [ reduce using rule 117 (empty -> .) ]
  ! FLOATLIST       [ reduce using rule 117 (empty -> .) ]
  ! STRINGLIST      [ reduce using rule 117 (empty -> .) ]
  ! DOUBLELIST      [ reduce using rule 117 (empty -> .) ]
  ! INTARRAY        [ reduce using rule 117 (empty -> .) ]
  ! FLOATARRAY      [ reduce using rule 117 (empty -> .) ]
  ! STRINGARRAY     [ reduce using rule 117 (empty -> .) ]
  ! DOUBLEARRAY     [ reduce using rule 117 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 117 (empty -> .) ]
  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! FOR             [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! LPAREN          [ reduce using rule 117 (empty -> .) ]
  ! NOT             [ reduce using rule 117 (empty -> .) ]
  ! NUMBER          [ reduce using rule 117 (empty -> .) ]
  ! STRING_LITERAL  [ reduce using rule 117 (empty -> .) ]
  ! TRUE            [ reduce using rule 117 (empty -> .) ]
  ! FALSE           [ reduce using rule 117 (empty -> .) ]

    expression                     shift and go to state 22
    stmt_list                      shift and go to state 260
    stmt                           shift and go to state 3
    empty                          shift and go to state 4
    import_declaration             shift and go to state 5
    fun_declaration                shift and go to state 6
    assignment                     shift and go to state 7
    variable_declaration           shift and go to state 8
    print_stmt                     shift and go to state 9
    control_structure              shift and go to state 10
    return_stmt                    shift and go to state 11
    function_call                  shift and go to state 12
    break_stmt                     shift and go to state 13
    input_stmt                     shift and go to state 14
    comment                        shift and go to state 15
    identifier                     shift and go to state 19
    general_type                   shift and go to state 21
    list_type                      shift and go to state 23
    digit                          shift and go to state 24
    array_type                     shift and go to state 25
    if_stmt                        shift and go to state 27
    for_stmt                       shift and go to state 28
    while_stmt                     shift and go to state 29
    string                         shift and go to state 32
    boolean                        shift and go to state 52

state 258

    (65) for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 261


state 259

    (66) for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 262


state 260

    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list . RBRACE

    RBRACE          shift and go to state 263


state 261

    (65) for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .

    IMPORT          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    INT             reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    IF              reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 65 (for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)


state 262

    (66) for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .

    IMPORT          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    INT             reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    IF              reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    $end            reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 66 (for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE .)


state 263

    (63) if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .

    IMPORT          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    FUN             reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    PRINT           reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    RETURN          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    BREAK           reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    COMMENT         reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    INT             reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    FLOAT           reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    DOUBLE          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    STRING          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    BOOLEAN         reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    INTLIST         reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    FLOATLIST       reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    STRINGLIST      reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    DOUBLELIST      reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    INTARRAY        reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    FLOATARRAY      reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    STRINGARRAY     reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    DOUBLEARRAY     reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    IDENTIFIER      reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    IF              reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    FOR             reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    WHILE           reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    LPAREN          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    NOT             reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    NUMBER          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    STRING_LITERAL  reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    TRUE            reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    FALSE           reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    $end            reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)
    RBRACE          reduce using rule 63 (if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IMPORT in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 0 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 0 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 0 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 0 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 0 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 3 resolved as shift
WARNING: shift/reduce conflict for FUN in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 3 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 3 resolved as shift
WARNING: shift/reduce conflict for INT in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 3 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 3 resolved as shift
WARNING: shift/reduce conflict for STRING in state 3 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 3 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 3 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 3 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 3 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 3 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 3 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 3 resolved as shift
WARNING: shift/reduce conflict for NOT in state 3 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 3 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 3 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 3 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 3 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 15 resolved as shift
WARNING: shift/reduce conflict for FUN in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 15 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 15 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 15 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 15 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 15 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 15 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 15 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 15 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 15 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 15 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 15 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for FOR in state 15 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for NOT in state 15 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 15 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 15 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 99 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 99 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 99 resolved as shift
WARNING: shift/reduce conflict for POW in state 99 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 99 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 116 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 116 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 116 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 116 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 116 resolved as shift
WARNING: shift/reduce conflict for POW in state 116 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 116 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 117 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 117 resolved as shift
WARNING: shift/reduce conflict for POW in state 117 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 117 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 118 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 118 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 118 resolved as shift
WARNING: shift/reduce conflict for POW in state 118 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 118 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 119 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 119 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 119 resolved as shift
WARNING: shift/reduce conflict for POW in state 119 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 119 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 120 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 120 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 120 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 120 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 120 resolved as shift
WARNING: shift/reduce conflict for POW in state 120 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 120 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 121 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 121 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 121 resolved as shift
WARNING: shift/reduce conflict for POW in state 121 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 121 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 122 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 122 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 122 resolved as shift
WARNING: shift/reduce conflict for AND in state 122 resolved as shift
WARNING: shift/reduce conflict for OR in state 122 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 122 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 122 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 122 resolved as shift
WARNING: shift/reduce conflict for POW in state 122 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 122 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 123 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 123 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 123 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 123 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 123 resolved as shift
WARNING: shift/reduce conflict for AND in state 123 resolved as shift
WARNING: shift/reduce conflict for OR in state 123 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 123 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 123 resolved as shift
WARNING: shift/reduce conflict for POW in state 123 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 123 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 123 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 124 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 124 resolved as shift
WARNING: shift/reduce conflict for OR in state 124 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 124 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 124 resolved as shift
WARNING: shift/reduce conflict for POW in state 124 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 125 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 125 resolved as shift
WARNING: shift/reduce conflict for AND in state 125 resolved as shift
WARNING: shift/reduce conflict for OR in state 125 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 125 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 125 resolved as shift
WARNING: shift/reduce conflict for POW in state 125 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 125 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 126 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 126 resolved as shift
WARNING: shift/reduce conflict for AND in state 126 resolved as shift
WARNING: shift/reduce conflict for OR in state 126 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 126 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 126 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 126 resolved as shift
WARNING: shift/reduce conflict for POW in state 126 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 126 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 127 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 127 resolved as shift
WARNING: shift/reduce conflict for AND in state 127 resolved as shift
WARNING: shift/reduce conflict for OR in state 127 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 127 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 127 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 127 resolved as shift
WARNING: shift/reduce conflict for POW in state 127 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 127 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 128 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 128 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 128 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for OR in state 128 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 128 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 128 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 128 resolved as shift
WARNING: shift/reduce conflict for POW in state 128 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 128 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 129 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 129 resolved as shift
WARNING: shift/reduce conflict for AND in state 129 resolved as shift
WARNING: shift/reduce conflict for OR in state 129 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 129 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 129 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 129 resolved as shift
WARNING: shift/reduce conflict for POW in state 129 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 129 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 130 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 130 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 130 resolved as shift
WARNING: shift/reduce conflict for AND in state 130 resolved as shift
WARNING: shift/reduce conflict for OR in state 130 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 130 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 130 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 130 resolved as shift
WARNING: shift/reduce conflict for POW in state 130 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 130 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 130 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 189 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 189 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 189 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 189 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 189 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 189 resolved as shift
WARNING: shift/reduce conflict for AND in state 189 resolved as shift
WARNING: shift/reduce conflict for OR in state 189 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 189 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 189 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for GREATERTHANEQUAL in state 189 resolved as shift
WARNING: shift/reduce conflict for POW in state 189 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 189 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 189 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 206 resolved as shift
WARNING: shift/reduce conflict for FUN in state 206 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 206 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 206 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 206 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 206 resolved as shift
WARNING: shift/reduce conflict for INT in state 206 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 206 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 206 resolved as shift
WARNING: shift/reduce conflict for STRING in state 206 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 206 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 206 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 206 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 206 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 206 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 206 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 206 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 206 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 206 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 206 resolved as shift
WARNING: shift/reduce conflict for IF in state 206 resolved as shift
WARNING: shift/reduce conflict for FOR in state 206 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 206 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 206 resolved as shift
WARNING: shift/reduce conflict for NOT in state 206 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 206 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 206 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 206 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 206 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 211 resolved as shift
WARNING: shift/reduce conflict for FUN in state 211 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 211 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 211 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 211 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 211 resolved as shift
WARNING: shift/reduce conflict for INT in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 211 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 211 resolved as shift
WARNING: shift/reduce conflict for STRING in state 211 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 211 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 211 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 211 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 211 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 211 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 211 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 211 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 211 resolved as shift
WARNING: shift/reduce conflict for IF in state 211 resolved as shift
WARNING: shift/reduce conflict for FOR in state 211 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 211 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 211 resolved as shift
WARNING: shift/reduce conflict for NOT in state 211 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 211 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 211 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 211 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 211 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 213 resolved as shift
WARNING: shift/reduce conflict for FUN in state 213 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 213 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 213 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 213 resolved as shift
WARNING: shift/reduce conflict for INT in state 213 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 213 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 213 resolved as shift
WARNING: shift/reduce conflict for STRING in state 213 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 213 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 213 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 213 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 213 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 213 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 213 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 213 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 213 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 213 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 213 resolved as shift
WARNING: shift/reduce conflict for IF in state 213 resolved as shift
WARNING: shift/reduce conflict for FOR in state 213 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 213 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 213 resolved as shift
WARNING: shift/reduce conflict for NOT in state 213 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 213 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 213 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 213 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 213 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 227 resolved as shift
WARNING: shift/reduce conflict for FUN in state 227 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 227 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 227 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 227 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 227 resolved as shift
WARNING: shift/reduce conflict for INT in state 227 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 227 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 227 resolved as shift
WARNING: shift/reduce conflict for STRING in state 227 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 227 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 227 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 227 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 227 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 227 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 227 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 227 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 227 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 227 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 227 resolved as shift
WARNING: shift/reduce conflict for IF in state 227 resolved as shift
WARNING: shift/reduce conflict for FOR in state 227 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 227 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 227 resolved as shift
WARNING: shift/reduce conflict for NOT in state 227 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 227 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 227 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 227 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 227 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 253 resolved as shift
WARNING: shift/reduce conflict for FUN in state 253 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 253 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 253 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 253 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 253 resolved as shift
WARNING: shift/reduce conflict for INT in state 253 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 253 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 253 resolved as shift
WARNING: shift/reduce conflict for STRING in state 253 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 253 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 253 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 253 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 253 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 253 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 253 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 253 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 253 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 253 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 253 resolved as shift
WARNING: shift/reduce conflict for IF in state 253 resolved as shift
WARNING: shift/reduce conflict for FOR in state 253 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 253 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 253 resolved as shift
WARNING: shift/reduce conflict for NOT in state 253 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 253 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 253 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 253 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 253 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 254 resolved as shift
WARNING: shift/reduce conflict for FUN in state 254 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 254 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 254 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 254 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 254 resolved as shift
WARNING: shift/reduce conflict for INT in state 254 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 254 resolved as shift
WARNING: shift/reduce conflict for STRING in state 254 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 254 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 254 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 254 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 254 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 254 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 254 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 254 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 254 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 254 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 254 resolved as shift
WARNING: shift/reduce conflict for IF in state 254 resolved as shift
WARNING: shift/reduce conflict for FOR in state 254 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 254 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 254 resolved as shift
WARNING: shift/reduce conflict for NOT in state 254 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 254 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 254 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 254 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 254 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 257 resolved as shift
WARNING: shift/reduce conflict for FUN in state 257 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 257 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 257 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 257 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 257 resolved as shift
WARNING: shift/reduce conflict for INT in state 257 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 257 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 257 resolved as shift
WARNING: shift/reduce conflict for STRING in state 257 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 257 resolved as shift
WARNING: shift/reduce conflict for INTLIST in state 257 resolved as shift
WARNING: shift/reduce conflict for FLOATLIST in state 257 resolved as shift
WARNING: shift/reduce conflict for STRINGLIST in state 257 resolved as shift
WARNING: shift/reduce conflict for DOUBLELIST in state 257 resolved as shift
WARNING: shift/reduce conflict for INTARRAY in state 257 resolved as shift
WARNING: shift/reduce conflict for FLOATARRAY in state 257 resolved as shift
WARNING: shift/reduce conflict for STRINGARRAY in state 257 resolved as shift
WARNING: shift/reduce conflict for DOUBLEARRAY in state 257 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 257 resolved as shift
WARNING: shift/reduce conflict for IF in state 257 resolved as shift
WARNING: shift/reduce conflict for FOR in state 257 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 257 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 257 resolved as shift
WARNING: shift/reduce conflict for NOT in state 257 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 257 resolved as shift
WARNING: shift/reduce conflict for STRING_LITERAL in state 257 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 257 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 257 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (stmt_list -> stmt)
WARNING: rejected rule (empty -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (stmt_list -> empty)
WARNING: rejected rule (stmt -> empty) in state 4
WARNING: reduce/reduce conflict in state 189 resolved using rule (arg_list -> expression)
WARNING: rejected rule (expression -> expression COMMA expression) in state 189
