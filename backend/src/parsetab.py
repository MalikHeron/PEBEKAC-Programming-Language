
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOSTROPHE ARGS ARROW ASSIGN AT BACKSLASH BOOLEAN BREAK CASE CLASS COLON COMMA COMMENT CONTINUE DECREMENT DEFAULT DIVIDE DIVIDEASSIGN DOT DOUBLE DOUBLEARRAY DOUBLELIST DOUBLEQUOTE ELSE EQUAL FALSE FLOAT FLOATARRAY FLOATLIST FOR FUN GREATERTHAN GREATERTHANEQUAL HASH IDENTIFIER IF IMPORT INCREMENT INPUT INT INTARRAY INTLIST LBRACE LBRACKET LESSTHAN LESSTHANEQUAL LPAREN MINUS MINUSASSIGN MODASSIGN MODULUS MULTIPLY NEW NOT NOTEQUAL NULL NUMBER OR PARAMS PIPE PLUS PLUSASSIGN POW PRINT QUESTION RBRACE RBRACKET RETURN RPAREN SEMICOLON SLASH STRING STRINGARRAY STRINGLIST STRING_LITERAL SWITCH TIMESASSIGN TRUE VOID WHILE\n    program : stmt_list\n    \n    stmt_list : stmt stmt_list\n              | stmt\n              | empty\n    \n    stmt : import_declaration\n         | fun_declaration\n         | assignment\n         | variable_declaration\n         | print_stmt\n         | control_structure\n         | return_stmt\n         | function_call SEMICOLON\n         | break_stmt\n         | empty\n         | comment stmt\n    \n    print_stmt : PRINT LPAREN expression RPAREN SEMICOLON\n                | PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON\n                | PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON\n                | PRINT LPAREN function_call RPAREN SEMICOLON\n    \n       fun_declaration : FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE\n                       | FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE\n    \n    function_call : identifier LPAREN arg_list RPAREN\n    \n    return_stmt : RETURN expression SEMICOLON\n    \n    return_type : general_type\n                | array_type\n                | list_type\n                | VOID\n    \n    break_stmt : BREAK SEMICOLON\n    \n    params : general_type identifier COMMA params\n           | general_type identifier\n           | empty\n    \n    import_declaration : IMPORT STRING_LITERAL\n    \n    variable_declaration : general_type identifier SEMICOLON\n                         | list_type identifier LBRACKET RBRACKET SEMICOLON\n                         | array_type identifier LBRACE RBRACE SEMICOLON\n    \n    assignment : general_type identifier ASSIGN expression SEMICOLON\n               | general_type identifier ASSIGN NULL SEMICOLON\n               | general_type identifier ASSIGN function_call SEMICOLON\n               | list_type identifier ASSIGN NULL SEMICOLON\n               | list_type identifier ASSIGN function_call SEMICOLON\n               | list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN function_call SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON\n               | array_type identifier ASSIGN NULL SEMICOLON\n               | array_type identifier ASSIGN function_call SEMICOLON\n               | array_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON\n               | array_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON\n               | array_type identifier LBRACKET digit RBRACKET ASSIGN function_call SEMICOLON\n               | array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON\n               | identifier assignment_sign expression SEMICOLON\n               | identifier assignment_sign function_call SEMICOLON\n               | identifier ASSIGN NULL SEMICOLON\n    \n    assignment_sign : ASSIGN\n                    | DIVIDEASSIGN\n                    | MINUSASSIGN\n                    | MODASSIGN\n                    | PLUSASSIGN\n    \n    control_structure : if_stmt\n                      | for_stmt\n                      | while_stmt\n    \n    arg_list : expression COMMA arg_list\n             | expression\n             | empty\n    \n    if_stmt : IF LPAREN expression RPAREN LBRACE stmt_list RBRACE\n            | IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE\n            | expression QUESTION expression COLON expression SEMICOLON\n    \n       for_stmt : FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE\n                | FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE\n    \n    while_stmt : WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE\n    \n    case_stmts : CASE expression COLON stmt_list case_stmts\n               | empty\n    \n    default_stmt : DEFAULT COLON stmt_list\n                 | empty\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression MODULUS expression\n               | expression AND expression\n               | expression OR expression\n               | expression EQUAL expression\n               | expression NOTEQUAL expression\n               | expression LESSTHAN expression\n               | expression GREATERTHAN expression\n               | expression LESSTHANEQUAL expression\n               | expression GREATERTHANEQUAL expression\n               | expression COMMA expression\n               | expression POW expression\n               | LPAREN expression RPAREN\n               | expression INCREMENT\n               | expression DECREMENT\n               | INCREMENT expression\n               | DECREMENT expression\n               | NOT expression\n               | identifier\n               | digit\n               | string\n               | boolean\n               | identifier LBRACKET expression RBRACKET\n               | identifier LBRACE expression RBRACE\n    \n    digit : NUMBER\n          | FLOAT\n    \n    boolean : TRUE\n            | FALSE\n    \n    general_type : INT\n                 | FLOAT\n                 | DOUBLE\n                 | STRING\n                 | BOOLEAN\n    \n    array_type : INTARRAY\n               | FLOATARRAY\n               | STRINGARRAY\n               | DOUBLEARRAY\n    \n    list_type : INTLIST\n              | FLOATLIST\n              | STRINGLIST\n              | DOUBLELIST\n    \n    identifier : IDENTIFIER\n    \n    comment : COMMENT\n    \n    string : STRING_LITERAL\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,57,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,224,238,242,247,248,251,253,254,255,256,257,258,259,264,265,270,271,272,],[-122,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-122,-59,-60,-61,-120,-2,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,-67,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,-20,-17,-68,-69,-66,]),'IMPORT':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[15,15,-14,-5,-6,-7,-8,-9,-10,-11,-13,15,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,15,15,15,-67,15,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,15,15,-20,-17,15,-68,-69,-66,]),'FUN':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[17,17,-14,-5,-6,-7,-8,-9,-10,-11,-13,17,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,17,17,17,-67,17,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,17,17,-20,-17,17,-68,-69,-66,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[25,25,-14,-5,-6,-7,-8,-9,-10,-11,-13,25,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,25,25,25,-67,25,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,25,25,-20,-17,25,-68,-69,-66,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[29,29,-14,-5,-6,-7,-8,-9,-10,-11,-13,29,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,29,29,29,-67,29,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,29,29,-20,-17,29,-68,-69,-66,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[30,30,-14,-5,-6,-7,-8,-9,-10,-11,-13,30,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,30,30,30,-67,30,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,30,30,-20,-17,30,-68,-69,-66,]),'COMMENT':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[31,31,-14,-5,-6,-7,-8,-9,-10,-11,-13,31,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,31,31,31,-67,31,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,31,31,-20,-17,31,-68,-69,-66,]),'INT':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,112,124,148,157,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,223,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[32,32,-14,-5,-6,-7,-8,-9,-10,-11,-13,32,32,-59,-60,-61,-120,-12,-15,-14,-32,-28,32,32,-33,-23,32,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,32,32,32,32,-67,32,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,32,32,-20,-17,32,-68,-69,-66,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,13,14,17,19,26,27,28,29,31,49,50,51,58,59,60,61,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,106,107,112,123,124,142,144,148,150,151,157,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,219,220,222,223,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[33,33,-14,-5,-6,-7,-8,-9,-10,-11,-13,33,68,80,-59,-60,-61,80,-120,80,80,80,-12,-15,-14,-32,80,-54,80,80,80,-55,-56,-57,-58,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-28,80,68,80,68,80,-33,80,80,-23,80,80,68,-51,-52,-53,80,80,80,80,80,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,33,80,80,80,33,33,68,-67,80,80,80,33,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,33,33,-20,-17,33,-68,-69,-66,]),'DOUBLE':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,112,124,148,157,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,223,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[34,34,-14,-5,-6,-7,-8,-9,-10,-11,-13,34,34,-59,-60,-61,-120,-12,-15,-14,-32,-28,34,34,-33,-23,34,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,34,34,34,34,-67,34,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,34,34,-20,-17,34,-68,-69,-66,]),'STRING':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,112,124,148,157,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,223,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[35,35,-14,-5,-6,-7,-8,-9,-10,-11,-13,35,35,-59,-60,-61,-120,-12,-15,-14,-32,-28,35,35,-33,-23,35,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,35,35,35,35,-67,35,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,35,35,-20,-17,35,-68,-69,-66,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,112,124,148,157,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,223,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[36,36,-14,-5,-6,-7,-8,-9,-10,-11,-13,36,36,-59,-60,-61,-120,-12,-15,-14,-32,-28,36,36,-33,-23,36,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,36,36,36,36,-67,36,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,36,36,-20,-17,36,-68,-69,-66,]),'INTLIST':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[37,37,-14,-5,-6,-7,-8,-9,-10,-11,-13,37,37,-59,-60,-61,-120,-12,-15,-14,-32,-28,37,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,37,37,37,-67,37,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,37,37,-20,-17,37,-68,-69,-66,]),'FLOATLIST':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[38,38,-14,-5,-6,-7,-8,-9,-10,-11,-13,38,38,-59,-60,-61,-120,-12,-15,-14,-32,-28,38,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,38,38,38,-67,38,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,38,38,-20,-17,38,-68,-69,-66,]),'STRINGLIST':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[39,39,-14,-5,-6,-7,-8,-9,-10,-11,-13,39,39,-59,-60,-61,-120,-12,-15,-14,-32,-28,39,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,39,39,39,-67,39,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,39,39,-20,-17,39,-68,-69,-66,]),'DOUBLELIST':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[40,40,-14,-5,-6,-7,-8,-9,-10,-11,-13,40,40,-59,-60,-61,-120,-12,-15,-14,-32,-28,40,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,40,40,40,-67,40,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,40,40,-20,-17,40,-68,-69,-66,]),'INTARRAY':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[41,41,-14,-5,-6,-7,-8,-9,-10,-11,-13,41,41,-59,-60,-61,-120,-12,-15,-14,-32,-28,41,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,41,41,41,-67,41,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,41,41,-20,-17,41,-68,-69,-66,]),'FLOATARRAY':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[42,42,-14,-5,-6,-7,-8,-9,-10,-11,-13,42,42,-59,-60,-61,-120,-12,-15,-14,-32,-28,42,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,42,42,42,-67,42,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,42,42,-20,-17,42,-68,-69,-66,]),'STRINGARRAY':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[43,43,-14,-5,-6,-7,-8,-9,-10,-11,-13,43,43,-59,-60,-61,-120,-12,-15,-14,-32,-28,43,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,43,43,43,-67,43,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,43,43,-20,-17,43,-68,-69,-66,]),'DOUBLEARRAY':([0,3,4,5,6,7,8,9,10,11,13,14,17,26,27,28,31,58,59,60,61,104,106,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[44,44,-14,-5,-6,-7,-8,-9,-10,-11,-13,44,44,-59,-60,-61,-120,-12,-15,-14,-32,-28,44,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,44,44,44,-67,44,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,44,44,-20,-17,44,-68,-69,-66,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,10,11,13,14,17,19,20,22,24,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,49,50,51,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,106,107,123,124,141,143,148,150,151,152,154,155,159,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[45,45,-14,-5,-6,-7,-8,-9,-10,-11,-13,45,45,45,45,45,45,-59,-60,-61,45,-120,-106,-107,-108,-109,-110,-115,-116,-117,-118,-111,-112,-113,-114,45,45,45,-12,-15,-14,-32,45,-24,-25,-26,-27,-107,45,-54,45,45,45,-55,-56,-57,-58,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-28,45,45,45,45,-33,45,45,-23,45,45,45,45,45,45,-51,-52,-53,45,45,45,45,45,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,45,45,45,45,45,-67,45,45,45,45,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,45,45,-20,-17,45,-68,-69,-66,]),'IF':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[46,46,-14,-5,-6,-7,-8,-9,-10,-11,-13,46,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,46,46,46,-67,46,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,46,46,-20,-17,46,-68,-69,-66,]),'FOR':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[47,47,-14,-5,-6,-7,-8,-9,-10,-11,-13,47,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,47,47,47,-67,47,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,47,47,-20,-17,47,-68,-69,-66,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,13,14,26,27,28,31,58,59,60,61,104,124,148,161,162,163,198,199,200,202,203,206,207,208,211,212,215,216,220,222,224,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[48,48,-14,-5,-6,-7,-8,-9,-10,-11,-13,48,-59,-60,-61,-120,-12,-15,-14,-32,-28,-33,-23,-51,-52,-53,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,48,48,48,-67,48,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,48,48,-20,-17,48,-68,-69,-66,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,13,14,18,19,25,26,27,28,29,31,45,46,47,48,49,50,51,58,59,60,61,63,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,107,111,113,123,124,148,150,151,161,162,163,165,171,172,175,180,184,198,199,200,202,203,206,207,208,211,212,214,215,216,217,218,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[19,19,-14,-5,-6,-7,-8,-9,-10,-11,-13,19,71,19,102,-59,-60,-61,19,-120,-119,105,106,107,19,19,19,-12,-15,-14,-32,112,19,-54,19,19,19,-55,-56,-57,-58,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-28,19,19,157,71,19,-33,-23,19,19,-51,-52,-53,19,19,71,19,19,19,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,71,-19,19,19,19,19,19,-67,19,19,19,19,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,19,19,-20,-17,19,-68,-69,-66,]),'INCREMENT':([0,3,4,5,6,7,8,9,10,11,13,14,16,18,19,21,23,26,27,28,29,31,33,45,49,50,51,52,53,54,55,56,58,59,60,61,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,113,114,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,148,149,150,151,156,161,162,163,165,166,167,168,171,175,180,184,187,188,196,198,199,200,201,202,203,204,206,207,208,209,211,212,214,215,216,217,218,220,222,224,226,228,229,232,233,235,238,241,242,244,246,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[49,49,-14,-5,-6,-7,-8,-9,-10,-11,-13,49,-121,-96,49,98,-97,-59,-60,-61,49,-120,-103,-119,49,49,49,-98,-99,-102,-104,-105,-12,-15,-14,-32,49,-54,49,49,49,-55,-56,-57,-58,98,-96,-103,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-91,-92,49,98,-28,49,49,98,98,98,-96,98,98,98,98,-90,49,-33,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-23,98,49,49,98,-51,-52,-53,49,-100,-101,98,49,49,49,49,98,98,98,-36,-37,-38,98,-39,-40,98,-34,-45,-46,98,-35,-16,-96,-19,49,49,49,49,49,-67,49,49,49,98,98,49,-41,98,-50,98,98,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,49,49,-20,-17,49,-68,-69,-66,]),'DECREMENT':([0,3,4,5,6,7,8,9,10,11,13,14,16,18,19,21,23,26,27,28,29,31,33,45,49,50,51,52,53,54,55,56,58,59,60,61,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,107,108,109,110,113,114,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,148,149,150,151,156,161,162,163,165,166,167,168,171,175,180,184,187,188,196,198,199,200,201,202,203,204,206,207,208,209,211,212,214,215,216,217,218,220,222,224,226,228,229,232,233,235,238,241,242,244,246,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[50,50,-14,-5,-6,-7,-8,-9,-10,-11,-13,50,-121,-96,50,99,-97,-59,-60,-61,50,-120,-103,-119,50,50,50,-98,-99,-102,-104,-105,-12,-15,-14,-32,50,-54,50,50,50,-55,-56,-57,-58,99,-96,-103,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-91,-92,50,99,-28,50,50,99,99,99,-96,99,99,99,99,-90,50,-33,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-23,99,50,50,99,-51,-52,-53,50,-100,-101,99,50,50,50,50,99,99,99,-36,-37,-38,99,-39,-40,99,-34,-45,-46,99,-35,-16,-96,-19,50,50,50,50,50,-67,50,50,50,99,99,50,-41,99,-50,99,99,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,50,50,-20,-17,50,-68,-69,-66,]),'NOT':([0,3,4,5,6,7,8,9,10,11,13,14,19,26,27,28,29,31,49,50,51,58,59,60,61,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,107,123,124,148,150,151,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[51,51,-14,-5,-6,-7,-8,-9,-10,-11,-13,51,51,-59,-60,-61,51,-120,51,51,51,-12,-15,-14,-32,51,-54,51,51,51,-55,-56,-57,-58,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-28,51,51,51,-33,-23,51,51,-51,-52,-53,51,51,51,51,51,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,51,51,51,51,51,-67,51,51,51,51,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,51,51,-20,-17,51,-68,-69,-66,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,13,14,19,26,27,28,29,31,49,50,51,58,59,60,61,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,107,123,124,142,144,148,150,151,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,219,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[54,54,-14,-5,-6,-7,-8,-9,-10,-11,-13,54,54,-59,-60,-61,54,-120,54,54,54,-12,-15,-14,-32,54,-54,54,54,54,-55,-56,-57,-58,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-28,54,54,54,-33,54,54,-23,54,54,-51,-52,-53,54,54,54,54,54,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,54,54,54,54,54,54,-67,54,54,54,54,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,54,54,-20,-17,54,-68,-69,-66,]),'STRING_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,14,15,19,26,27,28,29,31,49,50,51,58,59,60,61,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,107,123,124,148,150,151,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[16,16,-14,-5,-6,-7,-8,-9,-10,-11,-13,16,61,16,-59,-60,-61,16,-120,16,16,16,-12,-15,-14,-32,16,-54,16,16,16,-55,-56,-57,-58,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-28,16,16,16,-33,-23,16,16,-51,-52,-53,16,16,16,16,16,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,16,16,16,16,16,-67,16,16,16,16,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,16,16,-20,-17,16,-68,-69,-66,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,13,14,19,26,27,28,29,31,49,50,51,58,59,60,61,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,107,123,124,148,150,151,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[55,55,-14,-5,-6,-7,-8,-9,-10,-11,-13,55,55,-59,-60,-61,55,-120,55,55,55,-12,-15,-14,-32,55,-54,55,55,55,-55,-56,-57,-58,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-28,55,55,55,-33,-23,55,55,-51,-52,-53,55,55,55,55,55,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,55,55,55,55,55,-67,55,55,55,55,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,55,55,-20,-17,55,-68,-69,-66,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,13,14,19,26,27,28,29,31,49,50,51,58,59,60,61,69,70,71,72,73,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,104,105,107,123,124,148,150,151,161,162,163,165,171,175,180,184,198,199,200,202,203,206,207,208,211,212,215,216,217,218,220,222,224,226,228,229,235,238,242,247,248,251,253,254,255,256,257,258,259,262,263,264,265,266,270,271,272,],[56,56,-14,-5,-6,-7,-8,-9,-10,-11,-13,56,56,-59,-60,-61,56,-120,56,56,56,-12,-15,-14,-32,56,-54,56,56,56,-55,-56,-57,-58,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-28,56,56,56,-33,-23,56,56,-51,-52,-53,56,56,56,56,56,-36,-37,-38,-39,-40,-34,-45,-46,-35,-16,-19,56,56,56,56,56,-67,56,56,56,56,-41,-50,-18,-65,-70,-21,-42,-43,-44,-47,-48,-49,56,56,-20,-17,56,-68,-69,-66,]),'RBRACE':([3,4,5,6,7,8,9,10,11,13,14,16,23,26,27,28,31,45,52,53,54,55,56,57,58,59,60,61,79,80,98,99,104,108,109,110,121,122,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,145,148,161,162,163,166,167,198,199,200,202,203,206,207,208,209,211,212,215,216,220,222,224,231,234,235,236,238,242,247,248,251,252,253,254,255,256,257,258,259,262,263,264,265,266,267,268,269,270,271,272,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-13,-122,-121,-97,-59,-60,-61,-120,-119,-98,-99,-102,-104,-105,-2,-12,-15,-14,-32,-96,-103,-91,-92,-28,-93,-94,-95,167,-90,-33,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,182,-23,-51,-52,-53,-100,-101,-36,-37,-38,-39,-40,-34,-45,-46,227,-35,-16,-19,-122,-122,-122,-67,248,251,-122,253,-41,-50,-18,-65,-70,264,-21,-42,-43,-44,-47,-48,-49,-122,-122,-20,-17,-122,270,271,272,-68,-69,-66,]),'SEMICOLON':([12,16,23,30,45,52,53,54,55,56,79,80,81,98,99,103,108,109,110,113,114,115,116,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,164,166,167,168,169,170,173,174,177,178,179,182,183,185,187,188,189,201,214,225,227,230,239,240,241,243,244,245,260,],[58,-121,-97,104,-119,-98,-99,-102,-104,-105,-96,-103,124,-91,-92,148,-93,-94,-95,-96,161,162,163,-90,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-22,-100,-101,198,199,200,202,203,206,207,208,211,212,215,217,218,124,224,-96,238,242,247,254,255,256,257,258,259,265,]),'QUESTION':([16,18,21,23,33,45,52,53,54,55,56,79,80,98,99,108,109,110,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,166,167,],[-121,-96,82,-97,-103,-119,-98,-99,-102,-104,-105,-96,-103,-91,-92,-93,-94,-95,-90,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-100,-101,]),'PLUS':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,164,166,167,168,187,188,196,201,204,209,213,214,232,233,241,244,246,],[-121,-96,83,-97,-103,-119,-98,-99,-102,-104,-105,83,-96,-103,-91,-92,83,83,83,83,-96,83,83,83,83,-90,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,184,83,83,-22,-100,-101,83,83,83,83,83,83,83,229,-96,83,83,83,83,83,]),'MINUS':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,84,-97,-103,-119,-98,-99,-102,-104,-105,84,-96,-103,-91,-92,84,84,84,84,-96,84,84,84,84,-90,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-100,-101,84,84,84,84,84,84,84,-96,84,84,84,84,84,]),'MULTIPLY':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,85,-97,-103,-119,-98,-99,-102,-104,-105,85,-96,-103,-91,-92,85,85,85,85,-96,85,85,85,85,-90,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-100,-101,85,85,85,85,85,85,85,-96,85,85,85,85,85,]),'DIVIDE':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,86,-97,-103,-119,-98,-99,-102,-104,-105,86,-96,-103,-91,-92,86,86,86,86,-96,86,86,86,86,-90,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-100,-101,86,86,86,86,86,86,86,-96,86,86,86,86,86,]),'MODULUS':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,87,-97,-103,-119,-98,-99,-102,-104,-105,87,-96,-103,-91,-92,87,87,87,87,-96,87,87,87,87,-90,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-100,-101,87,87,87,87,87,87,87,-96,87,87,87,87,87,]),'AND':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,88,-97,-103,-119,-98,-99,-102,-104,-105,88,-96,-103,-91,-92,88,88,88,88,-96,88,88,88,88,-90,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-100,-101,88,88,88,88,88,88,88,-96,88,88,88,88,88,]),'OR':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,89,-97,-103,-119,-98,-99,-102,-104,-105,89,-96,-103,-91,-92,89,89,89,89,-96,89,89,89,89,-90,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-100,-101,89,89,89,89,89,89,89,-96,89,89,89,89,89,]),'EQUAL':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,90,-97,-103,-119,-98,-99,-102,-104,-105,90,-96,-103,-91,-92,90,90,90,90,-96,90,90,90,90,-90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-100,-101,90,90,90,90,90,90,90,-96,90,90,90,90,90,]),'NOTEQUAL':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,91,-97,-103,-119,-98,-99,-102,-104,-105,91,-96,-103,-91,-92,91,91,91,91,-96,91,91,91,91,-90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-100,-101,91,91,91,91,91,91,91,-96,91,91,91,91,91,]),'LESSTHAN':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,92,-97,-103,-119,-98,-99,-102,-104,-105,92,-96,-103,-91,-92,92,92,92,92,-96,92,92,92,92,-90,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-100,-101,92,92,92,92,92,92,92,-96,92,92,92,92,92,]),'GREATERTHAN':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,93,-97,-103,-119,-98,-99,-102,-104,-105,93,-96,-103,-91,-92,93,93,93,93,-96,93,93,93,93,-90,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-100,-101,93,93,93,93,93,93,93,-96,93,93,93,93,93,]),'LESSTHANEQUAL':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,94,-97,-103,-119,-98,-99,-102,-104,-105,94,-96,-103,-91,-92,94,94,94,94,-96,94,94,94,94,-90,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-100,-101,94,94,94,94,94,94,94,-96,94,94,94,94,94,]),'GREATERTHANEQUAL':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,95,-97,-103,-119,-98,-99,-102,-104,-105,95,-96,-103,-91,-92,95,95,95,95,-96,95,95,95,95,-90,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-100,-101,95,95,95,95,95,95,95,-96,95,95,95,95,95,]),'COMMA':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,195,196,201,204,209,214,232,233,241,244,246,],[-121,-96,96,-97,-103,-119,-98,-99,-102,-104,-105,96,-96,-103,-91,-92,96,96,96,96,-96,96,165,96,96,-90,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-100,-101,96,96,96,223,165,96,96,96,-96,96,96,96,96,96,]),'POW':([16,18,21,23,33,45,52,53,54,55,56,78,79,80,98,99,103,108,109,110,113,114,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,166,167,168,187,188,196,201,204,209,214,232,233,241,244,246,],[-121,-96,97,-97,-103,-119,-98,-99,-102,-104,-105,97,-96,-103,-91,-92,97,97,97,97,-96,97,97,97,97,-90,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-100,-101,97,97,97,97,97,97,97,-96,97,97,97,97,97,]),'RPAREN':([16,23,45,52,53,54,55,56,71,78,79,80,98,99,108,109,110,112,113,117,118,119,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,147,149,156,157,158,160,164,165,166,167,193,195,196,197,213,214,223,232,233,237,246,],[-121,-97,-119,-98,-99,-102,-104,-105,-122,122,-96,-103,-91,-92,-93,-94,-95,-122,-96,164,-63,-64,-90,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,183,185,186,192,-122,194,-31,-22,-122,-100,-101,221,-30,-63,-62,230,-96,-122,249,250,-29,260,]),'RBRACKET':([16,23,45,52,53,54,55,56,79,80,98,99,108,109,110,120,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,166,167,176,181,204,219,],[-121,-97,-119,-98,-99,-102,-104,-105,-96,-103,-91,-92,-93,-94,-95,166,-90,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,177,-100,-101,205,210,225,177,]),'COLON':([16,23,45,52,53,54,55,56,79,80,98,99,108,109,110,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,166,167,],[-121,-97,-119,-98,-99,-102,-104,-105,-96,-103,-91,-92,-93,-94,-95,-90,171,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-100,-101,]),'VOID':([17,],[67,]),'ASSIGN':([18,45,81,100,101,153,189,190,191,205,210,],[70,-119,123,141,143,70,123,141,143,226,228,]),'LBRACKET':([18,45,79,100,101,113,141,190,191,214,],[72,-119,72,142,144,72,175,219,144,72,]),'LBRACE':([18,45,79,101,113,143,186,191,192,194,214,221,249,250,261,],[73,-119,73,145,73,180,216,145,220,222,73,235,262,263,266,]),'DIVIDEASSIGN':([18,45,153,],[74,-119,74,]),'MINUSASSIGN':([18,45,153,],[75,-119,75,]),'MODASSIGN':([18,45,153,],[76,-119,76,]),'PLUSASSIGN':([18,45,153,],[77,-119,77,]),'NULL':([70,123,141,143,226,228,],[116,169,173,178,240,243,]),'ELSE':([248,],[261,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,3,216,220,222,235,262,263,266,],[2,57,231,234,236,252,267,268,269,]),'stmt':([0,3,14,216,220,222,235,262,263,266,],[3,3,59,3,3,3,3,3,3,3,]),'empty':([0,3,14,71,112,157,165,216,220,222,223,235,262,263,266,],[4,4,60,119,160,160,119,4,4,4,160,4,4,4,4,]),'import_declaration':([0,3,14,216,220,222,235,262,263,266,],[5,5,5,5,5,5,5,5,5,5,]),'fun_declaration':([0,3,14,216,220,222,235,262,263,266,],[6,6,6,6,6,6,6,6,6,6,]),'assignment':([0,3,14,106,216,220,222,235,262,263,266,],[7,7,7,151,7,7,7,7,7,7,7,]),'variable_declaration':([0,3,14,106,216,220,222,235,262,263,266,],[8,8,8,150,8,8,8,8,8,8,8,]),'print_stmt':([0,3,14,216,220,222,235,262,263,266,],[9,9,9,9,9,9,9,9,9,9,]),'control_structure':([0,3,14,216,220,222,235,262,263,266,],[10,10,10,10,10,10,10,10,10,10,]),'return_stmt':([0,3,14,216,220,222,235,262,263,266,],[11,11,11,11,11,11,11,11,11,11,]),'function_call':([0,3,14,69,102,123,141,143,184,216,220,222,226,228,235,262,263,266,],[12,12,12,115,147,170,174,179,213,12,12,12,239,245,12,12,12,12,]),'break_stmt':([0,3,14,216,220,222,235,262,263,266,],[13,13,13,13,13,13,13,13,13,13,]),'comment':([0,3,14,216,220,222,235,262,263,266,],[14,14,14,14,14,14,14,14,14,14,]),'identifier':([0,3,14,17,19,20,22,24,29,49,50,51,62,69,71,72,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,105,106,107,123,141,143,150,151,152,154,155,159,165,171,175,180,184,216,217,218,220,222,226,228,229,235,262,263,266,],[18,18,18,63,79,81,100,101,79,79,79,79,111,113,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,113,79,153,79,113,172,172,79,79,189,190,191,195,79,79,79,79,214,18,79,79,18,18,214,113,79,18,18,18,18,]),'general_type':([0,3,14,17,106,112,157,216,220,222,223,235,262,263,266,],[20,20,20,64,152,159,159,20,20,20,159,20,20,20,20,]),'expression':([0,3,14,19,29,49,50,51,69,71,72,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,105,107,123,150,151,165,171,175,180,184,216,217,218,220,222,226,228,229,235,262,263,266,],[21,21,21,78,103,108,109,110,114,118,120,121,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,149,156,168,187,188,196,201,204,209,126,21,232,233,21,21,241,244,246,21,21,21,21,]),'list_type':([0,3,14,17,106,216,220,222,235,262,263,266,],[22,22,22,66,154,22,22,22,22,22,22,22,]),'digit':([0,3,14,19,29,49,50,51,69,71,72,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,105,107,123,142,144,150,151,165,171,175,180,184,216,217,218,219,220,222,226,228,229,235,262,263,266,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,176,181,23,23,23,23,23,23,23,23,23,23,176,23,23,23,23,23,23,23,23,23,]),'array_type':([0,3,14,17,106,216,220,222,235,262,263,266,],[24,24,24,65,155,24,24,24,24,24,24,24,]),'if_stmt':([0,3,14,216,220,222,235,262,263,266,],[26,26,26,26,26,26,26,26,26,26,]),'for_stmt':([0,3,14,216,220,222,235,262,263,266,],[27,27,27,27,27,27,27,27,27,27,]),'while_stmt':([0,3,14,216,220,222,235,262,263,266,],[28,28,28,28,28,28,28,28,28,28,]),'string':([0,3,14,19,29,49,50,51,69,71,72,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,105,107,123,150,151,165,171,175,180,184,216,217,218,220,222,226,228,229,235,262,263,266,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'boolean':([0,3,14,19,29,49,50,51,69,71,72,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,105,107,123,150,151,165,171,175,180,184,216,217,218,220,222,226,228,229,235,262,263,266,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'return_type':([17,],[62,]),'assignment_sign':([18,153,],[69,69,]),'arg_list':([71,165,],[117,197,]),'params':([112,157,223,],[158,193,237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','yacc.py',11),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','yacc.py',18),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','yacc.py',19),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','yacc.py',20),
  ('stmt -> import_declaration','stmt',1,'p_stmt','yacc.py',32),
  ('stmt -> fun_declaration','stmt',1,'p_stmt','yacc.py',33),
  ('stmt -> assignment','stmt',1,'p_stmt','yacc.py',34),
  ('stmt -> variable_declaration','stmt',1,'p_stmt','yacc.py',35),
  ('stmt -> print_stmt','stmt',1,'p_stmt','yacc.py',36),
  ('stmt -> control_structure','stmt',1,'p_stmt','yacc.py',37),
  ('stmt -> return_stmt','stmt',1,'p_stmt','yacc.py',38),
  ('stmt -> function_call SEMICOLON','stmt',2,'p_stmt','yacc.py',39),
  ('stmt -> break_stmt','stmt',1,'p_stmt','yacc.py',40),
  ('stmt -> empty','stmt',1,'p_stmt','yacc.py',41),
  ('stmt -> comment stmt','stmt',2,'p_stmt','yacc.py',42),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','yacc.py',49),
  ('print_stmt -> PRINT LPAREN expression PLUS function_call PLUS expression RPAREN SEMICOLON','print_stmt',9,'p_print_stmt','yacc.py',50),
  ('print_stmt -> PRINT LPAREN expression PLUS function_call RPAREN SEMICOLON','print_stmt',7,'p_print_stmt','yacc.py',51),
  ('print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','yacc.py',52),
  ('fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE','fun_declaration',9,'p_fun_declaration','yacc.py',59),
  ('fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE','fun_declaration',8,'p_fun_declaration','yacc.py',60),
  ('function_call -> identifier LPAREN arg_list RPAREN','function_call',4,'p_function_call','yacc.py',71),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','yacc.py',78),
  ('return_type -> general_type','return_type',1,'p_return_type','yacc.py',85),
  ('return_type -> array_type','return_type',1,'p_return_type','yacc.py',86),
  ('return_type -> list_type','return_type',1,'p_return_type','yacc.py',87),
  ('return_type -> VOID','return_type',1,'p_return_type','yacc.py',88),
  ('break_stmt -> BREAK SEMICOLON','break_stmt',2,'p_break_stmt','yacc.py',95),
  ('params -> general_type identifier COMMA params','params',4,'p_params','yacc.py',102),
  ('params -> general_type identifier','params',2,'p_params','yacc.py',103),
  ('params -> empty','params',1,'p_params','yacc.py',104),
  ('import_declaration -> IMPORT STRING_LITERAL','import_declaration',2,'p_import_declaration','yacc.py',116),
  ('variable_declaration -> general_type identifier SEMICOLON','variable_declaration',3,'p_variable_declaration','yacc.py',123),
  ('variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON','variable_declaration',5,'p_variable_declaration','yacc.py',124),
  ('variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON','variable_declaration',5,'p_variable_declaration','yacc.py',125),
  ('assignment -> general_type identifier ASSIGN expression SEMICOLON','assignment',5,'p_assignment','yacc.py',132),
  ('assignment -> general_type identifier ASSIGN NULL SEMICOLON','assignment',5,'p_assignment','yacc.py',133),
  ('assignment -> general_type identifier ASSIGN function_call SEMICOLON','assignment',5,'p_assignment','yacc.py',134),
  ('assignment -> list_type identifier ASSIGN NULL SEMICOLON','assignment',5,'p_assignment','yacc.py',135),
  ('assignment -> list_type identifier ASSIGN function_call SEMICOLON','assignment',5,'p_assignment','yacc.py',136),
  ('assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON','assignment',7,'p_assignment','yacc.py',137),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call SEMICOLON','assignment',8,'p_assignment','yacc.py',138),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON','assignment',8,'p_assignment','yacc.py',139),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON','assignment',8,'p_assignment','yacc.py',140),
  ('assignment -> array_type identifier ASSIGN NULL SEMICOLON','assignment',5,'p_assignment','yacc.py',141),
  ('assignment -> array_type identifier ASSIGN function_call SEMICOLON','assignment',5,'p_assignment','yacc.py',142),
  ('assignment -> array_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON','assignment',8,'p_assignment','yacc.py',143),
  ('assignment -> array_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON','assignment',8,'p_assignment','yacc.py',144),
  ('assignment -> array_type identifier LBRACKET digit RBRACKET ASSIGN function_call SEMICOLON','assignment',8,'p_assignment','yacc.py',145),
  ('assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON','assignment',7,'p_assignment','yacc.py',146),
  ('assignment -> identifier assignment_sign expression SEMICOLON','assignment',4,'p_assignment','yacc.py',147),
  ('assignment -> identifier assignment_sign function_call SEMICOLON','assignment',4,'p_assignment','yacc.py',148),
  ('assignment -> identifier ASSIGN NULL SEMICOLON','assignment',4,'p_assignment','yacc.py',149),
  ('assignment_sign -> ASSIGN','assignment_sign',1,'p_assignment_sign','yacc.py',166),
  ('assignment_sign -> DIVIDEASSIGN','assignment_sign',1,'p_assignment_sign','yacc.py',167),
  ('assignment_sign -> MINUSASSIGN','assignment_sign',1,'p_assignment_sign','yacc.py',168),
  ('assignment_sign -> MODASSIGN','assignment_sign',1,'p_assignment_sign','yacc.py',169),
  ('assignment_sign -> PLUSASSIGN','assignment_sign',1,'p_assignment_sign','yacc.py',170),
  ('control_structure -> if_stmt','control_structure',1,'p_control_structure','yacc.py',177),
  ('control_structure -> for_stmt','control_structure',1,'p_control_structure','yacc.py',178),
  ('control_structure -> while_stmt','control_structure',1,'p_control_structure','yacc.py',179),
  ('arg_list -> expression COMMA arg_list','arg_list',3,'p_arg_list','yacc.py',186),
  ('arg_list -> expression','arg_list',1,'p_arg_list','yacc.py',187),
  ('arg_list -> empty','arg_list',1,'p_arg_list','yacc.py',188),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE','if_stmt',7,'p_if_stmt','yacc.py',198),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE','if_stmt',11,'p_if_stmt','yacc.py',199),
  ('if_stmt -> expression QUESTION expression COLON expression SEMICOLON','if_stmt',6,'p_if_stmt','yacc.py',200),
  ('for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE','for_stmt',10,'p_for_stmt','yacc.py',212),
  ('for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE','for_stmt',10,'p_for_stmt','yacc.py',213),
  ('while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE','while_stmt',7,'p_while_stmt','yacc.py',220),
  ('case_stmts -> CASE expression COLON stmt_list case_stmts','case_stmts',5,'p_case_stmts','yacc.py',227),
  ('case_stmts -> empty','case_stmts',1,'p_case_stmts','yacc.py',228),
  ('default_stmt -> DEFAULT COLON stmt_list','default_stmt',3,'p_default_stmt','yacc.py',235),
  ('default_stmt -> empty','default_stmt',1,'p_default_stmt','yacc.py',236),
  ('expression -> expression PLUS expression','expression',3,'p_expression','yacc.py',243),
  ('expression -> expression MINUS expression','expression',3,'p_expression','yacc.py',244),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','yacc.py',245),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','yacc.py',246),
  ('expression -> expression MODULUS expression','expression',3,'p_expression','yacc.py',247),
  ('expression -> expression AND expression','expression',3,'p_expression','yacc.py',248),
  ('expression -> expression OR expression','expression',3,'p_expression','yacc.py',249),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','yacc.py',250),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','yacc.py',251),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','yacc.py',252),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','yacc.py',253),
  ('expression -> expression LESSTHANEQUAL expression','expression',3,'p_expression','yacc.py',254),
  ('expression -> expression GREATERTHANEQUAL expression','expression',3,'p_expression','yacc.py',255),
  ('expression -> expression COMMA expression','expression',3,'p_expression','yacc.py',256),
  ('expression -> expression POW expression','expression',3,'p_expression','yacc.py',257),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc.py',258),
  ('expression -> expression INCREMENT','expression',2,'p_expression','yacc.py',259),
  ('expression -> expression DECREMENT','expression',2,'p_expression','yacc.py',260),
  ('expression -> INCREMENT expression','expression',2,'p_expression','yacc.py',261),
  ('expression -> DECREMENT expression','expression',2,'p_expression','yacc.py',262),
  ('expression -> NOT expression','expression',2,'p_expression','yacc.py',263),
  ('expression -> identifier','expression',1,'p_expression','yacc.py',264),
  ('expression -> digit','expression',1,'p_expression','yacc.py',265),
  ('expression -> string','expression',1,'p_expression','yacc.py',266),
  ('expression -> boolean','expression',1,'p_expression','yacc.py',267),
  ('expression -> identifier LBRACKET expression RBRACKET','expression',4,'p_expression','yacc.py',268),
  ('expression -> identifier LBRACE expression RBRACE','expression',4,'p_expression','yacc.py',269),
  ('digit -> NUMBER','digit',1,'p_digit','yacc.py',300),
  ('digit -> FLOAT','digit',1,'p_digit','yacc.py',301),
  ('boolean -> TRUE','boolean',1,'p_boolean','yacc.py',309),
  ('boolean -> FALSE','boolean',1,'p_boolean','yacc.py',310),
  ('general_type -> INT','general_type',1,'p_general_type','yacc.py',317),
  ('general_type -> FLOAT','general_type',1,'p_general_type','yacc.py',318),
  ('general_type -> DOUBLE','general_type',1,'p_general_type','yacc.py',319),
  ('general_type -> STRING','general_type',1,'p_general_type','yacc.py',320),
  ('general_type -> BOOLEAN','general_type',1,'p_general_type','yacc.py',321),
  ('array_type -> INTARRAY','array_type',1,'p_array_type','yacc.py',328),
  ('array_type -> FLOATARRAY','array_type',1,'p_array_type','yacc.py',329),
  ('array_type -> STRINGARRAY','array_type',1,'p_array_type','yacc.py',330),
  ('array_type -> DOUBLEARRAY','array_type',1,'p_array_type','yacc.py',331),
  ('list_type -> INTLIST','list_type',1,'p_list_type','yacc.py',338),
  ('list_type -> FLOATLIST','list_type',1,'p_list_type','yacc.py',339),
  ('list_type -> STRINGLIST','list_type',1,'p_list_type','yacc.py',340),
  ('list_type -> DOUBLELIST','list_type',1,'p_list_type','yacc.py',341),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','yacc.py',348),
  ('comment -> COMMENT','comment',1,'p_comment','yacc.py',355),
  ('string -> STRING_LITERAL','string',1,'p_string_literal','yacc.py',362),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',369),
]
