
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOSTROPHE ARROW AS ASSERT ASSIGN AT BACKSLASH BOOLEAN BREAK CLASS COLON COMMA COMMENT CONTINUE DECREMENT DEF DEL DIVIDE DIVIDEASSIGN DOT DOUBLE DOUBLEARRAY DOUBLELIST DOUBLEQUOTE ELIF ELSE EQUAL EXCEPT FALSE FALSE FINALLY FLOAT FLOATARRAY FLOATLIST FOR FROM FUN GLOBAL GREATERTHAN GREATERTHANEQUAL HASH IDENTIFIER IF IMPORT IN INCREMENT INPUT INT INTARRAY INTLIST IS LAMBDA LBRACE LBRACKET LESSTHAN LESSTHANEQUAL LPAREN MINUS MINUSASSIGN MODASSIGN MODULUS MULTIPLY NONE NONLOCAL NOT NOTEQUAL NULL NUMBER OR PARAMS PASS PIPE PLUS PLUSASSIGN POW PRINT QUESTION RAISE RBRACE RBRACKET RETURN RPAREN SEMICOLON SLASH STRING STRINGARRAY STRINGLIST STRING_LITERAL TIMESASSIGN TRUE TRUE TRY VOID WHILE WITH YIELD\n    program : stmt_list\n    \n    stmt_list : stmt stmt_list\n              | stmt\n              | empty\n    \n    stmt : fun_declaration\n         | variable_declaration\n         | assignment\n         | print_stmt\n         | control_structure\n         | function_call SEMICOLON\n         | return_stmt\n         | break_stmt\n         | comment stmt\n         | empty\n    \n       fun_declaration : FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE\n                       | FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE\n    \n    params : param\n           | empty\n    \n    param : general_type identifier COMMA param\n          | general_type identifier\n          | empty\n    \n    print_stmt : PRINT LPAREN expression RPAREN SEMICOLON\n                | PRINT LPAREN expression COMMA function_call COMMA expression RPAREN SEMICOLON\n                | PRINT LPAREN expression COMMA function_call RPAREN SEMICOLON\n                | PRINT LPAREN function_call RPAREN SEMICOLON\n    \n    function_call : identifier LPAREN arg_list RPAREN\n    \n    arg_list : expression COMMA arg_list\n             | expression\n             | empty\n    \n    return_stmt : RETURN expression SEMICOLON\n    \n    variable_declaration : general_type identifier SEMICOLON\n                         | list_type identifier LBRACKET RBRACKET SEMICOLON\n                         | array_type identifier LBRACE RBRACE SEMICOLON\n    \n    assignment : general_type identifier ASSIGN expression SEMICOLON\n               | general_type identifier ASSIGN NULL SEMICOLON\n               | general_type identifier ASSIGN function_call SEMICOLON\n               | list_type identifier ASSIGN NULL SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON\n               | list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON\n               | list_type identifier LBRACKET digit RBRACKET ASSIGN function_call SEMICOLON\n               | list_type identifier ASSIGN function_call SEMICOLON\n               | array_type identifier ASSIGN NULL SEMICOLON\n               | array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON\n               | array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON\n               | array_type identifier LBRACE digit RBRACE ASSIGN function_call SEMICOLON\n               | array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON\n               | array_type identifier ASSIGN function_call SEMICOLON\n               | identifier ASSIGN expression SEMICOLON\n               | identifier ASSIGN function_call SEMICOLON\n               | identifier ASSIGN NULL SEMICOLON\n    \n    control_structure : if_stmt\n                      | for_stmt\n                      | while_stmt\n    \n    break_stmt : BREAK SEMICOLON\n    \n    comment : COMMENT\n    \n    return_type : general_type\n                | array_type\n                | list_type\n                | VOID\n    \n    if_stmt : IF LPAREN expression RPAREN LBRACE stmt_list RBRACE\n            | IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE\n            | expression QUESTION expression COLON expression SEMICOLON\n    \n       for_stmt : FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE\n                | FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE\n    \n    while_stmt : WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression MODULUS expression\n               | expression AND expression\n               | expression OR expression\n               | expression EQUAL expression\n               | expression NOTEQUAL expression\n               | expression LESSTHAN expression\n               | expression GREATERTHAN expression\n               | expression LESSTHANEQUAL expression\n               | expression GREATERTHANEQUAL expression\n               | expression COMMA expression\n               | expression POW expression\n               | LPAREN expression RPAREN\n               | expression INCREMENT\n               | expression DECREMENT\n               | INCREMENT expression\n               | DECREMENT expression\n               | NOT expression\n               | identifier\n               | digit\n               | string\n               | boolean\n               | array_access\n               | function_call\n               | NULL\n    \n    digit : NUMBER\n    \n    boolean : TRUE\n            | FALSE\n    \n    general_type : INT\n                 | FLOAT\n                 | DOUBLE\n                 | STRING\n                 | BOOLEAN\n    \n    array_type : INTARRAY\n               | FLOATARRAY\n               | STRINGARRAY\n               | DOUBLEARRAY\n    \n    list_type : INTLIST\n              | FLOATLIST\n              | STRINGLIST\n              | DOUBLELIST\n    \n    identifier : IDENTIFIER\n    \n    string : STRING_LITERAL\n    \n    array_access : identifier LBRACKET expression RBRACKET\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,24,25,26,29,57,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,211,225,229,231,232,235,237,238,239,240,241,242,243,248,249,254,255,256,],[-114,0,-1,-3,-4,-5,-6,-7,-8,-9,-11,-12,-114,-52,-53,-54,-56,-2,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,-63,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,-15,-23,-64,-65,-62,]),'FUN':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[14,14,-14,-5,-6,-7,-8,-9,-11,-12,14,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,14,14,14,-63,14,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,14,14,-15,-23,14,-64,-65,-62,]),'PRINT':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[23,23,-14,-5,-6,-7,-8,-9,-11,-12,23,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,23,23,23,-63,23,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,23,23,-15,-23,23,-64,-65,-62,]),'RETURN':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[27,27,-14,-5,-6,-7,-8,-9,-11,-12,27,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,27,27,27,-63,27,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,27,27,-15,-23,27,-64,-65,-62,]),'BREAK':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[28,28,-14,-5,-6,-7,-8,-9,-11,-12,28,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,28,28,28,-63,28,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,28,28,-15,-23,28,-64,-65,-62,]),'COMMENT':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[29,29,-14,-5,-6,-7,-8,-9,-11,-12,29,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,29,29,29,-63,29,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,29,29,-15,-23,29,-64,-65,-62,]),'INT':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,104,114,138,144,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,206,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[30,30,-14,-5,-6,-7,-8,-9,-11,-12,30,30,-52,-53,-54,-56,-10,-13,-14,-55,30,30,-31,-30,30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,30,30,30,30,-63,30,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,30,30,-15,-23,30,-64,-65,-62,]),'FLOAT':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,104,114,138,144,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,206,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[31,31,-14,-5,-6,-7,-8,-9,-11,-12,31,31,-52,-53,-54,-56,-10,-13,-14,-55,31,31,-31,-30,31,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,31,31,31,31,-63,31,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,31,31,-15,-23,31,-64,-65,-62,]),'DOUBLE':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,104,114,138,144,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,206,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[32,32,-14,-5,-6,-7,-8,-9,-11,-12,32,32,-52,-53,-54,-56,-10,-13,-14,-55,32,32,-31,-30,32,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,32,32,32,32,-63,32,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,32,32,-15,-23,32,-64,-65,-62,]),'STRING':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,104,114,138,144,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,206,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[33,33,-14,-5,-6,-7,-8,-9,-11,-12,33,33,-52,-53,-54,-56,-10,-13,-14,-55,33,33,-31,-30,33,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,33,33,33,33,-63,33,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,33,33,-15,-23,33,-64,-65,-62,]),'BOOLEAN':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,104,114,138,144,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,206,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[34,34,-14,-5,-6,-7,-8,-9,-11,-12,34,34,-52,-53,-54,-56,-10,-13,-14,-55,34,34,-31,-30,34,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,34,34,34,34,-63,34,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,34,34,-15,-23,34,-64,-65,-62,]),'INTLIST':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[35,35,-14,-5,-6,-7,-8,-9,-11,-12,35,35,-52,-53,-54,-56,-10,-13,-14,-55,35,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,35,35,35,-63,35,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,35,35,-15,-23,35,-64,-65,-62,]),'FLOATLIST':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[36,36,-14,-5,-6,-7,-8,-9,-11,-12,36,36,-52,-53,-54,-56,-10,-13,-14,-55,36,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,36,36,36,-63,36,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,36,36,-15,-23,36,-64,-65,-62,]),'STRINGLIST':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[37,37,-14,-5,-6,-7,-8,-9,-11,-12,37,37,-52,-53,-54,-56,-10,-13,-14,-55,37,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,37,37,37,-63,37,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,37,37,-15,-23,37,-64,-65,-62,]),'DOUBLELIST':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[38,38,-14,-5,-6,-7,-8,-9,-11,-12,38,38,-52,-53,-54,-56,-10,-13,-14,-55,38,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,38,38,38,-63,38,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,38,38,-15,-23,38,-64,-65,-62,]),'INTARRAY':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[39,39,-14,-5,-6,-7,-8,-9,-11,-12,39,39,-52,-53,-54,-56,-10,-13,-14,-55,39,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,39,39,39,-63,39,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,39,39,-15,-23,39,-64,-65,-62,]),'FLOATARRAY':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[40,40,-14,-5,-6,-7,-8,-9,-11,-12,40,40,-52,-53,-54,-56,-10,-13,-14,-55,40,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,40,40,40,-63,40,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,40,40,-15,-23,40,-64,-65,-62,]),'STRINGARRAY':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[41,41,-14,-5,-6,-7,-8,-9,-11,-12,41,41,-52,-53,-54,-56,-10,-13,-14,-55,41,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,41,41,41,-63,41,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,41,41,-15,-23,41,-64,-65,-62,]),'DOUBLEARRAY':([0,3,4,5,6,7,8,9,11,12,13,14,24,25,26,29,58,59,60,96,98,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[42,42,-14,-5,-6,-7,-8,-9,-11,-12,42,42,-52,-53,-54,-56,-10,-13,-14,-55,42,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,42,42,42,-63,42,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,42,42,-15,-23,42,-64,-65,-62,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,11,12,13,14,16,17,18,19,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,49,58,59,60,61,63,64,65,66,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,98,99,114,115,117,119,138,140,141,148,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[43,43,-14,-5,-6,-7,-8,-9,-11,-12,43,43,43,43,43,43,-52,-53,-54,43,-56,-98,-99,-100,-101,-102,-107,-108,-109,-110,-103,-104,-105,-106,43,43,43,-10,-13,-14,43,-57,-58,-59,-60,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-55,43,43,43,-31,43,43,43,-30,43,43,43,-49,-50,-51,43,43,43,43,43,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,43,43,43,43,43,43,43,-63,43,43,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,43,43,-15,-23,43,-64,-65,-62,]),'IF':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[44,44,-14,-5,-6,-7,-8,-9,-11,-12,44,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,44,44,44,-63,44,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,44,44,-15,-23,44,-64,-65,-62,]),'FOR':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[45,45,-14,-5,-6,-7,-8,-9,-11,-12,45,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,45,45,45,-63,45,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,45,45,-15,-23,45,-64,-65,-62,]),'WHILE':([0,3,4,5,6,7,8,9,11,12,13,24,25,26,29,58,59,60,96,114,138,149,150,151,182,183,184,185,187,189,190,192,194,196,199,200,203,205,211,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[46,46,-14,-5,-6,-7,-8,-9,-11,-12,46,-52,-53,-54,-56,-10,-13,-14,-55,-31,-30,-49,-50,-51,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,46,46,46,-63,46,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,46,46,-15,-23,46,-64,-65,-62,]),'LPAREN':([0,3,4,5,6,7,8,9,11,12,13,15,16,23,24,25,26,27,29,43,44,45,46,47,48,49,58,59,60,62,67,68,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,103,105,114,115,138,140,141,149,150,151,153,160,162,167,169,171,182,183,184,185,187,189,190,192,194,196,198,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[16,16,-14,-5,-6,-7,-8,-9,-11,-12,16,68,16,94,-52,-53,-54,16,-56,-111,97,98,99,16,16,16,-10,-13,-14,104,16,16,16,68,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-55,16,16,144,68,-31,16,-30,16,16,-49,-50,-51,16,68,16,16,16,16,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,68,-25,16,16,16,16,16,16,16,-63,16,16,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,16,16,-15,-23,16,-64,-65,-62,]),'INCREMENT':([0,3,4,5,6,7,8,9,10,11,12,13,15,16,20,21,22,24,25,26,27,29,43,47,48,49,50,51,52,53,54,55,56,58,59,60,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,105,106,107,108,110,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,149,150,151,152,153,154,155,156,157,162,167,169,171,174,175,180,182,183,184,185,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,203,205,207,209,211,212,215,216,218,222,223,224,225,226,227,228,229,230,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[47,47,-14,-5,-6,-7,-8,-9,-93,-11,-12,47,-88,47,92,-94,-89,-52,-53,-54,47,-56,-111,47,47,47,-90,-91,-92,-95,-112,-96,-97,-10,-13,-14,47,47,47,92,-88,-93,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-83,-84,47,92,-55,47,47,92,92,92,-88,92,-93,-94,92,92,-82,-31,47,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-93,-30,92,47,47,92,-49,-50,-51,-26,47,-113,92,-94,-93,47,47,47,47,92,92,92,-34,-35,-36,-32,-37,92,-42,-33,-43,92,-48,92,-22,-93,-88,-25,47,47,47,47,47,47,47,-63,47,92,92,47,-94,92,-93,-40,-94,92,-93,-47,92,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,47,47,-15,-23,47,-64,-65,-62,]),'DECREMENT':([0,3,4,5,6,7,8,9,10,11,12,13,15,16,20,21,22,24,25,26,27,29,43,47,48,49,50,51,52,53,54,55,56,58,59,60,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,105,106,107,108,110,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,149,150,151,152,153,154,155,156,157,162,167,169,171,174,175,180,182,183,184,185,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,203,205,207,209,211,212,215,216,218,222,223,224,225,226,227,228,229,230,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[48,48,-14,-5,-6,-7,-8,-9,-93,-11,-12,48,-88,48,93,-94,-89,-52,-53,-54,48,-56,-111,48,48,48,-90,-91,-92,-95,-112,-96,-97,-10,-13,-14,48,48,48,93,-88,-93,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-83,-84,48,93,-55,48,48,93,93,93,-88,93,-93,-94,93,93,-82,-31,48,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-93,-30,93,48,48,93,-49,-50,-51,-26,48,-113,93,-94,-93,48,48,48,48,93,93,93,-34,-35,-36,-32,-37,93,-42,-33,-43,93,-48,93,-22,-93,-88,-25,48,48,48,48,48,48,48,-63,48,93,93,48,-94,93,-93,-40,-94,93,-93,-47,93,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,48,48,-15,-23,48,-64,-65,-62,]),'NOT':([0,3,4,5,6,7,8,9,11,12,13,16,24,25,26,27,29,47,48,49,58,59,60,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,114,115,138,140,141,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[49,49,-14,-5,-6,-7,-8,-9,-11,-12,49,49,-52,-53,-54,49,-56,49,49,49,-10,-13,-14,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-55,49,49,-31,49,-30,49,49,-49,-50,-51,49,49,49,49,49,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,49,49,49,49,49,49,49,-63,49,49,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,49,49,-15,-23,49,-64,-65,-62,]),'NULL':([0,3,4,5,6,7,8,9,11,12,13,16,24,25,26,27,29,47,48,49,58,59,60,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,114,115,117,119,138,140,141,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[21,21,-14,-5,-6,-7,-8,-9,-11,-12,21,21,-52,-53,-54,21,-56,21,21,21,-10,-13,-14,108,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-55,21,21,-31,156,161,166,-30,21,21,-49,-50,-51,21,21,21,21,21,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,21,21,21,21,21,222,226,-63,21,21,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,21,21,-15,-23,21,-64,-65,-62,]),'NUMBER':([0,3,4,5,6,7,8,9,11,12,13,16,24,25,26,27,29,47,48,49,58,59,60,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,114,115,116,118,138,140,141,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[53,53,-14,-5,-6,-7,-8,-9,-11,-12,53,53,-52,-53,-54,53,-56,53,53,53,-10,-13,-14,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-55,53,53,-31,53,53,53,-30,53,53,-49,-50,-51,53,53,53,53,53,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,53,53,53,53,53,53,53,-63,53,53,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,53,53,-15,-23,53,-64,-65,-62,]),'STRING_LITERAL':([0,3,4,5,6,7,8,9,11,12,13,16,24,25,26,27,29,47,48,49,58,59,60,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,114,115,138,140,141,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[54,54,-14,-5,-6,-7,-8,-9,-11,-12,54,54,-52,-53,-54,54,-56,54,54,54,-10,-13,-14,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-55,54,54,-31,54,-30,54,54,-49,-50,-51,54,54,54,54,54,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,54,54,54,54,54,54,54,-63,54,54,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,54,54,-15,-23,54,-64,-65,-62,]),'TRUE':([0,3,4,5,6,7,8,9,11,12,13,16,24,25,26,27,29,47,48,49,58,59,60,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,114,115,138,140,141,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[55,55,-14,-5,-6,-7,-8,-9,-11,-12,55,55,-52,-53,-54,55,-56,55,55,55,-10,-13,-14,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-55,55,55,-31,55,-30,55,55,-49,-50,-51,55,55,55,55,55,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,55,55,55,55,55,55,55,-63,55,55,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,55,55,-15,-23,55,-64,-65,-62,]),'FALSE':([0,3,4,5,6,7,8,9,11,12,13,16,24,25,26,27,29,47,48,49,58,59,60,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,114,115,138,140,141,149,150,151,153,162,167,169,171,182,183,184,185,187,189,190,192,194,196,199,200,201,202,203,205,207,209,211,212,218,225,229,231,232,235,237,238,239,240,241,242,243,246,247,248,249,250,254,255,256,],[56,56,-14,-5,-6,-7,-8,-9,-11,-12,56,56,-52,-53,-54,56,-56,56,56,56,-10,-13,-14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-55,56,56,-31,56,-30,56,56,-49,-50,-51,56,56,56,56,56,-34,-35,-36,-32,-37,-42,-33,-43,-48,-22,-25,56,56,56,56,56,56,56,-63,56,56,-40,-47,-24,-61,-66,-16,-38,-39,-41,-44,-45,-46,56,56,-15,-23,56,-64,-65,-62,]),'RBRACE':([3,4,5,6,7,8,9,11,12,13,21,22,24,25,26,29,43,50,51,52,53,54,55,56,57,58,59,60,71,72,92,93,96,100,101,102,113,114,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,149,150,151,152,154,165,182,183,184,185,187,189,190,192,193,194,196,199,200,203,205,211,214,217,218,219,225,229,231,232,235,236,237,238,239,240,241,242,243,246,247,248,249,250,251,252,253,254,255,256,],[-3,-4,-5,-6,-7,-8,-9,-11,-12,-114,-94,-89,-52,-53,-54,-56,-111,-90,-91,-92,-95,-112,-96,-97,-2,-10,-13,-14,-88,-93,-83,-84,-55,-85,-86,-87,-82,-31,164,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-30,-49,-50,-51,-26,-113,191,-34,-35,-36,-32,-37,-42,-33,-43,210,-48,-22,-25,-114,-114,-114,-63,232,235,-114,237,-40,-47,-24,-61,-66,248,-16,-38,-39,-41,-44,-45,-46,-114,-114,-15,-23,-114,254,255,256,-64,-65,-62,]),'SEMICOLON':([10,21,22,28,43,50,51,52,53,54,55,56,71,72,73,92,93,95,100,101,102,105,106,107,108,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,152,154,155,156,157,158,161,163,164,166,168,170,172,174,175,195,208,210,213,222,223,224,226,227,228,244,],[58,-94,-89,96,-111,-90,-91,-92,-95,-112,-96,-97,-88,-93,114,-83,-84,138,-85,-86,-87,-88,149,150,151,-82,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-26,-113,182,183,184,185,187,189,190,192,194,196,199,201,202,211,225,229,231,238,239,240,241,242,243,249,]),'QUESTION':([10,15,20,21,22,43,50,51,52,53,54,55,56,71,72,92,93,100,101,102,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,152,154,],[-93,-88,76,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,-88,-93,-83,-84,-85,-86,-87,-82,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-26,-113,]),'PLUS':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,77,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,77,-88,-93,-83,-84,77,77,77,77,-88,77,-93,-94,77,77,-82,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-93,77,77,-26,-113,77,-94,-93,77,77,77,77,77,77,-93,-88,77,77,-94,77,-93,-94,77,-93,77,]),'MINUS':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,78,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,78,-88,-93,-83,-84,78,78,78,78,-88,78,-93,-94,78,78,-82,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-93,78,78,-26,-113,78,-94,-93,78,78,78,78,78,78,-93,-88,78,78,-94,78,-93,-94,78,-93,78,]),'MULTIPLY':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,79,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,79,-88,-93,-83,-84,79,79,79,79,-88,79,-93,-94,79,79,-82,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-93,79,79,-26,-113,79,-94,-93,79,79,79,79,79,79,-93,-88,79,79,-94,79,-93,-94,79,-93,79,]),'DIVIDE':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,80,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,80,-88,-93,-83,-84,80,80,80,80,-88,80,-93,-94,80,80,-82,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-93,80,80,-26,-113,80,-94,-93,80,80,80,80,80,80,-93,-88,80,80,-94,80,-93,-94,80,-93,80,]),'MODULUS':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,81,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,81,-88,-93,-83,-84,81,81,81,81,-88,81,-93,-94,81,81,-82,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-93,81,81,-26,-113,81,-94,-93,81,81,81,81,81,81,-93,-88,81,81,-94,81,-93,-94,81,-93,81,]),'AND':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,82,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,82,-88,-93,-83,-84,82,82,82,82,-88,82,-93,-94,82,82,-82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-93,82,82,-26,-113,82,-94,-93,82,82,82,82,82,82,-93,-88,82,82,-94,82,-93,-94,82,-93,82,]),'OR':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,83,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,83,-88,-93,-83,-84,83,83,83,83,-88,83,-93,-94,83,83,-82,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-93,83,83,-26,-113,83,-94,-93,83,83,83,83,83,83,-93,-88,83,83,-94,83,-93,-94,83,-93,83,]),'EQUAL':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,84,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,84,-88,-93,-83,-84,84,84,84,84,-88,84,-93,-94,84,84,-82,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-93,84,84,-26,-113,84,-94,-93,84,84,84,84,84,84,-93,-88,84,84,-94,84,-93,-94,84,-93,84,]),'NOTEQUAL':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,85,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,85,-88,-93,-83,-84,85,85,85,85,-88,85,-93,-94,85,85,-82,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-93,85,85,-26,-113,85,-94,-93,85,85,85,85,85,85,-93,-88,85,85,-94,85,-93,-94,85,-93,85,]),'LESSTHAN':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,86,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,86,-88,-93,-83,-84,86,86,86,86,-88,86,-93,-94,86,86,-82,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-93,86,86,-26,-113,86,-94,-93,86,86,86,86,86,86,-93,-88,86,86,-94,86,-93,-94,86,-93,86,]),'GREATERTHAN':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,87,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,87,-88,-93,-83,-84,87,87,87,87,-88,87,-93,-94,87,87,-82,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-93,87,87,-26,-113,87,-94,-93,87,87,87,87,87,87,-93,-88,87,87,-94,87,-93,-94,87,-93,87,]),'LESSTHANEQUAL':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,88,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,88,-88,-93,-83,-84,88,88,88,88,-88,88,-93,-94,88,88,-82,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-93,88,88,-26,-113,88,-94,-93,88,88,88,88,88,88,-93,-88,88,88,-94,88,-93,-94,88,-93,88,]),'GREATERTHANEQUAL':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,89,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,89,-88,-93,-83,-84,89,89,89,89,-88,89,-93,-94,89,89,-82,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-93,89,89,-26,-113,89,-94,-93,89,89,89,89,89,89,-93,-88,89,89,-94,89,-93,-94,89,-93,89,]),'COMMA':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,179,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,90,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,90,-88,-93,-83,-84,90,90,90,90,-88,90,-93,-94,153,90,-82,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,171,-93,90,90,-26,-113,90,-94,-93,90,90,206,153,90,90,90,212,-88,90,90,-94,90,-93,-94,90,-93,90,]),'POW':([10,15,20,21,22,43,50,51,52,53,54,55,56,70,71,72,92,93,95,100,101,102,105,106,107,108,110,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,152,154,155,156,157,174,175,180,188,193,195,197,198,215,216,222,223,224,226,227,228,230,],[-93,-88,91,-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,91,-88,-93,-83,-84,91,91,91,91,-88,91,-93,-94,91,91,-82,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-93,91,91,-26,-113,91,-94,-93,91,91,91,91,91,91,-93,-88,91,91,-94,91,-93,-94,91,-93,91,]),'VOID':([14,],[66,]),'ASSIGN':([15,43,73,74,75,142,186,191,],[67,-111,115,117,119,67,207,209,]),'LBRACKET':([15,43,71,74,105,117,198,],[69,-111,69,116,69,162,69,]),'RPAREN':([21,22,43,50,51,52,53,54,55,56,68,70,71,72,92,93,100,101,102,104,105,109,110,111,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,143,144,145,146,147,152,153,154,177,179,180,181,197,198,206,215,216,220,221,230,],[-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,-114,113,-88,-93,-83,-84,-85,-86,-87,-114,-88,152,-28,-29,-82,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,170,172,173,176,-114,178,-17,-18,-26,-114,-113,204,-20,-28,-27,213,-88,-114,233,234,-19,-21,244,]),'RBRACKET':([21,22,43,50,51,52,53,54,55,56,71,72,92,93,100,101,102,112,113,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,152,154,159,188,],[-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,-88,-93,-83,-84,-85,-86,-87,154,-82,158,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-26,-113,186,208,]),'COLON':([21,22,43,50,51,52,53,54,55,56,71,72,92,93,100,101,102,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,152,154,],[-94,-89,-111,-90,-91,-92,-95,-112,-96,-97,-88,-93,-83,-84,-85,-86,-87,-82,169,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-26,-113,]),'LBRACE':([43,75,119,173,176,178,204,233,234,245,],[-111,118,167,200,203,205,218,246,247,250,]),'ELSE':([232,],[245,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,3,200,203,205,218,246,247,250,],[2,57,214,217,219,236,251,252,253,]),'stmt':([0,3,13,200,203,205,218,246,247,250,],[3,3,59,3,3,3,3,3,3,3,]),'empty':([0,3,13,68,104,144,153,200,203,205,206,218,246,247,250,],[4,4,60,111,147,147,111,4,4,4,221,4,4,4,4,]),'fun_declaration':([0,3,13,200,203,205,218,246,247,250,],[5,5,5,5,5,5,5,5,5,5,]),'variable_declaration':([0,3,13,98,200,203,205,218,246,247,250,],[6,6,6,140,6,6,6,6,6,6,6,]),'assignment':([0,3,13,98,200,203,205,218,246,247,250,],[7,7,7,141,7,7,7,7,7,7,7,]),'print_stmt':([0,3,13,200,203,205,218,246,247,250,],[8,8,8,8,8,8,8,8,8,8,]),'control_structure':([0,3,13,200,203,205,218,246,247,250,],[9,9,9,9,9,9,9,9,9,9,]),'function_call':([0,3,13,16,27,47,48,49,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,99,115,117,119,140,141,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[10,10,10,72,72,72,72,72,107,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,137,72,72,157,163,168,72,72,72,72,72,72,197,10,72,72,10,10,224,228,72,10,10,10,10,]),'return_stmt':([0,3,13,200,203,205,218,246,247,250,],[11,11,11,11,11,11,11,11,11,11,]),'break_stmt':([0,3,13,200,203,205,218,246,247,250,],[12,12,12,12,12,12,12,12,12,12,]),'comment':([0,3,13,200,203,205,218,246,247,250,],[13,13,13,13,13,13,13,13,13,13,]),'identifier':([0,3,13,14,16,17,18,19,27,47,48,49,61,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,98,99,115,117,119,140,141,148,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[15,15,15,62,71,73,74,75,71,71,71,71,103,105,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,105,71,142,71,105,160,160,71,71,179,71,71,71,71,198,15,71,71,15,15,105,105,71,15,15,15,15,]),'general_type':([0,3,13,14,98,104,144,200,203,205,206,218,246,247,250,],[17,17,17,63,17,148,148,17,17,17,148,17,17,17,17,]),'list_type':([0,3,13,14,98,200,203,205,218,246,247,250,],[18,18,18,65,18,18,18,18,18,18,18,18,]),'array_type':([0,3,13,14,98,200,203,205,218,246,247,250,],[19,19,19,64,19,19,19,19,19,19,19,19,]),'expression':([0,3,13,16,27,47,48,49,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,99,115,140,141,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[20,20,20,70,95,100,101,102,106,110,112,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,143,155,174,175,180,188,193,195,134,20,215,216,20,20,223,227,230,20,20,20,20,]),'digit':([0,3,13,16,27,47,48,49,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,99,115,116,118,140,141,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,159,165,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'if_stmt':([0,3,13,200,203,205,218,246,247,250,],[24,24,24,24,24,24,24,24,24,24,]),'for_stmt':([0,3,13,200,203,205,218,246,247,250,],[25,25,25,25,25,25,25,25,25,25,]),'while_stmt':([0,3,13,200,203,205,218,246,247,250,],[26,26,26,26,26,26,26,26,26,26,]),'string':([0,3,13,16,27,47,48,49,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,99,115,140,141,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'boolean':([0,3,13,16,27,47,48,49,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,99,115,140,141,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'array_access':([0,3,13,16,27,47,48,49,67,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,99,115,140,141,153,162,167,169,171,200,201,202,203,205,207,209,212,218,246,247,250,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'return_type':([14,],[61,]),'arg_list':([68,153,],[109,181,]),'params':([104,144,],[145,177,]),'param':([104,144,206,],[146,146,220,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','yacc.py',11),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','yacc.py',18),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','yacc.py',19),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','yacc.py',20),
  ('stmt -> fun_declaration','stmt',1,'p_stmt','yacc.py',32),
  ('stmt -> variable_declaration','stmt',1,'p_stmt','yacc.py',33),
  ('stmt -> assignment','stmt',1,'p_stmt','yacc.py',34),
  ('stmt -> print_stmt','stmt',1,'p_stmt','yacc.py',35),
  ('stmt -> control_structure','stmt',1,'p_stmt','yacc.py',36),
  ('stmt -> function_call SEMICOLON','stmt',2,'p_stmt','yacc.py',37),
  ('stmt -> return_stmt','stmt',1,'p_stmt','yacc.py',38),
  ('stmt -> break_stmt','stmt',1,'p_stmt','yacc.py',39),
  ('stmt -> comment stmt','stmt',2,'p_stmt','yacc.py',40),
  ('stmt -> empty','stmt',1,'p_stmt','yacc.py',41),
  ('fun_declaration -> FUN return_type identifier LPAREN params RPAREN LBRACE stmt_list RBRACE','fun_declaration',9,'p_fun_declaration','yacc.py',48),
  ('fun_declaration -> FUN identifier LPAREN params RPAREN LBRACE stmt_list RBRACE','fun_declaration',8,'p_fun_declaration','yacc.py',49),
  ('params -> param','params',1,'p_params','yacc.py',60),
  ('params -> empty','params',1,'p_params','yacc.py',61),
  ('param -> general_type identifier COMMA param','param',4,'p_param','yacc.py',68),
  ('param -> general_type identifier','param',2,'p_param','yacc.py',69),
  ('param -> empty','param',1,'p_param','yacc.py',70),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','yacc.py',82),
  ('print_stmt -> PRINT LPAREN expression COMMA function_call COMMA expression RPAREN SEMICOLON','print_stmt',9,'p_print_stmt','yacc.py',83),
  ('print_stmt -> PRINT LPAREN expression COMMA function_call RPAREN SEMICOLON','print_stmt',7,'p_print_stmt','yacc.py',84),
  ('print_stmt -> PRINT LPAREN function_call RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','yacc.py',85),
  ('function_call -> identifier LPAREN arg_list RPAREN','function_call',4,'p_function_call','yacc.py',99),
  ('arg_list -> expression COMMA arg_list','arg_list',3,'p_arg_list','yacc.py',106),
  ('arg_list -> expression','arg_list',1,'p_arg_list','yacc.py',107),
  ('arg_list -> empty','arg_list',1,'p_arg_list','yacc.py',108),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','yacc.py',118),
  ('variable_declaration -> general_type identifier SEMICOLON','variable_declaration',3,'p_variable_declaration','yacc.py',125),
  ('variable_declaration -> list_type identifier LBRACKET RBRACKET SEMICOLON','variable_declaration',5,'p_variable_declaration','yacc.py',126),
  ('variable_declaration -> array_type identifier LBRACE RBRACE SEMICOLON','variable_declaration',5,'p_variable_declaration','yacc.py',127),
  ('assignment -> general_type identifier ASSIGN expression SEMICOLON','assignment',5,'p_assignment','yacc.py',134),
  ('assignment -> general_type identifier ASSIGN NULL SEMICOLON','assignment',5,'p_assignment','yacc.py',135),
  ('assignment -> general_type identifier ASSIGN function_call SEMICOLON','assignment',5,'p_assignment','yacc.py',136),
  ('assignment -> list_type identifier ASSIGN NULL SEMICOLON','assignment',5,'p_assignment','yacc.py',137),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN NULL SEMICOLON','assignment',8,'p_assignment','yacc.py',138),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN expression SEMICOLON','assignment',8,'p_assignment','yacc.py',139),
  ('assignment -> list_type identifier ASSIGN LBRACKET expression RBRACKET SEMICOLON','assignment',7,'p_assignment','yacc.py',140),
  ('assignment -> list_type identifier LBRACKET digit RBRACKET ASSIGN function_call SEMICOLON','assignment',8,'p_assignment','yacc.py',141),
  ('assignment -> list_type identifier ASSIGN function_call SEMICOLON','assignment',5,'p_assignment','yacc.py',142),
  ('assignment -> array_type identifier ASSIGN NULL SEMICOLON','assignment',5,'p_assignment','yacc.py',143),
  ('assignment -> array_type identifier LBRACE digit RBRACE ASSIGN NULL SEMICOLON','assignment',8,'p_assignment','yacc.py',144),
  ('assignment -> array_type identifier LBRACE digit RBRACE ASSIGN expression SEMICOLON','assignment',8,'p_assignment','yacc.py',145),
  ('assignment -> array_type identifier LBRACE digit RBRACE ASSIGN function_call SEMICOLON','assignment',8,'p_assignment','yacc.py',146),
  ('assignment -> array_type identifier ASSIGN LBRACE expression RBRACE SEMICOLON','assignment',7,'p_assignment','yacc.py',147),
  ('assignment -> array_type identifier ASSIGN function_call SEMICOLON','assignment',5,'p_assignment','yacc.py',148),
  ('assignment -> identifier ASSIGN expression SEMICOLON','assignment',4,'p_assignment','yacc.py',149),
  ('assignment -> identifier ASSIGN function_call SEMICOLON','assignment',4,'p_assignment','yacc.py',150),
  ('assignment -> identifier ASSIGN NULL SEMICOLON','assignment',4,'p_assignment','yacc.py',151),
  ('control_structure -> if_stmt','control_structure',1,'p_control_structure','yacc.py',173),
  ('control_structure -> for_stmt','control_structure',1,'p_control_structure','yacc.py',174),
  ('control_structure -> while_stmt','control_structure',1,'p_control_structure','yacc.py',175),
  ('break_stmt -> BREAK SEMICOLON','break_stmt',2,'p_break_stmt','yacc.py',182),
  ('comment -> COMMENT','comment',1,'p_comment','yacc.py',189),
  ('return_type -> general_type','return_type',1,'p_return_type','yacc.py',196),
  ('return_type -> array_type','return_type',1,'p_return_type','yacc.py',197),
  ('return_type -> list_type','return_type',1,'p_return_type','yacc.py',198),
  ('return_type -> VOID','return_type',1,'p_return_type','yacc.py',199),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE','if_stmt',7,'p_if_stmt','yacc.py',206),
  ('if_stmt -> IF LPAREN expression RPAREN LBRACE stmt_list RBRACE ELSE LBRACE stmt_list RBRACE','if_stmt',11,'p_if_stmt','yacc.py',207),
  ('if_stmt -> expression QUESTION expression COLON expression SEMICOLON','if_stmt',6,'p_if_stmt','yacc.py',208),
  ('for_stmt -> FOR LPAREN variable_declaration expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE','for_stmt',10,'p_for_stmt','yacc.py',220),
  ('for_stmt -> FOR LPAREN assignment expression SEMICOLON expression RPAREN LBRACE stmt_list RBRACE','for_stmt',10,'p_for_stmt','yacc.py',221),
  ('while_stmt -> WHILE LPAREN expression RPAREN LBRACE stmt_list RBRACE','while_stmt',7,'p_while_stmt','yacc.py',228),
  ('expression -> expression PLUS expression','expression',3,'p_expression','yacc.py',235),
  ('expression -> expression MINUS expression','expression',3,'p_expression','yacc.py',236),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','yacc.py',237),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','yacc.py',238),
  ('expression -> expression MODULUS expression','expression',3,'p_expression','yacc.py',239),
  ('expression -> expression AND expression','expression',3,'p_expression','yacc.py',240),
  ('expression -> expression OR expression','expression',3,'p_expression','yacc.py',241),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','yacc.py',242),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','yacc.py',243),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','yacc.py',244),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','yacc.py',245),
  ('expression -> expression LESSTHANEQUAL expression','expression',3,'p_expression','yacc.py',246),
  ('expression -> expression GREATERTHANEQUAL expression','expression',3,'p_expression','yacc.py',247),
  ('expression -> expression COMMA expression','expression',3,'p_expression','yacc.py',248),
  ('expression -> expression POW expression','expression',3,'p_expression','yacc.py',249),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc.py',250),
  ('expression -> expression INCREMENT','expression',2,'p_expression','yacc.py',251),
  ('expression -> expression DECREMENT','expression',2,'p_expression','yacc.py',252),
  ('expression -> INCREMENT expression','expression',2,'p_expression','yacc.py',253),
  ('expression -> DECREMENT expression','expression',2,'p_expression','yacc.py',254),
  ('expression -> NOT expression','expression',2,'p_expression','yacc.py',255),
  ('expression -> identifier','expression',1,'p_expression','yacc.py',256),
  ('expression -> digit','expression',1,'p_expression','yacc.py',257),
  ('expression -> string','expression',1,'p_expression','yacc.py',258),
  ('expression -> boolean','expression',1,'p_expression','yacc.py',259),
  ('expression -> array_access','expression',1,'p_expression','yacc.py',260),
  ('expression -> function_call','expression',1,'p_expression','yacc.py',261),
  ('expression -> NULL','expression',1,'p_expression','yacc.py',262),
  ('digit -> NUMBER','digit',1,'p_digit','yacc.py',294),
  ('boolean -> TRUE','boolean',1,'p_boolean','yacc.py',301),
  ('boolean -> FALSE','boolean',1,'p_boolean','yacc.py',302),
  ('general_type -> INT','general_type',1,'p_general_type','yacc.py',309),
  ('general_type -> FLOAT','general_type',1,'p_general_type','yacc.py',310),
  ('general_type -> DOUBLE','general_type',1,'p_general_type','yacc.py',311),
  ('general_type -> STRING','general_type',1,'p_general_type','yacc.py',312),
  ('general_type -> BOOLEAN','general_type',1,'p_general_type','yacc.py',313),
  ('array_type -> INTARRAY','array_type',1,'p_array_type','yacc.py',320),
  ('array_type -> FLOATARRAY','array_type',1,'p_array_type','yacc.py',321),
  ('array_type -> STRINGARRAY','array_type',1,'p_array_type','yacc.py',322),
  ('array_type -> DOUBLEARRAY','array_type',1,'p_array_type','yacc.py',323),
  ('list_type -> INTLIST','list_type',1,'p_list_type','yacc.py',330),
  ('list_type -> FLOATLIST','list_type',1,'p_list_type','yacc.py',331),
  ('list_type -> STRINGLIST','list_type',1,'p_list_type','yacc.py',332),
  ('list_type -> DOUBLELIST','list_type',1,'p_list_type','yacc.py',333),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','yacc.py',340),
  ('string -> STRING_LITERAL','string',1,'p_string_literal','yacc.py',347),
  ('array_access -> identifier LBRACKET expression RBRACKET','array_access',4,'p_array_access','yacc.py',354),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',361),
]
